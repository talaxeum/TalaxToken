{
	"id": "768ccd341ab400593e83ede2fb3fa936",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakable-2.0.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @notice Error handling message for Modifier\n */\nerror Function__notAuthorized();\nerror Function__notAVoter();\nerror Function__votingNotAvailable();\n\n/**\n * @notice Error handling message for Staking functions\n */\nerror Staking__cannotStakeNothing();\nerror Staking__userIsStaker();\nerror Staking__penaltyExceed3Percent();\nerror Staking__airdropExceed20Percent();\nerror Staking__noStakingFound();\nerror Staking_noStakingPackageFound();\n\n/**\n * @notice Error handling message for Airdrop functions\n */\nerror Airdrop__claimableOnceAWeek();\n\n/**\n * @notice Error handling message for Voting functions\n */\nerror Voting__votingIsRunning();\nerror Voting__alreadyVoted();\nerror Voting__notYetVoted();\nerror Voting__notEnoughVoters();\n\ncontract Staking is ReentrancyGuard, Ownable {\n    /**\n     * @notice Constructor since this contract is not meant to be used without inheritance\n     * push once to stakeholders for it to work properly\n     */\n\n    struct Voter {\n        bool votingRight;\n        mapping(uint256 => bool) voted;\n    }\n\n    mapping(uint256 => uint256) internal stakingPackage;\n\n    uint256 public stakingPenaltyRate;\n    uint256 public airdropRate;\n    uint256 public airdropSince;\n\n    bool internal _votingStatus;\n    uint256 internal _votingId;\n    uint256 public totalVoters;\n    mapping(address => Voter) public voters;\n    mapping(uint256 => uint256) public votedUsers;\n\n    address public token_address;\n\n    constructor(address token) {\n        //Staking penalty and Airdrop in 0.1 times percentage\n        stakingPenaltyRate = 15;\n        airdropRate = 80;\n\n        token_address = token;\n\n        stakingPackage[90 days] = 6;\n        stakingPackage[180 days] = 7;\n        stakingPackage[365 days] = 8;\n    }\n\n    /**\n     * @notice\n     * A stake struct is used to represent the way we store stakes,\n     * A Stake will contain the users address, the amount staked and a timestamp,\n     * Since which is when the stake was made\n     */\n    struct Stake {\n        uint256 amount;\n        uint256 since;\n        uint256 rewardAPY;\n        uint256 releaseTime;\n        // This claimable field is new and used to tell how big of a reward is currently available\n        uint256 claimable;\n        uint256 claimableAirdrop;\n        uint256 latestClaimDrop;\n    }\n\n    /**\n     * @notice\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\n     */\n    struct StakingSummary {\n        uint256 total_amount;\n        uint256 penalty;\n        Stake stake;\n    }\n\n    /**\n     * @notice\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\n     */\n    mapping(address => Stake) internal stakeholders;\n\n    /**\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\n     */\n    event Staked(\n        address indexed user,\n        uint256 amount,\n        uint256 timestamp,\n        uint256 releaseTime\n    );\n\n    event PenaltyChanged(uint256 amount);\n    event AirdropChanged(uint256 amount);\n\n    /* ------------------------------------------ Modifier ------------------------------------------ */\n\n    function _isVoter() internal view {\n        // require(voters[msg.sender].votingRight == true, \"You are not a voter\");\n        if (voters[msg.sender].votingRight == false) {\n            revert Function__notAVoter();\n        }\n    }\n\n    modifier isVoter() {\n        _isVoter();\n        _;\n    }\n\n    function _checkVotingStatus() internal view {\n        // require(_votingStatus, \"Voting is not available\");\n        if (!_votingStatus) {\n            revert Function__votingNotAvailable();\n        }\n    }\n\n    modifier votingStatusTrue() {\n        _checkVotingStatus();\n        _;\n    }\n\n    /* ---------------------------------------------- - --------------------------------------------- */\n\n    /**\n     * @notice\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n     * StakeID\n     */\n    function stake(\n        address user,\n        uint256 amount,\n        uint256 stakePeriod\n    ) external nonReentrant onlyOwner {\n        // Simple check so that user does not stake 0\n        // require(amount > 0, \"Cannot stake nothing\");\n        if (amount <= 0) {\n            revert Staking__cannotStakeNothing();\n        }\n        // require(stakeholders[user].amount == 0, \"User is a staker\");\n        if (stakeholders[user].amount != 0) {\n            revert Staking__userIsStaker();\n        }\n\n        if (stakingPackage[stakePeriod] == 0) {\n            revert Staking_noStakingPackageFound();\n        }\n\n        totalVoters += 1;\n        voters[user].votingRight = true;\n\n        // block.timestamp = timestamp of the current block in seconds since the epoch\n        uint256 timestamp = block.timestamp;\n\n        // Use the index to push a new Stake\n        // push a newly created Stake with the current block timestamp.\n\n        stakeholders[user] = Stake(\n            amount,\n            timestamp,\n            stakingPackage[stakePeriod],\n            (stakePeriod + timestamp),\n            0,\n            0,\n            0\n        );\n\n        SafeERC20.safeTransferFrom(\n            IERC20(token_address),\n            msg.sender,\n            address(this),\n            amount\n        );\n        // Emit an event that the stake has occured\n        emit Staked(user, amount, timestamp, (stakePeriod + timestamp));\n    }\n\n    function changePenaltyFee(uint256 amount) external onlyOwner {\n        // require(amount <= 30, \"Penalty fee cannot exceed 3 percent.\");\n        if (amount > 30) {\n            revert Staking__penaltyExceed3Percent();\n        }\n        stakingPenaltyRate = amount;\n        emit PenaltyChanged(amount);\n    }\n\n    function _calculateStakingDuration(uint256 since)\n        internal\n        view\n        returns (uint256)\n    {\n        // times by 1e24 so theres no missing value\n        return ((block.timestamp - since) * 1e24) / 365 days;\n    }\n\n    function _calculateStakeReward(Stake memory user_stake)\n        internal\n        view\n        returns (uint256)\n    {\n        if (user_stake.amount == 0) {\n            return 0;\n        }\n        // divided by 1e26 because 1e2 for APY and 1e24 from calculate staking duration\n        return\n            (user_stake.amount *\n                user_stake.rewardAPY *\n                _calculateStakingDuration(user_stake.since)) / 1e26;\n    }\n\n    function _calculateStakingWithPenalty(uint256 amount, uint256 reward)\n        internal\n        view\n        returns (uint256, uint256)\n    {\n        if (amount == 0) {\n            return (0, 0);\n        }\n        return (\n            amount - ((amount * stakingPenaltyRate) / 1000),\n            reward - ((reward * stakingPenaltyRate) / 1000)\n        );\n    }\n\n    /**\n     * @notice\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\n     * Will return the amount to MINT onto the account\n     * Will also _calculateStakeReward and reset timer\n     */\n\n    // ! TODO: ganti function _calculateStakingWithPenalty dan _calculateStakingReward menjadi single return\n    function withdrawStake() external nonReentrant {\n        // TODO: can be simplified\n        // Grab user_index which is the index to use to grab the Stake[]\n        Stake memory user_stake = stakeholders[msg.sender];\n        uint256 reward = _calculateStakeReward(user_stake);\n\n        delete stakeholders[msg.sender];\n        totalVoters -= 1;\n        delete voters[msg.sender].voted[_votingId];\n\n        if (user_stake.releaseTime > block.timestamp) {\n            (\n                uint256 amount_reduced,\n                uint256 reward_reduced\n            ) = _calculateStakingWithPenalty(user_stake.amount, reward);\n\n            SafeERC20.safeTransfer(\n                IERC20(token_address),\n                msg.sender,\n                (amount_reduced + reward_reduced)\n            );\n        } else {\n            SafeERC20.safeTransfer(\n                IERC20(token_address),\n                msg.sender,\n                (user_stake.amount + reward)\n            );\n        }\n    }\n\n    function hasStake() external view returns (StakingSummary memory) {\n        Stake memory user_stake = stakeholders[msg.sender];\n        // require(user_stake.amount > 0, \"No Stake Found\");\n        if (user_stake.amount <= 0) {\n            revert Staking__noStakingFound();\n        }\n        StakingSummary memory summary = StakingSummary(0, 0, user_stake);\n\n        uint256 reward = _calculateStakeReward(user_stake);\n\n        if (summary.stake.releaseTime > block.timestamp) {\n            summary.penalty =\n                ((user_stake.amount * stakingPenaltyRate) / 1000) +\n                ((reward * stakingPenaltyRate) / 1000);\n        }\n\n        if (calculateWeek(user_stake.latestClaimDrop) > 0) {\n            uint256 airdrop = _calculateAirdrop(user_stake.amount);\n            summary.stake.claimableAirdrop = airdrop;\n        } else {\n            summary.stake.claimableAirdrop = 0;\n        }\n\n        summary.stake.claimable = reward;\n        summary.total_amount = user_stake.amount;\n\n        return summary;\n    }\n\n    /* -------------------------------------- Airdrop functions ------------------------------------- */\n\n    function startAirdrop() external onlyOwner {\n        airdropSince = block.timestamp;\n    }\n\n    function changeAirdropPercentage(uint256 amount) external onlyOwner {\n        if (amount > 200) {\n            revert Staking__airdropExceed20Percent();\n        }\n        airdropRate = amount;\n        emit AirdropChanged(amount);\n    }\n\n    function _blockTimestamp() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    function calculateWeek(uint256 timestamp) public view returns (uint256) {\n        return (block.timestamp - timestamp) / 7 days;\n    }\n\n    function _calculateAirdrop(uint256 stakeAmount)\n        internal\n        view\n        returns (uint256)\n    {\n        return ((stakeAmount * airdropRate) / 1000) / 52 weeks;\n    }\n\n    function claimAirdrop(address user) external {\n        // TODO: can be simplified if using address\n        Stake storage staker = stakeholders[user];\n\n        if (staker.amount > 0) {\n            if (calculateWeek(staker.latestClaimDrop) == 0) {\n                revert Airdrop__claimableOnceAWeek();\n            }\n\n            staker.claimableAirdrop = 0;\n            staker.latestClaimDrop = block.timestamp;\n\n            SafeERC20.safeTransfer(\n                IERC20(token_address),\n                msg.sender,\n                _calculateAirdrop(staker.amount)\n            );\n        }\n    }\n\n    /* -------------------------------- Voting Functions for DAO Pool ------------------------------- */\n    // ! Replaceable with Governance token\n\n    function getVoters(address user) external view returns (bool, bool) {\n        return (voters[user].votingRight, voters[user].voted[_votingId]);\n    }\n\n    // TODO: can be simplified since not connected directly\n    function startVoting() external nonReentrant onlyOwner {\n        if (_votingStatus == true) {\n            revert Voting__votingIsRunning();\n        }\n\n        _votingStatus = true;\n        _votingId += 1;\n    }\n\n    function vote() public nonReentrant votingStatusTrue isVoter {\n        if (voters[msg.sender].voted[_votingId] == true) {\n            revert Voting__alreadyVoted();\n        }\n\n        voters[msg.sender].voted[_votingId] = true;\n        votedUsers[_votingId] += 1;\n    }\n\n    function retractVote() public nonReentrant votingStatusTrue isVoter {\n        if (voters[msg.sender].voted[_votingId] == false) {\n            revert Voting__notYetVoted();\n        }\n\n        voters[msg.sender].voted[_votingId] == false;\n        votedUsers[_votingId] -= 1;\n    }\n\n    function getVotingResult()\n        external\n        view\n        onlyOwner\n        votingStatusTrue\n        returns (bool)\n    {\n        if (totalVoters <= 1) {\n            revert Voting__notEnoughVoters();\n        }\n        uint256 half_voters = (totalVoters * 5) / 10;\n\n        if (votedUsers[_votingId] > half_voters) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function stopVoting() external onlyOwner votingStatusTrue {\n        _votingStatus = false;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 115,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xBF PUSH20 0xC3865EAAF80D277DD1C60B6B2E822B5A3D224D47 DUP14 DUP5 0xE6 EQ SWAP10 0xCE SWAP9 SUB DUP1 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "645:3270:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xBF PUSH20 0xC3865EAAF80D277DD1C60B6B2E822B5A3D224D47 DUP14 DUP5 0xE6 EQ SWAP10 0xCE SWAP9 SUB DUP1 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "645:3270:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xC SUB 0x4A DUP11 0xC SWAP13 BLOCKHASH 0xEB BALANCE PUSH7 0xD9FB5A40DC6087 SLOAD DUP4 SWAP3 EQ BYTE PUSH16 0xF32CC1C40F87B764736F6C634300080B STOP CALLER ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xC SUB 0x4A DUP11 0xC SWAP13 BLOCKHASH 0xEB BALANCE PUSH7 0xD9FB5A40DC6087 SLOAD DUP4 SWAP3 EQ BYTE PUSH16 0xF32CC1C40F87B764736F6C634300080B STOP CALLER ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stakable-2.0.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Airdrop__claimableOnceAWeek",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Function__notAVoter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Function__votingNotAvailable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__airdropExceed20Percent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__cannotStakeNothing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__noStakingFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__penaltyExceed3Percent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__userIsStaker",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking_noStakingPackageFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__alreadyVoted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__notEnoughVoters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__notYetVoted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__votingIsRunning",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AirdropChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_blockTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "calculateWeek",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeAirdropPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changePenaltyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getVoters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVotingResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penalty",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimableAirdrop",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "latestClaimDrop",
													"type": "uint256"
												}
											],
											"internalType": "struct Staking.Stake",
											"name": "stake",
											"type": "tuple"
										}
									],
									"internalType": "struct Staking.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retractVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakePeriod",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token_address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "votingRight",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakable-2.0.sol\":980:12683  contract Staking is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakable-2.0.sol\":1680:1981  constructor(address token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/Stakable-2.0.sol\":1800:1802  15 */\n  0x0f\n    /* \"contracts/Stakable-2.0.sol\":1779:1797  stakingPenaltyRate */\n  0x03\n    /* \"contracts/Stakable-2.0.sol\":1779:1802  stakingPenaltyRate = 15 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable-2.0.sol\":1826:1828  80 */\n  0x50\n    /* \"contracts/Stakable-2.0.sol\":1812:1823  airdropRate */\n  0x04\n    /* \"contracts/Stakable-2.0.sol\":1812:1828  airdropRate = 80 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable-2.0.sol\":1855:1860  token */\n  dup1\n    /* \"contracts/Stakable-2.0.sol\":1839:1852  token_address */\n  0x0b\n  0x00\n    /* \"contracts/Stakable-2.0.sol\":1839:1860  token_address = token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable-2.0.sol\":1897:1898  6 */\n  0x06\n    /* \"contracts/Stakable-2.0.sol\":1871:1885  stakingPackage */\n  0x02\n    /* \"contracts/Stakable-2.0.sol\":1871:1894  stakingPackage[90 days] */\n  0x00\n    /* \"contracts/Stakable-2.0.sol\":1886:1893  90 days */\n  0x76a700\n    /* \"contracts/Stakable-2.0.sol\":1871:1894  stakingPackage[90 days] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Stakable-2.0.sol\":1871:1898  stakingPackage[90 days] = 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable-2.0.sol\":1935:1936  7 */\n  0x07\n    /* \"contracts/Stakable-2.0.sol\":1908:1922  stakingPackage */\n  0x02\n    /* \"contracts/Stakable-2.0.sol\":1908:1932  stakingPackage[180 days] */\n  0x00\n    /* \"contracts/Stakable-2.0.sol\":1923:1931  180 days */\n  0xed4e00\n    /* \"contracts/Stakable-2.0.sol\":1908:1932  stakingPackage[180 days] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Stakable-2.0.sol\":1908:1936  stakingPackage[180 days] = 7 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable-2.0.sol\":1973:1974  8 */\n  0x08\n    /* \"contracts/Stakable-2.0.sol\":1946:1960  stakingPackage */\n  0x02\n    /* \"contracts/Stakable-2.0.sol\":1946:1970  stakingPackage[365 days] */\n  0x00\n    /* \"contracts/Stakable-2.0.sol\":1961:1969  365 days */\n  0x01e13380\n    /* \"contracts/Stakable-2.0.sol\":1946:1970  stakingPackage[365 days] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Stakable-2.0.sol\":1946:1974  stakingPackage[365 days] = 8 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable-2.0.sol\":1680:1981  constructor(address token) {... */\n  pop\n    /* \"contracts/Stakable-2.0.sol\":980:12683  contract Staking is ReentrancyGuard, Ownable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_30\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_32\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_33:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_35\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":932:1051   */\ntag_37:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_39\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Stakable-2.0.sol\":980:12683  contract Staking is ReentrancyGuard, Ownable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakable-2.0.sol\":980:12683  contract Staking is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8c8e8fee\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xbed9d861\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd2a569c3\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd2a569c3\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd5dbdf1b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfab2f86b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xbed9d861\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc63aa3e7\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcb79c2e1\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x8c8e8fee\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa143a5f2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb5d9df83\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb87da76d\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x632a9a52\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x632a9a52\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x65f8c6c5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x671d2b75\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8891cf0d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8c63f97f\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x070c8b74\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0c51b88f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x10486b6a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ec6b60a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2d15cc04\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5f5300ff\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":11889:12167  function retractVote() public nonReentrant votingStatusTrue isVoter {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":4306:5733  function stake(... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":8536:9560  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":11398:11608  function startVoting() external nonReentrant onlyOwner {... */\n    tag_6:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":11183:11332  function getVoters(address user) external view returns (bool, bool) {... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap3\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":1516:1542  uint256 public totalVoters */\n    tag_8:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":11614:11883  function vote() public nonReentrant votingStatusTrue isVoter {... */\n    tag_9:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":10435:11028  function claimAirdrop(address user) external {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":12173:12579  function getVotingResult()... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":1385:1411  uint256 public airdropRate */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":5739:6045  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":1645:1673  address public token_address */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":1593:1638  mapping(uint256 => uint256) public votedUsers */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":1548:1587  mapping(address => Voter) public voters */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":10110:10244  function calculateWeek(uint256 timestamp) public view returns (uint256) {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":1417:1444  uint256 public airdropSince */\n    tag_20:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":7546:8530  function withdrawStake() external nonReentrant {... */\n    tag_21:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":10008:10104  function _blockTimestamp() public view returns (uint256) {... */\n    tag_22:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":1346:1379  uint256 public stakingPenaltyRate */\n    tag_23:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable-2.0.sol\":9672:9762  function startAirdrop() external onlyOwner {... */\n    tag_24:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":9768:10002  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n    tag_25:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":12585:12681  function stopVoting() external onlyOwner votingStatusTrue {... */\n    tag_27:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/Stakable-2.0.sol\":11889:12167  function retractVote() public nonReentrant votingStatusTrue isVoter {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":3951:3971  _checkVotingStatus() */\n      tag_117\n        /* \"contracts/Stakable-2.0.sol\":3951:3969  _checkVotingStatus */\n      tag_118\n        /* \"contracts/Stakable-2.0.sol\":3951:3971  _checkVotingStatus() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Stakable-2.0.sol\":3669:3679  _isVoter() */\n      tag_120\n        /* \"contracts/Stakable-2.0.sol\":3669:3677  _isVoter */\n      tag_121\n        /* \"contracts/Stakable-2.0.sol\":3669:3679  _isVoter() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/Stakable-2.0.sol\":12010:12015  false */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11971:12015  voters[msg.sender].voted[_votingId] == false */\n      iszero\n      iszero\n        /* \"contracts/Stakable-2.0.sol\":11971:11977  voters */\n      0x09\n        /* \"contracts/Stakable-2.0.sol\":11971:11989  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11978:11988  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":11971:11989  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":11971:11995  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable-2.0.sol\":11971:12006  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11996:12005  _votingId */\n      sload(0x07)\n        /* \"contracts/Stakable-2.0.sol\":11971:12006  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable-2.0.sol\":11971:12015  voters[msg.sender].voted[_votingId] == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable-2.0.sol\":11967:12070  if (voters[msg.sender].voted[_votingId] == false) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":12038:12059  Voting__notYetVoted() */\n      mload(0x40)\n      0x8b74220000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":11967:12070  if (voters[msg.sender].voted[_votingId] == false) {... */\n    tag_123:\n        /* \"contracts/Stakable-2.0.sol\":12119:12124  false */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":12080:12124  voters[msg.sender].voted[_votingId] == false */\n      iszero\n      iszero\n        /* \"contracts/Stakable-2.0.sol\":12080:12086  voters */\n      0x09\n        /* \"contracts/Stakable-2.0.sol\":12080:12098  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":12087:12097  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":12080:12098  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":12080:12104  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable-2.0.sol\":12080:12115  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":12105:12114  _votingId */\n      sload(0x07)\n        /* \"contracts/Stakable-2.0.sol\":12080:12115  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":12080:12124  voters[msg.sender].voted[_votingId] == false */\n      pop\n        /* \"contracts/Stakable-2.0.sol\":12159:12160  1 */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":12134:12144  votedUsers */\n      0x0a\n        /* \"contracts/Stakable-2.0.sol\":12134:12155  votedUsers[_votingId] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":12145:12154  _votingId */\n      sload(0x07)\n        /* \"contracts/Stakable-2.0.sol\":12134:12155  votedUsers[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":12134:12160  votedUsers[_votingId] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":11889:12167  function retractVote() public nonReentrant votingStatusTrue isVoter {... */\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":4306:5733  function stake(... */\n    tag_37:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_115\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/Stakable-2.0.sol\":4568:4569  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":4558:4564  amount */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":4558:4569  amount <= 0 */\n      gt\n        /* \"contracts/Stakable-2.0.sol\":4554:4632  if (amount <= 0) {... */\n      tag_137\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":4592:4621  Staking__cannotStakeNothing() */\n      mload(0x40)\n      0x88b440d600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":4554:4632  if (amount <= 0) {... */\n    tag_137:\n        /* \"contracts/Stakable-2.0.sol\":4746:4747  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":4717:4729  stakeholders */\n      0x0c\n        /* \"contracts/Stakable-2.0.sol\":4717:4735  stakeholders[user] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":4730:4734  user */\n      dup6\n        /* \"contracts/Stakable-2.0.sol\":4717:4735  stakeholders[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":4717:4742  stakeholders[user].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Stakable-2.0.sol\":4717:4747  stakeholders[user].amount != 0 */\n      eq\n        /* \"contracts/Stakable-2.0.sol\":4713:4804  if (stakeholders[user].amount != 0) {... */\n      tag_138\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":4770:4793  Staking__userIsStaker() */\n      mload(0x40)\n      0x04462d2700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":4713:4804  if (stakeholders[user].amount != 0) {... */\n    tag_138:\n        /* \"contracts/Stakable-2.0.sol\":4849:4850  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":4818:4832  stakingPackage */\n      0x02\n        /* \"contracts/Stakable-2.0.sol\":4818:4845  stakingPackage[stakePeriod] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":4833:4844  stakePeriod */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":4818:4845  stakingPackage[stakePeriod] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stakable-2.0.sol\":4818:4850  stakingPackage[stakePeriod] == 0 */\n      eq\n        /* \"contracts/Stakable-2.0.sol\":4814:4915  if (stakingPackage[stakePeriod] == 0) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":4873:4904  Staking_noStakingPackageFound() */\n      mload(0x40)\n      0x95377be400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":4814:4915  if (stakingPackage[stakePeriod] == 0) {... */\n    tag_139:\n        /* \"contracts/Stakable-2.0.sol\":4940:4941  1 */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":4925:4936  totalVoters */\n      0x08\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":4925:4941  totalVoters += 1 */\n      dup3\n      dup3\n      sload\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":4978:4982  true */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":4951:4957  voters */\n      0x09\n        /* \"contracts/Stakable-2.0.sol\":4951:4963  voters[user] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":4958:4962  user */\n      dup6\n        /* \"contracts/Stakable-2.0.sol\":4951:4963  voters[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":4951:4975  voters[user].votingRight */\n      0x00\n      add\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":4951:4982  voters[user].votingRight = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":5080:5097  uint256 timestamp */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":5100:5115  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable-2.0.sol\":5080:5115  uint256 timestamp = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":5265:5448  Stake(... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":5284:5290  amount */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":5265:5448  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable-2.0.sol\":5304:5313  timestamp */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":5265:5448  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable-2.0.sol\":5327:5341  stakingPackage */\n      0x02\n        /* \"contracts/Stakable-2.0.sol\":5327:5354  stakingPackage[stakePeriod] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":5342:5353  stakePeriod */\n      dup6\n        /* \"contracts/Stakable-2.0.sol\":5327:5354  stakingPackage[stakePeriod] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stakable-2.0.sol\":5265:5448  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable-2.0.sol\":5383:5392  timestamp */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":5369:5380  stakePeriod */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":5369:5392  stakePeriod + timestamp */\n      tag_142\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_142:\n        /* \"contracts/Stakable-2.0.sol\":5265:5448  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable-2.0.sol\":5407:5408  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":5265:5448  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable-2.0.sol\":5422:5423  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":5265:5448  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable-2.0.sol\":5437:5438  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":5265:5448  Stake(... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":5244:5256  stakeholders */\n      0x0c\n        /* \"contracts/Stakable-2.0.sol\":5244:5262  stakeholders[user] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":5257:5261  user */\n      dup7\n        /* \"contracts/Stakable-2.0.sol\":5244:5262  stakeholders[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":5244:5448  stakeholders[user] = Stake(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":5459:5601  SafeERC20.safeTransferFrom(... */\n      tag_143\n        /* \"contracts/Stakable-2.0.sol\":5506:5519  token_address */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stakable-2.0.sol\":5534:5544  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":5566:5570  this */\n      address\n        /* \"contracts/Stakable-2.0.sol\":5585:5591  amount */\n      dup7\n        /* \"contracts/Stakable-2.0.sol\":5459:5485  SafeERC20.safeTransferFrom */\n      tag_144\n        /* \"contracts/Stakable-2.0.sol\":5459:5601  SafeERC20.safeTransferFrom(... */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Stakable-2.0.sol\":5675:5679  user */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":5668:5726  Staked(user, amount, timestamp, (stakePeriod + timestamp)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n        /* \"contracts/Stakable-2.0.sol\":5681:5687  amount */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":5689:5698  timestamp */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":5715:5724  timestamp */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":5701:5712  stakePeriod */\n      dup7\n        /* \"contracts/Stakable-2.0.sol\":5701:5724  stakePeriod + timestamp */\n      tag_145\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_145:\n        /* \"contracts/Stakable-2.0.sol\":5668:5726  Staked(user, amount, timestamp, (stakePeriod + timestamp)) */\n      mload(0x40)\n      tag_146\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Stakable-2.0.sol\":4434:5733  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":4306:5733  function stake(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":8536:9560  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_39:\n        /* \"contracts/Stakable-2.0.sol\":8579:8600  StakingSummary memory */\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"contracts/Stakable-2.0.sol\":8612:8635  Stake memory user_stake */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":8638:8650  stakeholders */\n      0x0c\n        /* \"contracts/Stakable-2.0.sol\":8638:8662  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":8651:8661  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":8638:8662  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":8612:8662  Stake memory user_stake = stakeholders[msg.sender] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":8758:8759  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":8737:8747  user_stake */\n      dup2\n        /* \"contracts/Stakable-2.0.sol\":8737:8754  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":8737:8759  user_stake.amount <= 0 */\n      gt\n        /* \"contracts/Stakable-2.0.sol\":8733:8818  if (user_stake.amount <= 0) {... */\n      tag_151\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":8782:8807  Staking__noStakingFound() */\n      mload(0x40)\n      0xb018f08700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":8733:8818  if (user_stake.amount <= 0) {... */\n    tag_151:\n        /* \"contracts/Stakable-2.0.sol\":8827:8856  StakingSummary memory summary */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":8859:8891  StakingSummary(0, 0, user_stake) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":8874:8875  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":8859:8891  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable-2.0.sol\":8877:8878  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":8859:8891  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable-2.0.sol\":8880:8890  user_stake */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":8859:8891  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":8827:8891  StakingSummary memory summary = StakingSummary(0, 0, user_stake) */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":8902:8916  uint256 reward */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":8919:8952  _calculateStakeReward(user_stake) */\n      tag_152\n        /* \"contracts/Stakable-2.0.sol\":8941:8951  user_stake */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":8919:8940  _calculateStakeReward */\n      tag_153\n        /* \"contracts/Stakable-2.0.sol\":8919:8952  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Stakable-2.0.sol\":8902:8952  uint256 reward = _calculateStakeReward(user_stake) */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":8995:9010  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable-2.0.sol\":8967:8974  summary */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":8967:8980  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":8967:8992  summary.stake.releaseTime */\n      0x60\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":8967:9010  summary.stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stakable-2.0.sol\":8963:9177  if (summary.stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":9161:9165  1000 */\n      0x03e8\n        /* \"contracts/Stakable-2.0.sol\":9139:9157  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Stakable-2.0.sol\":9130:9136  reward */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":9130:9157  reward * stakingPenaltyRate */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/Stakable-2.0.sol\":9129:9165  (reward * stakingPenaltyRate) / 1000 */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/Stakable-2.0.sol\":9104:9108  1000 */\n      0x03e8\n        /* \"contracts/Stakable-2.0.sol\":9082:9100  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Stakable-2.0.sol\":9062:9072  user_stake */\n      dup6\n        /* \"contracts/Stakable-2.0.sol\":9062:9079  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":9062:9100  user_stake.amount * stakingPenaltyRate */\n      tag_159\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_159:\n        /* \"contracts/Stakable-2.0.sol\":9061:9108  (user_stake.amount * stakingPenaltyRate) / 1000 */\n      tag_160\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_160:\n        /* \"contracts/Stakable-2.0.sol\":9060:9166  ((user_stake.amount * stakingPenaltyRate) / 1000) +... */\n      tag_161\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_161:\n        /* \"contracts/Stakable-2.0.sol\":9026:9033  summary */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":9026:9041  summary.penalty */\n      0x20\n      add\n        /* \"contracts/Stakable-2.0.sol\":9026:9166  summary.penalty =... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":8963:9177  if (summary.stake.releaseTime > block.timestamp) {... */\n    tag_154:\n        /* \"contracts/Stakable-2.0.sol\":9235:9236  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":9191:9232  calculateWeek(user_stake.latestClaimDrop) */\n      tag_162\n        /* \"contracts/Stakable-2.0.sol\":9205:9215  user_stake */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":9205:9231  user_stake.latestClaimDrop */\n      0xc0\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":9191:9204  calculateWeek */\n      tag_89\n        /* \"contracts/Stakable-2.0.sol\":9191:9232  calculateWeek(user_stake.latestClaimDrop) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/Stakable-2.0.sol\":9191:9236  calculateWeek(user_stake.latestClaimDrop) > 0 */\n      gt\n        /* \"contracts/Stakable-2.0.sol\":9187:9436  if (calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":9252:9267  uint256 airdrop */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":9270:9306  _calculateAirdrop(user_stake.amount) */\n      tag_164\n        /* \"contracts/Stakable-2.0.sol\":9288:9298  user_stake */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":9288:9305  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":9270:9287  _calculateAirdrop */\n      tag_165\n        /* \"contracts/Stakable-2.0.sol\":9270:9306  _calculateAirdrop(user_stake.amount) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/Stakable-2.0.sol\":9252:9306  uint256 airdrop = _calculateAirdrop(user_stake.amount) */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":9353:9360  airdrop */\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":9320:9327  summary */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":9320:9333  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":9320:9350  summary.stake.claimableAirdrop */\n      0xa0\n      add\n        /* \"contracts/Stakable-2.0.sol\":9320:9360  summary.stake.claimableAirdrop = airdrop */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":9238:9371  {... */\n      pop\n        /* \"contracts/Stakable-2.0.sol\":9187:9436  if (calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n      jump(tag_166)\n    tag_163:\n        /* \"contracts/Stakable-2.0.sol\":9424:9425  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":9391:9398  summary */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":9391:9404  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":9391:9421  summary.stake.claimableAirdrop */\n      0xa0\n      add\n        /* \"contracts/Stakable-2.0.sol\":9391:9425  summary.stake.claimableAirdrop = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":9187:9436  if (calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n    tag_166:\n        /* \"contracts/Stakable-2.0.sol\":9472:9478  reward */\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":9446:9453  summary */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":9446:9459  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":9446:9469  summary.stake.claimable */\n      0x80\n      add\n        /* \"contracts/Stakable-2.0.sol\":9446:9478  summary.stake.claimable = reward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":9511:9521  user_stake */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":9511:9528  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":9488:9495  summary */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":9488:9508  summary.total_amount */\n      0x00\n      add\n        /* \"contracts/Stakable-2.0.sol\":9488:9528  summary.total_amount = user_stake.amount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":9546:9553  summary */\n      dup2\n        /* \"contracts/Stakable-2.0.sol\":9539:9553  return summary */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":8536:9560  function hasStake() external view returns (StakingSummary memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":11398:11608  function startVoting() external nonReentrant onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_115\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_135\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/Stakable-2.0.sol\":11484:11488  true */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":11467:11488  _votingStatus == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable-2.0.sol\":11467:11480  _votingStatus */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable-2.0.sol\":11467:11488  _votingStatus == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable-2.0.sol\":11463:11547  if (_votingStatus == true) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":11511:11536  Voting__votingIsRunning() */\n      mload(0x40)\n      0x6da4cd2e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":11463:11547  if (_votingStatus == true) {... */\n    tag_176:\n        /* \"contracts/Stakable-2.0.sol\":11573:11577  true */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":11557:11570  _votingStatus */\n      0x06\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11557:11577  _votingStatus = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":11600:11601  1 */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":11587:11596  _votingId */\n      0x07\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11587:11601  _votingId += 1 */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":11398:11608  function startVoting() external nonReentrant onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":11183:11332  function getVoters(address user) external view returns (bool, bool) {... */\n    tag_47:\n        /* \"contracts/Stakable-2.0.sol\":11239:11243  bool */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11245:11249  bool */\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":11269:11275  voters */\n      0x09\n        /* \"contracts/Stakable-2.0.sol\":11269:11281  voters[user] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11276:11280  user */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":11269:11281  voters[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":11269:11293  voters[user].votingRight */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable-2.0.sol\":11295:11301  voters */\n      0x09\n        /* \"contracts/Stakable-2.0.sol\":11295:11307  voters[user] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11302:11306  user */\n      dup6\n        /* \"contracts/Stakable-2.0.sol\":11295:11307  voters[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":11295:11313  voters[user].voted */\n      0x01\n      add\n        /* \"contracts/Stakable-2.0.sol\":11295:11324  voters[user].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11314:11323  _votingId */\n      sload(0x07)\n        /* \"contracts/Stakable-2.0.sol\":11295:11324  voters[user].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable-2.0.sol\":11261:11325  return (voters[user].votingRight, voters[user].voted[_votingId]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable-2.0.sol\":11183:11332  function getVoters(address user) external view returns (bool, bool) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":1516:1542  uint256 public totalVoters */\n    tag_51:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":11614:11883  function vote() public nonReentrant votingStatusTrue isVoter {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_115\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":3951:3971  _checkVotingStatus() */\n      tag_183\n        /* \"contracts/Stakable-2.0.sol\":3951:3969  _checkVotingStatus */\n      tag_118\n        /* \"contracts/Stakable-2.0.sol\":3951:3971  _checkVotingStatus() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/Stakable-2.0.sol\":3669:3679  _isVoter() */\n      tag_185\n        /* \"contracts/Stakable-2.0.sol\":3669:3677  _isVoter */\n      tag_121\n        /* \"contracts/Stakable-2.0.sol\":3669:3679  _isVoter() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/Stakable-2.0.sol\":11728:11732  true */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":11689:11732  voters[msg.sender].voted[_votingId] == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable-2.0.sol\":11689:11695  voters */\n      0x09\n        /* \"contracts/Stakable-2.0.sol\":11689:11707  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11696:11706  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":11689:11707  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":11689:11713  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable-2.0.sol\":11689:11724  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11714:11723  _votingId */\n      sload(0x07)\n        /* \"contracts/Stakable-2.0.sol\":11689:11724  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable-2.0.sol\":11689:11732  voters[msg.sender].voted[_votingId] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable-2.0.sol\":11685:11788  if (voters[msg.sender].voted[_votingId] == true) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":11755:11777  Voting__alreadyVoted() */\n      mload(0x40)\n      0x740e33b000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":11685:11788  if (voters[msg.sender].voted[_votingId] == true) {... */\n    tag_187:\n        /* \"contracts/Stakable-2.0.sol\":11836:11840  true */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":11798:11804  voters */\n      0x09\n        /* \"contracts/Stakable-2.0.sol\":11798:11816  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11805:11815  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":11798:11816  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":11798:11822  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable-2.0.sol\":11798:11833  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11823:11832  _votingId */\n      sload(0x07)\n        /* \"contracts/Stakable-2.0.sol\":11798:11833  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11798:11840  voters[msg.sender].voted[_votingId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":11875:11876  1 */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":11850:11860  votedUsers */\n      0x0a\n        /* \"contracts/Stakable-2.0.sol\":11850:11871  votedUsers[_votingId] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11861:11870  _votingId */\n      sload(0x07)\n        /* \"contracts/Stakable-2.0.sol\":11850:11871  votedUsers[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":11850:11876  votedUsers[_votingId] += 1 */\n      dup3\n      dup3\n      sload\n      tag_188\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_188:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":11614:11883  function vote() public nonReentrant votingStatusTrue isVoter {... */\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":10435:11028  function claimAirdrop(address user) external {... */\n    tag_58:\n        /* \"contracts/Stakable-2.0.sol\":10542:10562  Stake storage staker */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":10565:10577  stakeholders */\n      0x0c\n        /* \"contracts/Stakable-2.0.sol\":10565:10583  stakeholders[user] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":10578:10582  user */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":10565:10583  stakeholders[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":10542:10583  Stake storage staker = stakeholders[user] */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":10614:10615  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":10598:10604  staker */\n      dup2\n        /* \"contracts/Stakable-2.0.sol\":10598:10611  staker.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Stakable-2.0.sol\":10598:10615  staker.amount > 0 */\n      gt\n        /* \"contracts/Stakable-2.0.sol\":10594:11022  if (staker.amount > 0) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":10676:10677  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":10635:10672  calculateWeek(staker.latestClaimDrop) */\n      tag_191\n        /* \"contracts/Stakable-2.0.sol\":10649:10655  staker */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":10649:10671  staker.latestClaimDrop */\n      0x06\n      add\n      sload\n        /* \"contracts/Stakable-2.0.sol\":10635:10648  calculateWeek */\n      tag_89\n        /* \"contracts/Stakable-2.0.sol\":10635:10672  calculateWeek(staker.latestClaimDrop) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/Stakable-2.0.sol\":10635:10677  calculateWeek(staker.latestClaimDrop) == 0 */\n      eq\n        /* \"contracts/Stakable-2.0.sol\":10631:10748  if (calculateWeek(staker.latestClaimDrop) == 0) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":10704:10733  Airdrop__claimableOnceAWeek() */\n      mload(0x40)\n      0xdd8456cc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":10631:10748  if (calculateWeek(staker.latestClaimDrop) == 0) {... */\n    tag_192:\n        /* \"contracts/Stakable-2.0.sol\":10788:10789  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":10762:10768  staker */\n      dup2\n        /* \"contracts/Stakable-2.0.sol\":10762:10785  staker.claimableAirdrop */\n      0x05\n      add\n        /* \"contracts/Stakable-2.0.sol\":10762:10789  staker.claimableAirdrop = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":10828:10843  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable-2.0.sol\":10803:10809  staker */\n      dup2\n        /* \"contracts/Stakable-2.0.sol\":10803:10825  staker.latestClaimDrop */\n      0x06\n      add\n        /* \"contracts/Stakable-2.0.sol\":10803:10843  staker.latestClaimDrop = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":10858:11011  SafeERC20.safeTransfer(... */\n      tag_193\n        /* \"contracts/Stakable-2.0.sol\":10905:10918  token_address */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stakable-2.0.sol\":10937:10947  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":10965:10997  _calculateAirdrop(staker.amount) */\n      tag_194\n        /* \"contracts/Stakable-2.0.sol\":10983:10989  staker */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":10983:10996  staker.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Stakable-2.0.sol\":10965:10982  _calculateAirdrop */\n      tag_165\n        /* \"contracts/Stakable-2.0.sol\":10965:10997  _calculateAirdrop(staker.amount) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/Stakable-2.0.sol\":10858:10880  SafeERC20.safeTransfer */\n      tag_195\n        /* \"contracts/Stakable-2.0.sol\":10858:11011  SafeERC20.safeTransfer(... */\n      jump\t// in\n    tag_193:\n        /* \"contracts/Stakable-2.0.sol\":10594:11022  if (staker.amount > 0) {... */\n    tag_190:\n        /* \"contracts/Stakable-2.0.sol\":10480:11028  {... */\n      pop\n        /* \"contracts/Stakable-2.0.sol\":10435:11028  function claimAirdrop(address user) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":12173:12579  function getVotingResult()... */\n    tag_60:\n        /* \"contracts/Stakable-2.0.sol\":12290:12294  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_135\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/Stakable-2.0.sol\":3951:3971  _checkVotingStatus() */\n      tag_202\n        /* \"contracts/Stakable-2.0.sol\":3951:3969  _checkVotingStatus */\n      tag_118\n        /* \"contracts/Stakable-2.0.sol\":3951:3971  _checkVotingStatus() */\n      jump\t// in\n    tag_202:\n        /* \"contracts/Stakable-2.0.sol\":12329:12330  1 */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":12314:12325  totalVoters */\n      sload(0x08)\n        /* \"contracts/Stakable-2.0.sol\":12314:12330  totalVoters <= 1 */\n      gt\n        /* \"contracts/Stakable-2.0.sol\":12310:12389  if (totalVoters <= 1) {... */\n      tag_204\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":12353:12378  Voting__notEnoughVoters() */\n      mload(0x40)\n      0x2f9686de00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":12310:12389  if (totalVoters <= 1) {... */\n    tag_204:\n        /* \"contracts/Stakable-2.0.sol\":12398:12417  uint256 half_voters */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":12440:12442  10 */\n      0x0a\n        /* \"contracts/Stakable-2.0.sol\":12435:12436  5 */\n      0x05\n        /* \"contracts/Stakable-2.0.sol\":12421:12432  totalVoters */\n      sload(0x08)\n        /* \"contracts/Stakable-2.0.sol\":12421:12436  totalVoters * 5 */\n      tag_205\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_205:\n        /* \"contracts/Stakable-2.0.sol\":12420:12442  (totalVoters * 5) / 10 */\n      tag_206\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_206:\n        /* \"contracts/Stakable-2.0.sol\":12398:12442  uint256 half_voters = (totalVoters * 5) / 10 */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":12481:12492  half_voters */\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":12457:12467  votedUsers */\n      0x0a\n        /* \"contracts/Stakable-2.0.sol\":12457:12478  votedUsers[_votingId] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":12468:12477  _votingId */\n      sload(0x07)\n        /* \"contracts/Stakable-2.0.sol\":12457:12478  votedUsers[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stakable-2.0.sol\":12457:12492  votedUsers[_votingId] > half_voters */\n      gt\n        /* \"contracts/Stakable-2.0.sol\":12453:12573  if (votedUsers[_votingId] > half_voters) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":12515:12519  true */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":12508:12519  return true */\n      swap2\n      pop\n      pop\n      jump(tag_203)\n        /* \"contracts/Stakable-2.0.sol\":12453:12573  if (votedUsers[_votingId] > half_voters) {... */\n    tag_207:\n        /* \"contracts/Stakable-2.0.sol\":12557:12562  false */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":12550:12562  return false */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":3981:3982  _ */\n    tag_203:\n        /* \"contracts/Stakable-2.0.sol\":12173:12579  function getVotingResult()... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_135\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":1385:1411  uint256 public airdropRate */\n    tag_66:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":5739:6045  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_135\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"contracts/Stakable-2.0.sol\":5897:5899  30 */\n      0x1e\n        /* \"contracts/Stakable-2.0.sol\":5888:5894  amount */\n      dup2\n        /* \"contracts/Stakable-2.0.sol\":5888:5899  amount > 30 */\n      gt\n        /* \"contracts/Stakable-2.0.sol\":5884:5965  if (amount > 30) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":5922:5954  Staking__penaltyExceed3Percent() */\n      mload(0x40)\n      0xf1a470d700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":5884:5965  if (amount > 30) {... */\n    tag_223:\n        /* \"contracts/Stakable-2.0.sol\":5995:6001  amount */\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":5974:5992  stakingPenaltyRate */\n      0x03\n        /* \"contracts/Stakable-2.0.sol\":5974:6001  stakingPenaltyRate = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":6016:6038  PenaltyChanged(amount) */\n      0xcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a9\n        /* \"contracts/Stakable-2.0.sol\":6031:6037  amount */\n      dup2\n        /* \"contracts/Stakable-2.0.sol\":6016:6038  PenaltyChanged(amount) */\n      mload(0x40)\n      tag_224\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stakable-2.0.sol\":5739:6045  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":1645:1673  address public token_address */\n    tag_73:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":1593:1638  mapping(uint256 => uint256) public votedUsers */\n    tag_81:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":1548:1587  mapping(address => Voter) public voters */\n    tag_85:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":10110:10244  function calculateWeek(uint256 timestamp) public view returns (uint256) {... */\n    tag_89:\n        /* \"contracts/Stakable-2.0.sol\":10173:10180  uint256 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":10231:10237  7 days */\n      0x093a80\n        /* \"contracts/Stakable-2.0.sol\":10218:10227  timestamp */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":10200:10215  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable-2.0.sol\":10200:10227  block.timestamp - timestamp */\n      tag_227\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_227:\n        /* \"contracts/Stakable-2.0.sol\":10199:10237  (block.timestamp - timestamp) / 7 days */\n      tag_228\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_228:\n        /* \"contracts/Stakable-2.0.sol\":10192:10237  return (block.timestamp - timestamp) / 7 days */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":10110:10244  function calculateWeek(uint256 timestamp) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":1417:1444  uint256 public airdropSince */\n    tag_92:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":7546:8530  function withdrawStake() external nonReentrant {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_115\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":7711:7734  Stake memory user_stake */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":7737:7749  stakeholders */\n      0x0c\n        /* \"contracts/Stakable-2.0.sol\":7737:7761  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":7750:7760  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":7737:7761  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":7711:7761  Stake memory user_stake = stakeholders[msg.sender] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":7771:7785  uint256 reward */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":7788:7821  _calculateStakeReward(user_stake) */\n      tag_233\n        /* \"contracts/Stakable-2.0.sol\":7810:7820  user_stake */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":7788:7809  _calculateStakeReward */\n      tag_153\n        /* \"contracts/Stakable-2.0.sol\":7788:7821  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_233:\n        /* \"contracts/Stakable-2.0.sol\":7771:7821  uint256 reward = _calculateStakeReward(user_stake) */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":7839:7851  stakeholders */\n      0x0c\n        /* \"contracts/Stakable-2.0.sol\":7839:7863  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":7852:7862  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":7839:7863  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":7832:7863  delete stakeholders[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x06\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":7888:7889  1 */\n      0x01\n        /* \"contracts/Stakable-2.0.sol\":7873:7884  totalVoters */\n      0x08\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":7873:7889  totalVoters -= 1 */\n      dup3\n      dup3\n      sload\n      tag_234\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_234:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":7906:7912  voters */\n      0x09\n        /* \"contracts/Stakable-2.0.sol\":7906:7924  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":7913:7923  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":7906:7924  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":7906:7930  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable-2.0.sol\":7906:7941  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":7931:7940  _votingId */\n      sload(0x07)\n        /* \"contracts/Stakable-2.0.sol\":7906:7941  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":7899:7941  delete voters[msg.sender].voted[_votingId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/Stakable-2.0.sol\":7981:7996  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable-2.0.sol\":7956:7966  user_stake */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":7956:7978  user_stake.releaseTime */\n      0x60\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":7956:7996  user_stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stakable-2.0.sol\":7952:8524  if (user_stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":8030:8052  uint256 amount_reduced */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":8070:8092  uint256 reward_reduced */\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":8109:8164  _calculateStakingWithPenalty(user_stake.amount, reward) */\n      tag_236\n        /* \"contracts/Stakable-2.0.sol\":8138:8148  user_stake */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":8138:8155  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":8157:8163  reward */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":8109:8137  _calculateStakingWithPenalty */\n      tag_237\n        /* \"contracts/Stakable-2.0.sol\":8109:8164  _calculateStakingWithPenalty(user_stake.amount, reward) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/Stakable-2.0.sol\":8012:8164  (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable-2.0.sol\":8179:8333  SafeERC20.safeTransfer(... */\n      tag_238\n        /* \"contracts/Stakable-2.0.sol\":8226:8239  token_address */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stakable-2.0.sol\":8258:8268  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":8304:8318  reward_reduced */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":8287:8301  amount_reduced */\n      dup6\n        /* \"contracts/Stakable-2.0.sol\":8287:8318  amount_reduced + reward_reduced */\n      tag_239\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_239:\n        /* \"contracts/Stakable-2.0.sol\":8179:8201  SafeERC20.safeTransfer */\n      tag_195\n        /* \"contracts/Stakable-2.0.sol\":8179:8333  SafeERC20.safeTransfer(... */\n      jump\t// in\n    tag_238:\n        /* \"contracts/Stakable-2.0.sol\":7998:8344  {... */\n      pop\n      pop\n        /* \"contracts/Stakable-2.0.sol\":7952:8524  if (user_stake.releaseTime > block.timestamp) {... */\n      jump(tag_240)\n    tag_235:\n        /* \"contracts/Stakable-2.0.sol\":8364:8513  SafeERC20.safeTransfer(... */\n      tag_241\n        /* \"contracts/Stakable-2.0.sol\":8411:8424  token_address */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stakable-2.0.sol\":8443:8453  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":8492:8498  reward */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":8472:8482  user_stake */\n      dup6\n        /* \"contracts/Stakable-2.0.sol\":8472:8489  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":8472:8498  user_stake.amount + reward */\n      tag_242\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_242:\n        /* \"contracts/Stakable-2.0.sol\":8364:8386  SafeERC20.safeTransfer */\n      tag_195\n        /* \"contracts/Stakable-2.0.sol\":8364:8513  SafeERC20.safeTransfer(... */\n      jump\t// in\n    tag_241:\n        /* \"contracts/Stakable-2.0.sol\":7952:8524  if (user_stake.releaseTime > block.timestamp) {... */\n    tag_240:\n        /* \"contracts/Stakable-2.0.sol\":7593:8530  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":7546:8530  function withdrawStake() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":10008:10104  function _blockTimestamp() public view returns (uint256) {... */\n    tag_97:\n        /* \"contracts/Stakable-2.0.sol\":10056:10063  uint256 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":10082:10097  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable-2.0.sol\":10075:10097  return block.timestamp */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":10008:10104  function _blockTimestamp() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":1346:1379  uint256 public stakingPenaltyRate */\n    tag_100:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":9672:9762  function startAirdrop() external onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_135\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"contracts/Stakable-2.0.sol\":9740:9755  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable-2.0.sol\":9725:9737  airdropSince */\n      0x05\n        /* \"contracts/Stakable-2.0.sol\":9725:9755  airdropSince = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":9672:9762  function startAirdrop() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":9768:10002  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_135\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/Stakable-2.0.sol\":9859:9862  200 */\n      0xc8\n        /* \"contracts/Stakable-2.0.sol\":9850:9856  amount */\n      dup2\n        /* \"contracts/Stakable-2.0.sol\":9850:9862  amount > 200 */\n      gt\n        /* \"contracts/Stakable-2.0.sol\":9846:9929  if (amount > 200) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":9885:9918  Staking__airdropExceed20Percent() */\n      mload(0x40)\n      0xa552cf1000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":9846:9929  if (amount > 200) {... */\n    tag_256:\n        /* \"contracts/Stakable-2.0.sol\":9952:9958  amount */\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":9938:9949  airdropRate */\n      0x04\n        /* \"contracts/Stakable-2.0.sol\":9938:9958  airdropRate = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":9973:9995  AirdropChanged(amount) */\n      0xcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e\n        /* \"contracts/Stakable-2.0.sol\":9988:9994  amount */\n      dup2\n        /* \"contracts/Stakable-2.0.sol\":9973:9995  AirdropChanged(amount) */\n      mload(0x40)\n      tag_257\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stakable-2.0.sol\":9768:10002  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_135\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":12585:12681  function stopVoting() external onlyOwner votingStatusTrue {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_269\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_270\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_135\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"contracts/Stakable-2.0.sol\":3951:3971  _checkVotingStatus() */\n      tag_274\n        /* \"contracts/Stakable-2.0.sol\":3951:3969  _checkVotingStatus */\n      tag_118\n        /* \"contracts/Stakable-2.0.sol\":3951:3971  _checkVotingStatus() */\n      jump\t// in\n    tag_274:\n        /* \"contracts/Stakable-2.0.sol\":12669:12674  false */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":12653:12666  _votingStatus */\n      0x06\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":12653:12674  _votingStatus = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable-2.0.sol\":12585:12681  function stopVoting() external onlyOwner votingStatusTrue {... */\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":3703:3907  function _checkVotingStatus() internal view {... */\n    tag_118:\n        /* \"contracts/Stakable-2.0.sol\":3824:3837  _votingStatus */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable-2.0.sol\":3819:3901  if (!_votingStatus) {... */\n      tag_277\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":3860:3890  Function__votingNotAvailable() */\n      mload(0x40)\n      0xa1d1891400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":3819:3901  if (!_votingStatus) {... */\n    tag_277:\n        /* \"contracts/Stakable-2.0.sol\":3703:3907  function _checkVotingStatus() internal view {... */\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":3403:3634  function _isVoter() internal view {... */\n    tag_121:\n        /* \"contracts/Stakable-2.0.sol\":3568:3573  false */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":3534:3573  voters[msg.sender].votingRight == false */\n      iszero\n      iszero\n        /* \"contracts/Stakable-2.0.sol\":3534:3540  voters */\n      0x09\n        /* \"contracts/Stakable-2.0.sol\":3534:3552  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":3541:3551  msg.sender */\n      caller\n        /* \"contracts/Stakable-2.0.sol\":3534:3552  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable-2.0.sol\":3534:3564  voters[msg.sender].votingRight */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable-2.0.sol\":3534:3573  voters[msg.sender].votingRight == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable-2.0.sol\":3530:3628  if (voters[msg.sender].votingRight == false) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":3596:3617  Function__notAVoter() */\n      mload(0x40)\n      0x1e567dd400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable-2.0.sol\":3530:3628  if (voters[msg.sender].votingRight == false) {... */\n    tag_279:\n        /* \"contracts/Stakable-2.0.sol\":3403:3634  function _isVoter() internal view {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1070:1075  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1100:1127  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1129:1133  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1135:1137  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1144  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_283\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1069  _callOptionalReturn */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":6288:6725  function _calculateStakeReward(Stake memory user_stake)... */\n    tag_153:\n        /* \"contracts/Stakable-2.0.sol\":6391:6398  uint256 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":6439:6440  0 */\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":6418:6428  user_stake */\n      dup3\n        /* \"contracts/Stakable-2.0.sol\":6418:6435  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":6418:6440  user_stake.amount == 0 */\n      eq\n        /* \"contracts/Stakable-2.0.sol\":6414:6475  if (user_stake.amount == 0) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":6463:6464  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":6456:6464  return 0 */\n      swap1\n      pop\n      jump(tag_286)\n        /* \"contracts/Stakable-2.0.sol\":6414:6475  if (user_stake.amount == 0) {... */\n    tag_287:\n        /* \"contracts/Stakable-2.0.sol\":6714:6718  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stakable-2.0.sol\":6667:6710  _calculateStakingDuration(user_stake.since) */\n      tag_288\n        /* \"contracts/Stakable-2.0.sol\":6693:6703  user_stake */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":6693:6709  user_stake.since */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":6667:6692  _calculateStakingDuration */\n      tag_289\n        /* \"contracts/Stakable-2.0.sol\":6667:6710  _calculateStakingDuration(user_stake.since) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/Stakable-2.0.sol\":6628:6638  user_stake */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":6628:6648  user_stake.rewardAPY */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":6592:6602  user_stake */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":6592:6609  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable-2.0.sol\":6592:6648  user_stake.amount *... */\n      tag_290\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_290:\n        /* \"contracts/Stakable-2.0.sol\":6592:6710  user_stake.amount *... */\n      tag_291\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_291:\n        /* \"contracts/Stakable-2.0.sol\":6591:6718  (user_stake.amount *... */\n      tag_292\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_292:\n        /* \"contracts/Stakable-2.0.sol\":6572:6718  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":6288:6725  function _calculateStakeReward(Stake memory user_stake)... */\n    tag_286:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":10250:10429  function _calculateAirdrop(uint256 stakeAmount)... */\n    tag_165:\n        /* \"contracts/Stakable-2.0.sol\":10345:10352  uint256 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":10414:10422  52 weeks */\n      0x01dfe200\n        /* \"contracts/Stakable-2.0.sol\":10406:10410  1000 */\n      0x03e8\n        /* \"contracts/Stakable-2.0.sol\":10391:10402  airdropRate */\n      sload(0x04)\n        /* \"contracts/Stakable-2.0.sol\":10377:10388  stakeAmount */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":10377:10402  stakeAmount * airdropRate */\n      tag_294\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_294:\n        /* \"contracts/Stakable-2.0.sol\":10376:10410  (stakeAmount * airdropRate) / 1000 */\n      tag_295\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_295:\n        /* \"contracts/Stakable-2.0.sol\":10375:10422  ((stakeAmount * airdropRate) / 1000) / 52 weeks */\n      tag_296\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_296:\n        /* \"contracts/Stakable-2.0.sol\":10368:10422  return ((stakeAmount * airdropRate) / 1000) / 52 weeks */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":10250:10429  function _calculateAirdrop(uint256 stakeAmount)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":888:890  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":892:897  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_299\n      swap3\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":6731:7090  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n    tag_237:\n        /* \"contracts/Stakable-2.0.sol\":6848:6855  uint256 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":6857:6864  uint256 */\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":6894:6895  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":6884:6890  amount */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":6884:6895  amount == 0 */\n      eq\n        /* \"contracts/Stakable-2.0.sol\":6880:6935  if (amount == 0) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"contracts/Stakable-2.0.sol\":6919:6920  0 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":6922:6923  0 */\n      dup1\n        /* \"contracts/Stakable-2.0.sol\":6911:6924  return (0, 0) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_302)\n        /* \"contracts/Stakable-2.0.sol\":6880:6935  if (amount == 0) {... */\n    tag_303:\n        /* \"contracts/Stakable-2.0.sol\":7007:7011  1000 */\n      0x03e8\n        /* \"contracts/Stakable-2.0.sol\":6985:7003  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Stakable-2.0.sol\":6976:6982  amount */\n      dup6\n        /* \"contracts/Stakable-2.0.sol\":6976:7003  amount * stakingPenaltyRate */\n      tag_304\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_304:\n        /* \"contracts/Stakable-2.0.sol\":6975:7011  (amount * stakingPenaltyRate) / 1000 */\n      tag_305\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_305:\n        /* \"contracts/Stakable-2.0.sol\":6965:6971  amount */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":6965:7012  amount - ((amount * stakingPenaltyRate) / 1000) */\n      tag_306\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_306:\n        /* \"contracts/Stakable-2.0.sol\":7068:7072  1000 */\n      0x03e8\n        /* \"contracts/Stakable-2.0.sol\":7046:7064  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Stakable-2.0.sol\":7037:7043  reward */\n      dup6\n        /* \"contracts/Stakable-2.0.sol\":7037:7064  reward * stakingPenaltyRate */\n      tag_307\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_307:\n        /* \"contracts/Stakable-2.0.sol\":7036:7072  (reward * stakingPenaltyRate) / 1000 */\n      tag_308\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_308:\n        /* \"contracts/Stakable-2.0.sol\":7026:7032  reward */\n      dup5\n        /* \"contracts/Stakable-2.0.sol\":7026:7073  reward - ((reward * stakingPenaltyRate) / 1000) */\n      tag_309\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_309:\n        /* \"contracts/Stakable-2.0.sol\":6944:7083  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable-2.0.sol\":6731:7090  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n    tag_302:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_312\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3755:3756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3745  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      iszero\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_314\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3277:3913  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable-2.0.sol\":6051:6282  function _calculateStakingDuration(uint256 since)... */\n    tag_289:\n        /* \"contracts/Stakable-2.0.sol\":6148:6155  uint256 */\n      0x00\n        /* \"contracts/Stakable-2.0.sol\":6267:6275  365 days */\n      0x01e13380\n        /* \"contracts/Stakable-2.0.sol\":6259:6263  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stakable-2.0.sol\":6250:6255  since */\n      dup4\n        /* \"contracts/Stakable-2.0.sol\":6232:6247  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable-2.0.sol\":6232:6255  block.timestamp - since */\n      tag_320\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_320:\n        /* \"contracts/Stakable-2.0.sol\":6231:6263  (block.timestamp - since) * 1e24 */\n      tag_321\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_321:\n        /* \"contracts/Stakable-2.0.sol\":6230:6275  ((block.timestamp - since) * 1e24) / 365 days */\n      tag_322\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_322:\n        /* \"contracts/Stakable-2.0.sol\":6223:6275  return ((block.timestamp - since) * 1e24) / 365 days */\n      swap1\n      pop\n        /* \"contracts/Stakable-2.0.sol\":6051:6282  function _calculateStakingDuration(uint256 since)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_324\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_325\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_330\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_331\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_335\n      swap2\n      swap1\n      tag_336\n      jump\t// in\n    tag_335:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_339\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_338)\n    tag_339:\n      0x60\n      swap2\n      pop\n    tag_338:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_340\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_341\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_343)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap2\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_343:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_149:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_350\n      tag_351\n      jump\t// in\n    tag_350:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_351:\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_353:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_355:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_356:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_399\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_355\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_357:\n        /* \"#utility.yul\":641:665   */\n      tag_401\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_356\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_402:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_358:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_404\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_357\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_359:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_360:\n        /* \"#utility.yul\":997:1021   */\n      tag_407\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_359\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_408:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_361:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_410\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_360\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1816   */\n    tag_36:\n        /* \"#utility.yul\":1274:1280   */\n      0x00\n        /* \"#utility.yul\":1282:1288   */\n      dup1\n        /* \"#utility.yul\":1290:1296   */\n      0x00\n        /* \"#utility.yul\":1339:1341   */\n      0x60\n        /* \"#utility.yul\":1327:1336   */\n      dup5\n        /* \"#utility.yul\":1318:1325   */\n      dup7\n        /* \"#utility.yul\":1314:1337   */\n      sub\n        /* \"#utility.yul\":1310:1342   */\n      slt\n        /* \"#utility.yul\":1307:1426   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":1345:1424   */\n      tag_413\n      tag_353\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1307:1426   */\n    tag_412:\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1490:1543   */\n      tag_414\n        /* \"#utility.yul\":1535:1542   */\n      dup7\n        /* \"#utility.yul\":1526:1532   */\n      dup3\n        /* \"#utility.yul\":1515:1524   */\n      dup8\n        /* \"#utility.yul\":1511:1533   */\n      add\n        /* \"#utility.yul\":1490:1543   */\n      tag_358\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1480:1543   */\n      swap4\n      pop\n        /* \"#utility.yul\":1436:1553   */\n      pop\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1618:1671   */\n      tag_415\n        /* \"#utility.yul\":1663:1670   */\n      dup7\n        /* \"#utility.yul\":1654:1660   */\n      dup3\n        /* \"#utility.yul\":1643:1652   */\n      dup8\n        /* \"#utility.yul\":1639:1661   */\n      add\n        /* \"#utility.yul\":1618:1671   */\n      tag_361\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":1608:1671   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1681   */\n      pop\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1746:1799   */\n      tag_416\n        /* \"#utility.yul\":1791:1798   */\n      dup7\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1771:1780   */\n      dup8\n        /* \"#utility.yul\":1767:1789   */\n      add\n        /* \"#utility.yul\":1746:1799   */\n      tag_361\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1736:1799   */\n      swap2\n      pop\n        /* \"#utility.yul\":1691:1809   */\n      pop\n        /* \"#utility.yul\":1197:1816   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1822:1930   */\n    tag_362:\n        /* \"#utility.yul\":1899:1923   */\n      tag_418\n        /* \"#utility.yul\":1917:1922   */\n      dup2\n        /* \"#utility.yul\":1899:1923   */\n      tag_359\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":1894:1897   */\n      dup3\n        /* \"#utility.yul\":1887:1924   */\n      mstore\n        /* \"#utility.yul\":1822:1930   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1988:3392   */\n    tag_363:\n        /* \"#utility.yul\":2119:2123   */\n      0xe0\n        /* \"#utility.yul\":2114:2117   */\n      dup3\n        /* \"#utility.yul\":2110:2124   */\n      add\n        /* \"#utility.yul\":2208:2212   */\n      0x00\n        /* \"#utility.yul\":2201:2206   */\n      dup3\n        /* \"#utility.yul\":2197:2213   */\n      add\n        /* \"#utility.yul\":2191:2214   */\n      mload\n        /* \"#utility.yul\":2227:2290   */\n      tag_420\n        /* \"#utility.yul\":2284:2288   */\n      0x00\n        /* \"#utility.yul\":2279:2282   */\n      dup6\n        /* \"#utility.yul\":2275:2289   */\n      add\n        /* \"#utility.yul\":2261:2273   */\n      dup3\n        /* \"#utility.yul\":2227:2290   */\n      tag_362\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2134:2300   */\n      pop\n        /* \"#utility.yul\":2383:2387   */\n      0x20\n        /* \"#utility.yul\":2376:2381   */\n      dup3\n        /* \"#utility.yul\":2372:2388   */\n      add\n        /* \"#utility.yul\":2366:2389   */\n      mload\n        /* \"#utility.yul\":2402:2465   */\n      tag_421\n        /* \"#utility.yul\":2459:2463   */\n      0x20\n        /* \"#utility.yul\":2454:2457   */\n      dup6\n        /* \"#utility.yul\":2450:2464   */\n      add\n        /* \"#utility.yul\":2436:2448   */\n      dup3\n        /* \"#utility.yul\":2402:2465   */\n      tag_362\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2310:2475   */\n      pop\n        /* \"#utility.yul\":2562:2566   */\n      0x40\n        /* \"#utility.yul\":2555:2560   */\n      dup3\n        /* \"#utility.yul\":2551:2567   */\n      add\n        /* \"#utility.yul\":2545:2568   */\n      mload\n        /* \"#utility.yul\":2581:2644   */\n      tag_422\n        /* \"#utility.yul\":2638:2642   */\n      0x40\n        /* \"#utility.yul\":2633:2636   */\n      dup6\n        /* \"#utility.yul\":2629:2643   */\n      add\n        /* \"#utility.yul\":2615:2627   */\n      dup3\n        /* \"#utility.yul\":2581:2644   */\n      tag_362\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2485:2654   */\n      pop\n        /* \"#utility.yul\":2743:2747   */\n      0x60\n        /* \"#utility.yul\":2736:2741   */\n      dup3\n        /* \"#utility.yul\":2732:2748   */\n      add\n        /* \"#utility.yul\":2726:2749   */\n      mload\n        /* \"#utility.yul\":2762:2825   */\n      tag_423\n        /* \"#utility.yul\":2819:2823   */\n      0x60\n        /* \"#utility.yul\":2814:2817   */\n      dup6\n        /* \"#utility.yul\":2810:2824   */\n      add\n        /* \"#utility.yul\":2796:2808   */\n      dup3\n        /* \"#utility.yul\":2762:2825   */\n      tag_362\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2664:2835   */\n      pop\n        /* \"#utility.yul\":2922:2926   */\n      0x80\n        /* \"#utility.yul\":2915:2920   */\n      dup3\n        /* \"#utility.yul\":2911:2927   */\n      add\n        /* \"#utility.yul\":2905:2928   */\n      mload\n        /* \"#utility.yul\":2941:3004   */\n      tag_424\n        /* \"#utility.yul\":2998:3002   */\n      0x80\n        /* \"#utility.yul\":2993:2996   */\n      dup6\n        /* \"#utility.yul\":2989:3003   */\n      add\n        /* \"#utility.yul\":2975:2987   */\n      dup3\n        /* \"#utility.yul\":2941:3004   */\n      tag_362\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2845:3014   */\n      pop\n        /* \"#utility.yul\":3108:3112   */\n      0xa0\n        /* \"#utility.yul\":3101:3106   */\n      dup3\n        /* \"#utility.yul\":3097:3113   */\n      add\n        /* \"#utility.yul\":3091:3114   */\n      mload\n        /* \"#utility.yul\":3127:3190   */\n      tag_425\n        /* \"#utility.yul\":3184:3188   */\n      0xa0\n        /* \"#utility.yul\":3179:3182   */\n      dup6\n        /* \"#utility.yul\":3175:3189   */\n      add\n        /* \"#utility.yul\":3161:3173   */\n      dup3\n        /* \"#utility.yul\":3127:3190   */\n      tag_362\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3024:3200   */\n      pop\n        /* \"#utility.yul\":3293:3297   */\n      0xc0\n        /* \"#utility.yul\":3286:3291   */\n      dup3\n        /* \"#utility.yul\":3282:3298   */\n      add\n        /* \"#utility.yul\":3276:3299   */\n      mload\n        /* \"#utility.yul\":3312:3375   */\n      tag_426\n        /* \"#utility.yul\":3369:3373   */\n      0xc0\n        /* \"#utility.yul\":3364:3367   */\n      dup6\n        /* \"#utility.yul\":3360:3374   */\n      add\n        /* \"#utility.yul\":3346:3358   */\n      dup3\n        /* \"#utility.yul\":3312:3375   */\n      tag_362\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3210:3385   */\n      pop\n        /* \"#utility.yul\":2088:3392   */\n      pop\n        /* \"#utility.yul\":1988:3392   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3468:4219   */\n    tag_364:\n        /* \"#utility.yul\":3627:3633   */\n      0x0120\n        /* \"#utility.yul\":3622:3625   */\n      dup3\n        /* \"#utility.yul\":3618:3634   */\n      add\n        /* \"#utility.yul\":3724:3728   */\n      0x00\n        /* \"#utility.yul\":3717:3722   */\n      dup3\n        /* \"#utility.yul\":3713:3729   */\n      add\n        /* \"#utility.yul\":3707:3730   */\n      mload\n        /* \"#utility.yul\":3743:3806   */\n      tag_428\n        /* \"#utility.yul\":3800:3804   */\n      0x00\n        /* \"#utility.yul\":3795:3798   */\n      dup6\n        /* \"#utility.yul\":3791:3805   */\n      add\n        /* \"#utility.yul\":3777:3789   */\n      dup3\n        /* \"#utility.yul\":3743:3806   */\n      tag_362\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3644:3816   */\n      pop\n        /* \"#utility.yul\":3901:3905   */\n      0x20\n        /* \"#utility.yul\":3894:3899   */\n      dup3\n        /* \"#utility.yul\":3890:3906   */\n      add\n        /* \"#utility.yul\":3884:3907   */\n      mload\n        /* \"#utility.yul\":3920:3983   */\n      tag_429\n        /* \"#utility.yul\":3977:3981   */\n      0x20\n        /* \"#utility.yul\":3972:3975   */\n      dup6\n        /* \"#utility.yul\":3968:3982   */\n      add\n        /* \"#utility.yul\":3954:3966   */\n      dup3\n        /* \"#utility.yul\":3920:3983   */\n      tag_362\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3826:3993   */\n      pop\n        /* \"#utility.yul\":4076:4080   */\n      0x40\n        /* \"#utility.yul\":4069:4074   */\n      dup3\n        /* \"#utility.yul\":4065:4081   */\n      add\n        /* \"#utility.yul\":4059:4082   */\n      mload\n        /* \"#utility.yul\":4095:4202   */\n      tag_430\n        /* \"#utility.yul\":4196:4200   */\n      0x40\n        /* \"#utility.yul\":4191:4194   */\n      dup6\n        /* \"#utility.yul\":4187:4201   */\n      add\n        /* \"#utility.yul\":4173:4185   */\n      dup3\n        /* \"#utility.yul\":4095:4202   */\n      tag_363\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":4003:4212   */\n      pop\n        /* \"#utility.yul\":3596:4219   */\n      pop\n        /* \"#utility.yul\":3468:4219   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4225:4572   */\n    tag_41:\n        /* \"#utility.yul\":4380:4384   */\n      0x00\n        /* \"#utility.yul\":4418:4421   */\n      0x0120\n        /* \"#utility.yul\":4407:4416   */\n      dup3\n        /* \"#utility.yul\":4403:4422   */\n      add\n        /* \"#utility.yul\":4395:4422   */\n      swap1\n      pop\n        /* \"#utility.yul\":4432:4565   */\n      tag_432\n        /* \"#utility.yul\":4562:4563   */\n      0x00\n        /* \"#utility.yul\":4551:4560   */\n      dup4\n        /* \"#utility.yul\":4547:4564   */\n      add\n        /* \"#utility.yul\":4538:4544   */\n      dup5\n        /* \"#utility.yul\":4432:4565   */\n      tag_364\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4225:4572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4578:4907   */\n    tag_46:\n        /* \"#utility.yul\":4637:4643   */\n      0x00\n        /* \"#utility.yul\":4686:4688   */\n      0x20\n        /* \"#utility.yul\":4674:4683   */\n      dup3\n        /* \"#utility.yul\":4665:4672   */\n      dup5\n        /* \"#utility.yul\":4661:4684   */\n      sub\n        /* \"#utility.yul\":4657:4689   */\n      slt\n        /* \"#utility.yul\":4654:4773   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":4692:4771   */\n      tag_435\n      tag_353\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4654:4773   */\n    tag_434:\n        /* \"#utility.yul\":4812:4813   */\n      0x00\n        /* \"#utility.yul\":4837:4890   */\n      tag_436\n        /* \"#utility.yul\":4882:4889   */\n      dup5\n        /* \"#utility.yul\":4873:4879   */\n      dup3\n        /* \"#utility.yul\":4862:4871   */\n      dup6\n        /* \"#utility.yul\":4858:4880   */\n      add\n        /* \"#utility.yul\":4837:4890   */\n      tag_358\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4827:4890   */\n      swap2\n      pop\n        /* \"#utility.yul\":4783:4900   */\n      pop\n        /* \"#utility.yul\":4578:4907   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4913:5003   */\n    tag_365:\n        /* \"#utility.yul\":4947:4954   */\n      0x00\n        /* \"#utility.yul\":4990:4995   */\n      dup2\n        /* \"#utility.yul\":4983:4996   */\n      iszero\n        /* \"#utility.yul\":4976:4997   */\n      iszero\n        /* \"#utility.yul\":4965:4997   */\n      swap1\n      pop\n        /* \"#utility.yul\":4913:5003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5009:5118   */\n    tag_366:\n        /* \"#utility.yul\":5090:5111   */\n      tag_439\n        /* \"#utility.yul\":5105:5110   */\n      dup2\n        /* \"#utility.yul\":5090:5111   */\n      tag_365\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5085:5088   */\n      dup3\n        /* \"#utility.yul\":5078:5112   */\n      mstore\n        /* \"#utility.yul\":5009:5118   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5124:5432   */\n    tag_49:\n        /* \"#utility.yul\":5233:5237   */\n      0x00\n        /* \"#utility.yul\":5271:5273   */\n      0x40\n        /* \"#utility.yul\":5260:5269   */\n      dup3\n        /* \"#utility.yul\":5256:5274   */\n      add\n        /* \"#utility.yul\":5248:5274   */\n      swap1\n      pop\n        /* \"#utility.yul\":5284:5349   */\n      tag_441\n        /* \"#utility.yul\":5346:5347   */\n      0x00\n        /* \"#utility.yul\":5335:5344   */\n      dup4\n        /* \"#utility.yul\":5331:5348   */\n      add\n        /* \"#utility.yul\":5322:5328   */\n      dup6\n        /* \"#utility.yul\":5284:5349   */\n      tag_366\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5359:5425   */\n      tag_442\n        /* \"#utility.yul\":5421:5423   */\n      0x20\n        /* \"#utility.yul\":5410:5419   */\n      dup4\n        /* \"#utility.yul\":5406:5424   */\n      add\n        /* \"#utility.yul\":5397:5403   */\n      dup5\n        /* \"#utility.yul\":5359:5425   */\n      tag_366\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":5124:5432   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5438:5556   */\n    tag_367:\n        /* \"#utility.yul\":5525:5549   */\n      tag_444\n        /* \"#utility.yul\":5543:5548   */\n      dup2\n        /* \"#utility.yul\":5525:5549   */\n      tag_359\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5520:5523   */\n      dup3\n        /* \"#utility.yul\":5513:5550   */\n      mstore\n        /* \"#utility.yul\":5438:5556   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5562:5784   */\n    tag_53:\n        /* \"#utility.yul\":5655:5659   */\n      0x00\n        /* \"#utility.yul\":5693:5695   */\n      0x20\n        /* \"#utility.yul\":5682:5691   */\n      dup3\n        /* \"#utility.yul\":5678:5696   */\n      add\n        /* \"#utility.yul\":5670:5696   */\n      swap1\n      pop\n        /* \"#utility.yul\":5706:5777   */\n      tag_446\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5763:5772   */\n      dup4\n        /* \"#utility.yul\":5759:5776   */\n      add\n        /* \"#utility.yul\":5750:5756   */\n      dup5\n        /* \"#utility.yul\":5706:5777   */\n      tag_367\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5562:5784   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5790:6000   */\n    tag_62:\n        /* \"#utility.yul\":5877:5881   */\n      0x00\n        /* \"#utility.yul\":5915:5917   */\n      0x20\n        /* \"#utility.yul\":5904:5913   */\n      dup3\n        /* \"#utility.yul\":5900:5918   */\n      add\n        /* \"#utility.yul\":5892:5918   */\n      swap1\n      pop\n        /* \"#utility.yul\":5928:5993   */\n      tag_448\n        /* \"#utility.yul\":5990:5991   */\n      0x00\n        /* \"#utility.yul\":5979:5988   */\n      dup4\n        /* \"#utility.yul\":5975:5992   */\n      add\n        /* \"#utility.yul\":5966:5972   */\n      dup5\n        /* \"#utility.yul\":5928:5993   */\n      tag_366\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5790:6000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6006:6335   */\n    tag_70:\n        /* \"#utility.yul\":6065:6071   */\n      0x00\n        /* \"#utility.yul\":6114:6116   */\n      0x20\n        /* \"#utility.yul\":6102:6111   */\n      dup3\n        /* \"#utility.yul\":6093:6100   */\n      dup5\n        /* \"#utility.yul\":6089:6112   */\n      sub\n        /* \"#utility.yul\":6085:6117   */\n      slt\n        /* \"#utility.yul\":6082:6201   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":6120:6199   */\n      tag_451\n      tag_353\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6082:6201   */\n    tag_450:\n        /* \"#utility.yul\":6240:6241   */\n      0x00\n        /* \"#utility.yul\":6265:6318   */\n      tag_452\n        /* \"#utility.yul\":6310:6317   */\n      dup5\n        /* \"#utility.yul\":6301:6307   */\n      dup3\n        /* \"#utility.yul\":6290:6299   */\n      dup6\n        /* \"#utility.yul\":6286:6308   */\n      add\n        /* \"#utility.yul\":6265:6318   */\n      tag_361\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6255:6318   */\n      swap2\n      pop\n        /* \"#utility.yul\":6211:6328   */\n      pop\n        /* \"#utility.yul\":6006:6335   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6341:6459   */\n    tag_368:\n        /* \"#utility.yul\":6428:6452   */\n      tag_454\n        /* \"#utility.yul\":6446:6451   */\n      dup2\n        /* \"#utility.yul\":6428:6452   */\n      tag_356\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6423:6426   */\n      dup3\n        /* \"#utility.yul\":6416:6453   */\n      mstore\n        /* \"#utility.yul\":6341:6459   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6465:6687   */\n    tag_75:\n        /* \"#utility.yul\":6558:6562   */\n      0x00\n        /* \"#utility.yul\":6596:6598   */\n      0x20\n        /* \"#utility.yul\":6585:6594   */\n      dup3\n        /* \"#utility.yul\":6581:6599   */\n      add\n        /* \"#utility.yul\":6573:6599   */\n      swap1\n      pop\n        /* \"#utility.yul\":6609:6680   */\n      tag_456\n        /* \"#utility.yul\":6677:6678   */\n      0x00\n        /* \"#utility.yul\":6666:6675   */\n      dup4\n        /* \"#utility.yul\":6662:6679   */\n      add\n        /* \"#utility.yul\":6653:6659   */\n      dup5\n        /* \"#utility.yul\":6609:6680   */\n      tag_368\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6465:6687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6693:6862   */\n    tag_369:\n        /* \"#utility.yul\":6777:6788   */\n      0x00\n        /* \"#utility.yul\":6811:6817   */\n      dup3\n        /* \"#utility.yul\":6806:6809   */\n      dup3\n        /* \"#utility.yul\":6799:6818   */\n      mstore\n        /* \"#utility.yul\":6851:6855   */\n      0x20\n        /* \"#utility.yul\":6846:6849   */\n      dup3\n        /* \"#utility.yul\":6842:6856   */\n      add\n        /* \"#utility.yul\":6827:6856   */\n      swap1\n      pop\n        /* \"#utility.yul\":6693:6862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6868:7049   */\n    tag_370:\n        /* \"#utility.yul\":7008:7041   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7004:7005   */\n      0x00\n        /* \"#utility.yul\":6996:7002   */\n      dup3\n        /* \"#utility.yul\":6992:7006   */\n      add\n        /* \"#utility.yul\":6985:7042   */\n      mstore\n        /* \"#utility.yul\":6868:7049   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7055:7421   */\n    tag_371:\n        /* \"#utility.yul\":7197:7200   */\n      0x00\n        /* \"#utility.yul\":7218:7285   */\n      tag_460\n        /* \"#utility.yul\":7282:7284   */\n      0x1f\n        /* \"#utility.yul\":7277:7280   */\n      dup4\n        /* \"#utility.yul\":7218:7285   */\n      tag_369\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7211:7285   */\n      swap2\n      pop\n        /* \"#utility.yul\":7294:7387   */\n      tag_461\n        /* \"#utility.yul\":7383:7386   */\n      dup3\n        /* \"#utility.yul\":7294:7387   */\n      tag_370\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7412:7414   */\n      0x20\n        /* \"#utility.yul\":7407:7410   */\n      dup3\n        /* \"#utility.yul\":7403:7415   */\n      add\n        /* \"#utility.yul\":7396:7415   */\n      swap1\n      pop\n        /* \"#utility.yul\":7055:7421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7427:7846   */\n    tag_115:\n        /* \"#utility.yul\":7593:7597   */\n      0x00\n        /* \"#utility.yul\":7631:7633   */\n      0x20\n        /* \"#utility.yul\":7620:7629   */\n      dup3\n        /* \"#utility.yul\":7616:7634   */\n      add\n        /* \"#utility.yul\":7608:7634   */\n      swap1\n      pop\n        /* \"#utility.yul\":7680:7689   */\n      dup2\n        /* \"#utility.yul\":7674:7678   */\n      dup2\n        /* \"#utility.yul\":7670:7690   */\n      sub\n        /* \"#utility.yul\":7666:7667   */\n      0x00\n        /* \"#utility.yul\":7655:7664   */\n      dup4\n        /* \"#utility.yul\":7651:7668   */\n      add\n        /* \"#utility.yul\":7644:7691   */\n      mstore\n        /* \"#utility.yul\":7708:7839   */\n      tag_463\n        /* \"#utility.yul\":7834:7838   */\n      dup2\n        /* \"#utility.yul\":7708:7839   */\n      tag_371\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":7700:7839   */\n      swap1\n      pop\n        /* \"#utility.yul\":7427:7846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7852:8032   */\n    tag_372:\n        /* \"#utility.yul\":7900:7977   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7897:7898   */\n      0x00\n        /* \"#utility.yul\":7890:7978   */\n      mstore\n        /* \"#utility.yul\":7997:8001   */\n      0x11\n        /* \"#utility.yul\":7994:7995   */\n      0x04\n        /* \"#utility.yul\":7987:8002   */\n      mstore\n        /* \"#utility.yul\":8021:8025   */\n      0x24\n        /* \"#utility.yul\":8018:8019   */\n      0x00\n        /* \"#utility.yul\":8011:8026   */\n      revert\n        /* \"#utility.yul\":8038:8229   */\n    tag_125:\n        /* \"#utility.yul\":8078:8082   */\n      0x00\n        /* \"#utility.yul\":8098:8118   */\n      tag_466\n        /* \"#utility.yul\":8116:8117   */\n      dup3\n        /* \"#utility.yul\":8098:8118   */\n      tag_359\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":8093:8118   */\n      swap2\n      pop\n        /* \"#utility.yul\":8132:8152   */\n      tag_467\n        /* \"#utility.yul\":8150:8151   */\n      dup4\n        /* \"#utility.yul\":8132:8152   */\n      tag_359\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":8127:8152   */\n      swap3\n      pop\n        /* \"#utility.yul\":8171:8172   */\n      dup3\n        /* \"#utility.yul\":8168:8169   */\n      dup3\n        /* \"#utility.yul\":8165:8173   */\n      lt\n        /* \"#utility.yul\":8162:8196   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":8176:8194   */\n      tag_469\n      tag_372\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":8162:8196   */\n    tag_468:\n        /* \"#utility.yul\":8221:8222   */\n      dup3\n        /* \"#utility.yul\":8218:8219   */\n      dup3\n        /* \"#utility.yul\":8214:8223   */\n      sub\n        /* \"#utility.yul\":8206:8223   */\n      swap1\n      pop\n        /* \"#utility.yul\":8038:8229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8235:8417   */\n    tag_373:\n        /* \"#utility.yul\":8375:8409   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8371:8372   */\n      0x00\n        /* \"#utility.yul\":8363:8369   */\n      dup3\n        /* \"#utility.yul\":8359:8373   */\n      add\n        /* \"#utility.yul\":8352:8410   */\n      mstore\n        /* \"#utility.yul\":8235:8417   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8423:8789   */\n    tag_374:\n        /* \"#utility.yul\":8565:8568   */\n      0x00\n        /* \"#utility.yul\":8586:8653   */\n      tag_472\n        /* \"#utility.yul\":8650:8652   */\n      0x20\n        /* \"#utility.yul\":8645:8648   */\n      dup4\n        /* \"#utility.yul\":8586:8653   */\n      tag_369\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":8579:8653   */\n      swap2\n      pop\n        /* \"#utility.yul\":8662:8755   */\n      tag_473\n        /* \"#utility.yul\":8751:8754   */\n      dup3\n        /* \"#utility.yul\":8662:8755   */\n      tag_373\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":8780:8782   */\n      0x20\n        /* \"#utility.yul\":8775:8778   */\n      dup3\n        /* \"#utility.yul\":8771:8783   */\n      add\n        /* \"#utility.yul\":8764:8783   */\n      swap1\n      pop\n        /* \"#utility.yul\":8423:8789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8795:9214   */\n    tag_135:\n        /* \"#utility.yul\":8961:8965   */\n      0x00\n        /* \"#utility.yul\":8999:9001   */\n      0x20\n        /* \"#utility.yul\":8988:8997   */\n      dup3\n        /* \"#utility.yul\":8984:9002   */\n      add\n        /* \"#utility.yul\":8976:9002   */\n      swap1\n      pop\n        /* \"#utility.yul\":9048:9057   */\n      dup2\n        /* \"#utility.yul\":9042:9046   */\n      dup2\n        /* \"#utility.yul\":9038:9058   */\n      sub\n        /* \"#utility.yul\":9034:9035   */\n      0x00\n        /* \"#utility.yul\":9023:9032   */\n      dup4\n        /* \"#utility.yul\":9019:9036   */\n      add\n        /* \"#utility.yul\":9012:9059   */\n      mstore\n        /* \"#utility.yul\":9076:9207   */\n      tag_475\n        /* \"#utility.yul\":9202:9206   */\n      dup2\n        /* \"#utility.yul\":9076:9207   */\n      tag_374\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9068:9207   */\n      swap1\n      pop\n        /* \"#utility.yul\":8795:9214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9220:9525   */\n    tag_141:\n        /* \"#utility.yul\":9260:9263   */\n      0x00\n        /* \"#utility.yul\":9279:9299   */\n      tag_477\n        /* \"#utility.yul\":9297:9298   */\n      dup3\n        /* \"#utility.yul\":9279:9299   */\n      tag_359\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":9274:9299   */\n      swap2\n      pop\n        /* \"#utility.yul\":9313:9333   */\n      tag_478\n        /* \"#utility.yul\":9331:9332   */\n      dup4\n        /* \"#utility.yul\":9313:9333   */\n      tag_359\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":9308:9333   */\n      swap3\n      pop\n        /* \"#utility.yul\":9467:9468   */\n      dup3\n        /* \"#utility.yul\":9399:9465   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9395:9469   */\n      sub\n        /* \"#utility.yul\":9392:9393   */\n      dup3\n        /* \"#utility.yul\":9389:9470   */\n      gt\n        /* \"#utility.yul\":9386:9493   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":9473:9491   */\n      tag_480\n      tag_372\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":9386:9493   */\n    tag_479:\n        /* \"#utility.yul\":9517:9518   */\n      dup3\n        /* \"#utility.yul\":9514:9515   */\n      dup3\n        /* \"#utility.yul\":9510:9519   */\n      add\n        /* \"#utility.yul\":9503:9519   */\n      swap1\n      pop\n        /* \"#utility.yul\":9220:9525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9531:9973   */\n    tag_147:\n        /* \"#utility.yul\":9680:9684   */\n      0x00\n        /* \"#utility.yul\":9718:9720   */\n      0x60\n        /* \"#utility.yul\":9707:9716   */\n      dup3\n        /* \"#utility.yul\":9703:9721   */\n      add\n        /* \"#utility.yul\":9695:9721   */\n      swap1\n      pop\n        /* \"#utility.yul\":9731:9802   */\n      tag_482\n        /* \"#utility.yul\":9799:9800   */\n      0x00\n        /* \"#utility.yul\":9788:9797   */\n      dup4\n        /* \"#utility.yul\":9784:9801   */\n      add\n        /* \"#utility.yul\":9775:9781   */\n      dup7\n        /* \"#utility.yul\":9731:9802   */\n      tag_367\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":9812:9884   */\n      tag_483\n        /* \"#utility.yul\":9880:9882   */\n      0x20\n        /* \"#utility.yul\":9869:9878   */\n      dup4\n        /* \"#utility.yul\":9865:9883   */\n      add\n        /* \"#utility.yul\":9856:9862   */\n      dup6\n        /* \"#utility.yul\":9812:9884   */\n      tag_367\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":9894:9966   */\n      tag_484\n        /* \"#utility.yul\":9962:9964   */\n      0x40\n        /* \"#utility.yul\":9951:9960   */\n      dup4\n        /* \"#utility.yul\":9947:9965   */\n      add\n        /* \"#utility.yul\":9938:9944   */\n      dup5\n        /* \"#utility.yul\":9894:9966   */\n      tag_367\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":9531:9973   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9979:10327   */\n    tag_156:\n        /* \"#utility.yul\":10019:10026   */\n      0x00\n        /* \"#utility.yul\":10042:10062   */\n      tag_486\n        /* \"#utility.yul\":10060:10061   */\n      dup3\n        /* \"#utility.yul\":10042:10062   */\n      tag_359\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":10037:10062   */\n      swap2\n      pop\n        /* \"#utility.yul\":10076:10096   */\n      tag_487\n        /* \"#utility.yul\":10094:10095   */\n      dup4\n        /* \"#utility.yul\":10076:10096   */\n      tag_359\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":10071:10096   */\n      swap3\n      pop\n        /* \"#utility.yul\":10264:10265   */\n      dup2\n        /* \"#utility.yul\":10196:10262   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10192:10266   */\n      div\n        /* \"#utility.yul\":10189:10190   */\n      dup4\n        /* \"#utility.yul\":10186:10267   */\n      gt\n        /* \"#utility.yul\":10181:10182   */\n      dup3\n        /* \"#utility.yul\":10174:10183   */\n      iszero\n        /* \"#utility.yul\":10167:10184   */\n      iszero\n        /* \"#utility.yul\":10163:10268   */\n      and\n        /* \"#utility.yul\":10160:10291   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":10271:10289   */\n      tag_489\n      tag_372\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10160:10291   */\n    tag_488:\n        /* \"#utility.yul\":10319:10320   */\n      dup3\n        /* \"#utility.yul\":10316:10317   */\n      dup3\n        /* \"#utility.yul\":10312:10321   */\n      mul\n        /* \"#utility.yul\":10301:10321   */\n      swap1\n      pop\n        /* \"#utility.yul\":9979:10327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10333:10513   */\n    tag_375:\n        /* \"#utility.yul\":10381:10458   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10378:10379   */\n      0x00\n        /* \"#utility.yul\":10371:10459   */\n      mstore\n        /* \"#utility.yul\":10478:10482   */\n      0x12\n        /* \"#utility.yul\":10475:10476   */\n      0x04\n        /* \"#utility.yul\":10468:10483   */\n      mstore\n        /* \"#utility.yul\":10502:10506   */\n      0x24\n        /* \"#utility.yul\":10499:10500   */\n      0x00\n        /* \"#utility.yul\":10492:10507   */\n      revert\n        /* \"#utility.yul\":10519:10704   */\n    tag_158:\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10576:10596   */\n      tag_492\n        /* \"#utility.yul\":10594:10595   */\n      dup3\n        /* \"#utility.yul\":10576:10596   */\n      tag_359\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10571:10596   */\n      swap2\n      pop\n        /* \"#utility.yul\":10610:10630   */\n      tag_493\n        /* \"#utility.yul\":10628:10629   */\n      dup4\n        /* \"#utility.yul\":10610:10630   */\n      tag_359\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10605:10630   */\n      swap3\n      pop\n        /* \"#utility.yul\":10649:10650   */\n      dup3\n        /* \"#utility.yul\":10639:10674   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":10654:10672   */\n      tag_495\n      tag_375\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":10639:10674   */\n    tag_494:\n        /* \"#utility.yul\":10696:10697   */\n      dup3\n        /* \"#utility.yul\":10693:10694   */\n      dup3\n        /* \"#utility.yul\":10689:10698   */\n      div\n        /* \"#utility.yul\":10684:10698   */\n      swap1\n      pop\n        /* \"#utility.yul\":10519:10704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10710:10935   */\n    tag_376:\n        /* \"#utility.yul\":10850:10884   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10846:10847   */\n      0x00\n        /* \"#utility.yul\":10838:10844   */\n      dup3\n        /* \"#utility.yul\":10834:10848   */\n      add\n        /* \"#utility.yul\":10827:10885   */\n      mstore\n        /* \"#utility.yul\":10919:10927   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10914:10916   */\n      0x20\n        /* \"#utility.yul\":10906:10912   */\n      dup3\n        /* \"#utility.yul\":10902:10917   */\n      add\n        /* \"#utility.yul\":10895:10928   */\n      mstore\n        /* \"#utility.yul\":10710:10935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10941:11307   */\n    tag_377:\n        /* \"#utility.yul\":11083:11086   */\n      0x00\n        /* \"#utility.yul\":11104:11171   */\n      tag_498\n        /* \"#utility.yul\":11168:11170   */\n      0x26\n        /* \"#utility.yul\":11163:11166   */\n      dup4\n        /* \"#utility.yul\":11104:11171   */\n      tag_369\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11097:11171   */\n      swap2\n      pop\n        /* \"#utility.yul\":11180:11273   */\n      tag_499\n        /* \"#utility.yul\":11269:11272   */\n      dup3\n        /* \"#utility.yul\":11180:11273   */\n      tag_376\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":11298:11300   */\n      0x40\n        /* \"#utility.yul\":11293:11296   */\n      dup3\n        /* \"#utility.yul\":11289:11301   */\n      add\n        /* \"#utility.yul\":11282:11301   */\n      swap1\n      pop\n        /* \"#utility.yul\":10941:11307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11313:11732   */\n    tag_266:\n        /* \"#utility.yul\":11479:11483   */\n      0x00\n        /* \"#utility.yul\":11517:11519   */\n      0x20\n        /* \"#utility.yul\":11506:11515   */\n      dup3\n        /* \"#utility.yul\":11502:11520   */\n      add\n        /* \"#utility.yul\":11494:11520   */\n      swap1\n      pop\n        /* \"#utility.yul\":11566:11575   */\n      dup2\n        /* \"#utility.yul\":11560:11564   */\n      dup2\n        /* \"#utility.yul\":11556:11576   */\n      sub\n        /* \"#utility.yul\":11552:11553   */\n      0x00\n        /* \"#utility.yul\":11541:11550   */\n      dup4\n        /* \"#utility.yul\":11537:11554   */\n      add\n        /* \"#utility.yul\":11530:11577   */\n      mstore\n        /* \"#utility.yul\":11594:11725   */\n      tag_501\n        /* \"#utility.yul\":11720:11724   */\n      dup2\n        /* \"#utility.yul\":11594:11725   */\n      tag_377\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11586:11725   */\n      swap1\n      pop\n        /* \"#utility.yul\":11313:11732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11738:12180   */\n    tag_284:\n        /* \"#utility.yul\":11887:11891   */\n      0x00\n        /* \"#utility.yul\":11925:11927   */\n      0x60\n        /* \"#utility.yul\":11914:11923   */\n      dup3\n        /* \"#utility.yul\":11910:11928   */\n      add\n        /* \"#utility.yul\":11902:11928   */\n      swap1\n      pop\n        /* \"#utility.yul\":11938:12009   */\n      tag_503\n        /* \"#utility.yul\":12006:12007   */\n      0x00\n        /* \"#utility.yul\":11995:12004   */\n      dup4\n        /* \"#utility.yul\":11991:12008   */\n      add\n        /* \"#utility.yul\":11982:11988   */\n      dup7\n        /* \"#utility.yul\":11938:12009   */\n      tag_368\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12019:12091   */\n      tag_504\n        /* \"#utility.yul\":12087:12089   */\n      0x20\n        /* \"#utility.yul\":12076:12085   */\n      dup4\n        /* \"#utility.yul\":12072:12090   */\n      add\n        /* \"#utility.yul\":12063:12069   */\n      dup6\n        /* \"#utility.yul\":12019:12091   */\n      tag_368\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":12101:12173   */\n      tag_505\n        /* \"#utility.yul\":12169:12171   */\n      0x40\n        /* \"#utility.yul\":12158:12167   */\n      dup4\n        /* \"#utility.yul\":12154:12172   */\n      add\n        /* \"#utility.yul\":12145:12151   */\n      dup5\n        /* \"#utility.yul\":12101:12173   */\n      tag_367\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11738:12180   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12186:12518   */\n    tag_300:\n        /* \"#utility.yul\":12307:12311   */\n      0x00\n        /* \"#utility.yul\":12345:12347   */\n      0x40\n        /* \"#utility.yul\":12334:12343   */\n      dup3\n        /* \"#utility.yul\":12330:12348   */\n      add\n        /* \"#utility.yul\":12322:12348   */\n      swap1\n      pop\n        /* \"#utility.yul\":12358:12429   */\n      tag_507\n        /* \"#utility.yul\":12426:12427   */\n      0x00\n        /* \"#utility.yul\":12415:12424   */\n      dup4\n        /* \"#utility.yul\":12411:12428   */\n      add\n        /* \"#utility.yul\":12402:12408   */\n      dup6\n        /* \"#utility.yul\":12358:12429   */\n      tag_368\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":12439:12511   */\n      tag_508\n        /* \"#utility.yul\":12507:12509   */\n      0x20\n        /* \"#utility.yul\":12496:12505   */\n      dup4\n        /* \"#utility.yul\":12492:12510   */\n      add\n        /* \"#utility.yul\":12483:12489   */\n      dup5\n        /* \"#utility.yul\":12439:12511   */\n      tag_367\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12186:12518   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12524:12640   */\n    tag_378:\n        /* \"#utility.yul\":12594:12615   */\n      tag_510\n        /* \"#utility.yul\":12609:12614   */\n      dup2\n        /* \"#utility.yul\":12594:12615   */\n      tag_365\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12587:12592   */\n      dup2\n        /* \"#utility.yul\":12584:12616   */\n      eq\n        /* \"#utility.yul\":12574:12634   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":12630:12631   */\n      0x00\n        /* \"#utility.yul\":12627:12628   */\n      dup1\n        /* \"#utility.yul\":12620:12632   */\n      revert\n        /* \"#utility.yul\":12574:12634   */\n    tag_511:\n        /* \"#utility.yul\":12524:12640   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12646:12783   */\n    tag_379:\n        /* \"#utility.yul\":12700:12705   */\n      0x00\n        /* \"#utility.yul\":12731:12737   */\n      dup2\n        /* \"#utility.yul\":12725:12738   */\n      mload\n        /* \"#utility.yul\":12716:12738   */\n      swap1\n      pop\n        /* \"#utility.yul\":12747:12777   */\n      tag_513\n        /* \"#utility.yul\":12771:12776   */\n      dup2\n        /* \"#utility.yul\":12747:12777   */\n      tag_378\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12646:12783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12789:13134   */\n    tag_315:\n        /* \"#utility.yul\":12856:12862   */\n      0x00\n        /* \"#utility.yul\":12905:12907   */\n      0x20\n        /* \"#utility.yul\":12893:12902   */\n      dup3\n        /* \"#utility.yul\":12884:12891   */\n      dup5\n        /* \"#utility.yul\":12880:12903   */\n      sub\n        /* \"#utility.yul\":12876:12908   */\n      slt\n        /* \"#utility.yul\":12873:12992   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":12911:12990   */\n      tag_516\n      tag_353\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":12873:12992   */\n    tag_515:\n        /* \"#utility.yul\":13031:13032   */\n      0x00\n        /* \"#utility.yul\":13056:13117   */\n      tag_517\n        /* \"#utility.yul\":13109:13116   */\n      dup5\n        /* \"#utility.yul\":13100:13106   */\n      dup3\n        /* \"#utility.yul\":13089:13098   */\n      dup6\n        /* \"#utility.yul\":13085:13107   */\n      add\n        /* \"#utility.yul\":13056:13117   */\n      tag_379\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":13046:13117   */\n      swap2\n      pop\n        /* \"#utility.yul\":13002:13127   */\n      pop\n        /* \"#utility.yul\":12789:13134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13140:13369   */\n    tag_380:\n        /* \"#utility.yul\":13280:13314   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":13276:13277   */\n      0x00\n        /* \"#utility.yul\":13268:13274   */\n      dup3\n        /* \"#utility.yul\":13264:13278   */\n      add\n        /* \"#utility.yul\":13257:13315   */\n      mstore\n        /* \"#utility.yul\":13349:13361   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13344:13346   */\n      0x20\n        /* \"#utility.yul\":13336:13342   */\n      dup3\n        /* \"#utility.yul\":13332:13347   */\n      add\n        /* \"#utility.yul\":13325:13362   */\n      mstore\n        /* \"#utility.yul\":13140:13369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13375:13741   */\n    tag_381:\n        /* \"#utility.yul\":13517:13520   */\n      0x00\n        /* \"#utility.yul\":13538:13605   */\n      tag_520\n        /* \"#utility.yul\":13602:13604   */\n      0x2a\n        /* \"#utility.yul\":13597:13600   */\n      dup4\n        /* \"#utility.yul\":13538:13605   */\n      tag_369\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":13531:13605   */\n      swap2\n      pop\n        /* \"#utility.yul\":13614:13707   */\n      tag_521\n        /* \"#utility.yul\":13703:13706   */\n      dup3\n        /* \"#utility.yul\":13614:13707   */\n      tag_380\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13732:13734   */\n      0x40\n        /* \"#utility.yul\":13727:13730   */\n      dup3\n        /* \"#utility.yul\":13723:13735   */\n      add\n        /* \"#utility.yul\":13716:13735   */\n      swap1\n      pop\n        /* \"#utility.yul\":13375:13741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13747:14166   */\n    tag_318:\n        /* \"#utility.yul\":13913:13917   */\n      0x00\n        /* \"#utility.yul\":13951:13953   */\n      0x20\n        /* \"#utility.yul\":13940:13949   */\n      dup3\n        /* \"#utility.yul\":13936:13954   */\n      add\n        /* \"#utility.yul\":13928:13954   */\n      swap1\n      pop\n        /* \"#utility.yul\":14000:14009   */\n      dup2\n        /* \"#utility.yul\":13994:13998   */\n      dup2\n        /* \"#utility.yul\":13990:14010   */\n      sub\n        /* \"#utility.yul\":13986:13987   */\n      0x00\n        /* \"#utility.yul\":13975:13984   */\n      dup4\n        /* \"#utility.yul\":13971:13988   */\n      add\n        /* \"#utility.yul\":13964:14011   */\n      mstore\n        /* \"#utility.yul\":14028:14159   */\n      tag_523\n        /* \"#utility.yul\":14154:14158   */\n      dup2\n        /* \"#utility.yul\":14028:14159   */\n      tag_381\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14020:14159   */\n      swap1\n      pop\n        /* \"#utility.yul\":13747:14166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14172:14397   */\n    tag_382:\n        /* \"#utility.yul\":14312:14346   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":14308:14309   */\n      0x00\n        /* \"#utility.yul\":14300:14306   */\n      dup3\n        /* \"#utility.yul\":14296:14310   */\n      add\n        /* \"#utility.yul\":14289:14347   */\n      mstore\n        /* \"#utility.yul\":14381:14389   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14376:14378   */\n      0x20\n        /* \"#utility.yul\":14368:14374   */\n      dup3\n        /* \"#utility.yul\":14364:14379   */\n      add\n        /* \"#utility.yul\":14357:14390   */\n      mstore\n        /* \"#utility.yul\":14172:14397   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14403:14769   */\n    tag_383:\n        /* \"#utility.yul\":14545:14548   */\n      0x00\n        /* \"#utility.yul\":14566:14633   */\n      tag_526\n        /* \"#utility.yul\":14630:14632   */\n      0x26\n        /* \"#utility.yul\":14625:14628   */\n      dup4\n        /* \"#utility.yul\":14566:14633   */\n      tag_369\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":14559:14633   */\n      swap2\n      pop\n        /* \"#utility.yul\":14642:14735   */\n      tag_527\n        /* \"#utility.yul\":14731:14734   */\n      dup3\n        /* \"#utility.yul\":14642:14735   */\n      tag_382\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":14760:14762   */\n      0x40\n        /* \"#utility.yul\":14755:14758   */\n      dup3\n        /* \"#utility.yul\":14751:14763   */\n      add\n        /* \"#utility.yul\":14744:14763   */\n      swap1\n      pop\n        /* \"#utility.yul\":14403:14769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14775:15194   */\n    tag_329:\n        /* \"#utility.yul\":14941:14945   */\n      0x00\n        /* \"#utility.yul\":14979:14981   */\n      0x20\n        /* \"#utility.yul\":14968:14977   */\n      dup3\n        /* \"#utility.yul\":14964:14982   */\n      add\n        /* \"#utility.yul\":14956:14982   */\n      swap1\n      pop\n        /* \"#utility.yul\":15028:15037   */\n      dup2\n        /* \"#utility.yul\":15022:15026   */\n      dup2\n        /* \"#utility.yul\":15018:15038   */\n      sub\n        /* \"#utility.yul\":15014:15015   */\n      0x00\n        /* \"#utility.yul\":15003:15012   */\n      dup4\n        /* \"#utility.yul\":14999:15016   */\n      add\n        /* \"#utility.yul\":14992:15039   */\n      mstore\n        /* \"#utility.yul\":15056:15187   */\n      tag_529\n        /* \"#utility.yul\":15182:15186   */\n      dup2\n        /* \"#utility.yul\":15056:15187   */\n      tag_383\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":15048:15187   */\n      swap1\n      pop\n        /* \"#utility.yul\":14775:15194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15200:15379   */\n    tag_384:\n        /* \"#utility.yul\":15340:15371   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":15336:15337   */\n      0x00\n        /* \"#utility.yul\":15328:15334   */\n      dup3\n        /* \"#utility.yul\":15324:15338   */\n      add\n        /* \"#utility.yul\":15317:15372   */\n      mstore\n        /* \"#utility.yul\":15200:15379   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15385:15751   */\n    tag_385:\n        /* \"#utility.yul\":15527:15530   */\n      0x00\n        /* \"#utility.yul\":15548:15615   */\n      tag_532\n        /* \"#utility.yul\":15612:15614   */\n      0x1d\n        /* \"#utility.yul\":15607:15610   */\n      dup4\n        /* \"#utility.yul\":15548:15615   */\n      tag_369\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":15541:15615   */\n      swap2\n      pop\n        /* \"#utility.yul\":15624:15717   */\n      tag_533\n        /* \"#utility.yul\":15713:15716   */\n      dup3\n        /* \"#utility.yul\":15624:15717   */\n      tag_384\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15742:15744   */\n      0x20\n        /* \"#utility.yul\":15737:15740   */\n      dup3\n        /* \"#utility.yul\":15733:15745   */\n      add\n        /* \"#utility.yul\":15726:15745   */\n      swap1\n      pop\n        /* \"#utility.yul\":15385:15751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15757:16176   */\n    tag_334:\n        /* \"#utility.yul\":15923:15927   */\n      0x00\n        /* \"#utility.yul\":15961:15963   */\n      0x20\n        /* \"#utility.yul\":15950:15959   */\n      dup3\n        /* \"#utility.yul\":15946:15964   */\n      add\n        /* \"#utility.yul\":15938:15964   */\n      swap1\n      pop\n        /* \"#utility.yul\":16010:16019   */\n      dup2\n        /* \"#utility.yul\":16004:16008   */\n      dup2\n        /* \"#utility.yul\":16000:16020   */\n      sub\n        /* \"#utility.yul\":15996:15997   */\n      0x00\n        /* \"#utility.yul\":15985:15994   */\n      dup4\n        /* \"#utility.yul\":15981:15998   */\n      add\n        /* \"#utility.yul\":15974:16021   */\n      mstore\n        /* \"#utility.yul\":16038:16169   */\n      tag_535\n        /* \"#utility.yul\":16164:16168   */\n      dup2\n        /* \"#utility.yul\":16038:16169   */\n      tag_385\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16030:16169   */\n      swap1\n      pop\n        /* \"#utility.yul\":15757:16176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16182:16280   */\n    tag_386:\n        /* \"#utility.yul\":16233:16239   */\n      0x00\n        /* \"#utility.yul\":16267:16272   */\n      dup2\n        /* \"#utility.yul\":16261:16273   */\n      mload\n        /* \"#utility.yul\":16251:16273   */\n      swap1\n      pop\n        /* \"#utility.yul\":16182:16280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16286:16433   */\n    tag_387:\n        /* \"#utility.yul\":16387:16398   */\n      0x00\n        /* \"#utility.yul\":16424:16427   */\n      dup2\n        /* \"#utility.yul\":16409:16427   */\n      swap1\n      pop\n        /* \"#utility.yul\":16286:16433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16439:16746   */\n    tag_388:\n        /* \"#utility.yul\":16507:16508   */\n      0x00\n        /* \"#utility.yul\":16517:16630   */\n    tag_539:\n        /* \"#utility.yul\":16531:16537   */\n      dup4\n        /* \"#utility.yul\":16528:16529   */\n      dup2\n        /* \"#utility.yul\":16525:16538   */\n      lt\n        /* \"#utility.yul\":16517:16630   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":16616:16617   */\n      dup1\n        /* \"#utility.yul\":16611:16614   */\n      dup3\n        /* \"#utility.yul\":16607:16618   */\n      add\n        /* \"#utility.yul\":16601:16619   */\n      mload\n        /* \"#utility.yul\":16597:16598   */\n      dup2\n        /* \"#utility.yul\":16592:16595   */\n      dup5\n        /* \"#utility.yul\":16588:16599   */\n      add\n        /* \"#utility.yul\":16581:16620   */\n      mstore\n        /* \"#utility.yul\":16553:16555   */\n      0x20\n        /* \"#utility.yul\":16550:16551   */\n      dup2\n        /* \"#utility.yul\":16546:16556   */\n      add\n        /* \"#utility.yul\":16541:16556   */\n      swap1\n      pop\n        /* \"#utility.yul\":16517:16630   */\n      jump(tag_539)\n    tag_541:\n        /* \"#utility.yul\":16648:16654   */\n      dup4\n        /* \"#utility.yul\":16645:16646   */\n      dup2\n        /* \"#utility.yul\":16642:16655   */\n      gt\n        /* \"#utility.yul\":16639:16740   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":16728:16729   */\n      0x00\n        /* \"#utility.yul\":16719:16725   */\n      dup5\n        /* \"#utility.yul\":16714:16717   */\n      dup5\n        /* \"#utility.yul\":16710:16726   */\n      add\n        /* \"#utility.yul\":16703:16730   */\n      mstore\n        /* \"#utility.yul\":16639:16740   */\n    tag_542:\n        /* \"#utility.yul\":16488:16746   */\n      pop\n        /* \"#utility.yul\":16439:16746   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16752:17125   */\n    tag_389:\n        /* \"#utility.yul\":16856:16859   */\n      0x00\n        /* \"#utility.yul\":16884:16922   */\n      tag_544\n        /* \"#utility.yul\":16916:16921   */\n      dup3\n        /* \"#utility.yul\":16884:16922   */\n      tag_386\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":16938:17026   */\n      tag_545\n        /* \"#utility.yul\":17019:17025   */\n      dup2\n        /* \"#utility.yul\":17014:17017   */\n      dup6\n        /* \"#utility.yul\":16938:17026   */\n      tag_387\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":16931:17026   */\n      swap4\n      pop\n        /* \"#utility.yul\":17035:17087   */\n      tag_546\n        /* \"#utility.yul\":17080:17086   */\n      dup2\n        /* \"#utility.yul\":17075:17078   */\n      dup6\n        /* \"#utility.yul\":17068:17072   */\n      0x20\n        /* \"#utility.yul\":17061:17066   */\n      dup7\n        /* \"#utility.yul\":17057:17073   */\n      add\n        /* \"#utility.yul\":17035:17087   */\n      tag_388\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":17112:17118   */\n      dup1\n        /* \"#utility.yul\":17107:17110   */\n      dup5\n        /* \"#utility.yul\":17103:17119   */\n      add\n        /* \"#utility.yul\":17096:17119   */\n      swap2\n      pop\n        /* \"#utility.yul\":16860:17125   */\n      pop\n        /* \"#utility.yul\":16752:17125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17131:17402   */\n    tag_336:\n        /* \"#utility.yul\":17261:17264   */\n      0x00\n        /* \"#utility.yul\":17283:17376   */\n      tag_548\n        /* \"#utility.yul\":17372:17375   */\n      dup3\n        /* \"#utility.yul\":17363:17369   */\n      dup5\n        /* \"#utility.yul\":17283:17376   */\n      tag_389\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":17276:17376   */\n      swap2\n      pop\n        /* \"#utility.yul\":17393:17396   */\n      dup2\n        /* \"#utility.yul\":17386:17396   */\n      swap1\n      pop\n        /* \"#utility.yul\":17131:17402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17408:17507   */\n    tag_390:\n        /* \"#utility.yul\":17460:17466   */\n      0x00\n        /* \"#utility.yul\":17494:17499   */\n      dup2\n        /* \"#utility.yul\":17488:17500   */\n      mload\n        /* \"#utility.yul\":17478:17500   */\n      swap1\n      pop\n        /* \"#utility.yul\":17408:17507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17513:17615   */\n    tag_391:\n        /* \"#utility.yul\":17554:17560   */\n      0x00\n        /* \"#utility.yul\":17605:17607   */\n      0x1f\n        /* \"#utility.yul\":17601:17608   */\n      not\n        /* \"#utility.yul\":17596:17598   */\n      0x1f\n        /* \"#utility.yul\":17589:17594   */\n      dup4\n        /* \"#utility.yul\":17585:17599   */\n      add\n        /* \"#utility.yul\":17581:17609   */\n      and\n        /* \"#utility.yul\":17571:17609   */\n      swap1\n      pop\n        /* \"#utility.yul\":17513:17615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17621:17985   */\n    tag_392:\n        /* \"#utility.yul\":17709:17712   */\n      0x00\n        /* \"#utility.yul\":17737:17776   */\n      tag_552\n        /* \"#utility.yul\":17770:17775   */\n      dup3\n        /* \"#utility.yul\":17737:17776   */\n      tag_390\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":17792:17863   */\n      tag_553\n        /* \"#utility.yul\":17856:17862   */\n      dup2\n        /* \"#utility.yul\":17851:17854   */\n      dup6\n        /* \"#utility.yul\":17792:17863   */\n      tag_369\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":17785:17863   */\n      swap4\n      pop\n        /* \"#utility.yul\":17872:17924   */\n      tag_554\n        /* \"#utility.yul\":17917:17923   */\n      dup2\n        /* \"#utility.yul\":17912:17915   */\n      dup6\n        /* \"#utility.yul\":17905:17909   */\n      0x20\n        /* \"#utility.yul\":17898:17903   */\n      dup7\n        /* \"#utility.yul\":17894:17910   */\n      add\n        /* \"#utility.yul\":17872:17924   */\n      tag_388\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":17949:17978   */\n      tag_555\n        /* \"#utility.yul\":17971:17977   */\n      dup2\n        /* \"#utility.yul\":17949:17978   */\n      tag_391\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":17944:17947   */\n      dup5\n        /* \"#utility.yul\":17940:17979   */\n      add\n        /* \"#utility.yul\":17933:17979   */\n      swap2\n      pop\n        /* \"#utility.yul\":17713:17985   */\n      pop\n        /* \"#utility.yul\":17621:17985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17991:18304   */\n    tag_349:\n        /* \"#utility.yul\":18104:18108   */\n      0x00\n        /* \"#utility.yul\":18142:18144   */\n      0x20\n        /* \"#utility.yul\":18131:18140   */\n      dup3\n        /* \"#utility.yul\":18127:18145   */\n      add\n        /* \"#utility.yul\":18119:18145   */\n      swap1\n      pop\n        /* \"#utility.yul\":18191:18200   */\n      dup2\n        /* \"#utility.yul\":18185:18189   */\n      dup2\n        /* \"#utility.yul\":18181:18201   */\n      sub\n        /* \"#utility.yul\":18177:18178   */\n      0x00\n        /* \"#utility.yul\":18166:18175   */\n      dup4\n        /* \"#utility.yul\":18162:18179   */\n      add\n        /* \"#utility.yul\":18155:18202   */\n      mstore\n        /* \"#utility.yul\":18219:18297   */\n      tag_557\n        /* \"#utility.yul\":18292:18296   */\n      dup2\n        /* \"#utility.yul\":18283:18289   */\n      dup5\n        /* \"#utility.yul\":18219:18297   */\n      tag_392\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":18211:18297   */\n      swap1\n      pop\n        /* \"#utility.yul\":17991:18304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206080df30709ffc63f62f5f3d50c085629ce899587f1dda48bb1132431e8b5a6a64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_123": {
									"entryPoint": null,
									"id": 123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_874": {
									"entryPoint": null,
									"id": 874,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_753": {
									"entryPoint": 268,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 276,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002bf038038062002bf0833981810160405281019062000037919062000244565b60016000819055506200005f620000536200010c60201b60201c565b6200011460201b60201c565b600f600381905550605060048190555080600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006600260006276a70081526020019081526020016000208190555060076002600062ed4e008152602001908152602001600020819055506008600260006301e133808152602001908152602001600020819055505062000276565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020c82620001df565b9050919050565b6200021e81620001ff565b81146200022a57600080fd5b50565b6000815190506200023e8162000213565b92915050565b6000602082840312156200025d576200025c620001da565b5b60006200026d848285016200022d565b91505092915050565b61296a80620002866000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638c8e8fee116100de578063bed9d86111610097578063d2a569c311610071578063d2a569c3146103cd578063d5dbdf1b146103d7578063f2fde38b146103f3578063fab2f86b1461040f57610173565b8063bed9d86114610387578063c63aa3e714610391578063cb79c2e1146103af57610173565b80638c8e8fee1461029d5780638da5cb5b146102bb578063a143a5f2146102d9578063a3ec138d14610309578063b5d9df8314610339578063b87da76d1461036957610173565b8063632a9a5211610130578063632a9a521461021557806365f8c6c51461021f578063671d2b751461023b578063715018a6146102595780638891cf0d146102635780638c63f97f1461028157610173565b8063070c8b74146101785780630c51b88f1461018257806310486b6a1461019e5780631ec6b60a146101bc5780632d15cc04146101c65780635f5300ff146101f7575b600080fd5b610180610419565b005b61019c60048036038101906101979190612062565b6105b5565b005b6101a6610972565b6040516101b39190612195565b60405180910390f35b6101c4610b47565b005b6101e060048036038101906101db91906121b1565b610c9e565b6040516101ee9291906121f9565b60405180910390f35b6101ff610d5d565b60405161020c9190612231565b60405180910390f35b61021d610d63565b005b610239600480360381019061023491906121b1565b610f07565b005b610243610fef565b604051610250919061224c565b60405180910390f35b610261611100565b005b61026b611188565b6040516102789190612231565b60405180910390f35b61029b60048036038101906102969190612267565b61118e565b005b6102a5611286565b6040516102b291906122a3565b60405180910390f35b6102c36112ac565b6040516102d091906122a3565b60405180910390f35b6102f360048036038101906102ee9190612267565b6112d6565b6040516103009190612231565b60405180910390f35b610323600480360381019061031e91906121b1565b6112ee565b604051610330919061224c565b60405180910390f35b610353600480360381019061034e9190612267565b611319565b6040516103609190612231565b60405180910390f35b61037161133c565b60405161037e9190612231565b60405180910390f35b61038f611342565b005b6103996115d3565b6040516103a69190612231565b60405180910390f35b6103b76115db565b6040516103c49190612231565b60405180910390f35b6103d56115e1565b005b6103f160048036038101906103ec9190612267565b611666565b005b61040d600480360381019061040891906121b1565b61175e565b005b610417611856565b005b6002600054141561045f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104569061231b565b60405180910390fd5b600260008190555061046f6118f7565b61047761193f565b60001515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060009054906101000a900460ff1615151415610518576040517f8b74220000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60001515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060009054906101000a905050506001600a6000600754815260200190815260200160002060008282546105a4919061236a565b925050819055506001600081905550565b600260005414156105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f29061231b565b60405180910390fd5b600260008190555061060b6119cf565b73ffffffffffffffffffffffffffffffffffffffff166106296112ac565b73ffffffffffffffffffffffffffffffffffffffff161461067f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610676906123ea565b60405180910390fd5b600082116106b9576040517f88b440d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610735576040517f04462d2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060026000838152602001908152602001600020541415610783576040517f95377be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160086000828254610796919061240a565b925050819055506001600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060004290506040518060e00160405280848152602001828152602001600260008581526020019081526020016000205481526020018284610839919061240a565b815260200160008152602001600081526020016000815250600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060155905050610907600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163330866119d7565b8373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8483848661094d919061240a565b60405161095c93929190612460565b60405180910390a2506001600081905550505050565b61097a611f65565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000816000015111610a4c576040517fb018f08700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051806060016040528060008152602001600081526020018381525090506000610a7883611a60565b9050428260400151606001511115610ad8576103e860035482610a9b9190612497565b610aa59190612520565b6103e86003548560000151610aba9190612497565b610ac49190612520565b610ace919061240a565b8260200181815250505b6000610ae78460c00151611319565b1115610b12576000610afc8460000151611ac0565b905080836040015160a001818152505050610b22565b6000826040015160a00181815250505b8082604001516080018181525050826000015182600001818152505081935050505090565b60026000541415610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b849061231b565b60405180910390fd5b6002600081905550610b9d6119cf565b73ffffffffffffffffffffffffffffffffffffffff16610bbb6112ac565b73ffffffffffffffffffffffffffffffffffffffff1614610c11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c08906123ea565b60405180910390fd5b60011515600660009054906101000a900460ff1615151415610c5f576040517f6da4cd2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660006101000a81548160ff021916908315150217905550600160076000828254610c8d919061240a565b925050819055506001600081905550565b600080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060009054906101000a900460ff1691509150915091565b60085481565b60026000541415610da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da09061231b565b60405180910390fd5b6002600081905550610db96118f7565b610dc161193f565b60011515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060009054906101000a900460ff1615151415610e62576040517f740e33b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600a600060075481526020019081526020016000206000828254610ef6919061240a565b925050819055506001600081905550565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541115610feb576000610f668260060154611319565b1415610f9e576040517fdd8456cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160050181905550428160060181905550610fea600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633610fe58460000154611ac0565b611af3565b5b5050565b6000610ff96119cf565b73ffffffffffffffffffffffffffffffffffffffff166110176112ac565b73ffffffffffffffffffffffffffffffffffffffff161461106d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611064906123ea565b60405180910390fd5b6110756118f7565b6001600854116110b1576040517f2f9686de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600a60056008546110c49190612497565b6110ce9190612520565b905080600a600060075481526020019081526020016000205411156110f75760019150506110fd565b60009150505b90565b6111086119cf565b73ffffffffffffffffffffffffffffffffffffffff166111266112ac565b73ffffffffffffffffffffffffffffffffffffffff161461117c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611173906123ea565b60405180910390fd5b6111866000611b79565b565b60045481565b6111966119cf565b73ffffffffffffffffffffffffffffffffffffffff166111b46112ac565b73ffffffffffffffffffffffffffffffffffffffff161461120a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611201906123ea565b60405180910390fd5b601e811115611245576040517ff1a470d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003819055507fcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a98160405161127b9190612231565b60405180910390a150565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a6020528060005260406000206000915090505481565b60096020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b600062093a80824261132b919061236a565b6113359190612520565b9050919050565b60055481565b60026000541415611388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137f9061231b565b60405180910390fd5b60026000819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050600061142f82611a60565b9050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160009055600382016000905560048201600090556005820160009055600682016000905550506001600860008282546114be919061236a565b92505081905550600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060006101000a81549060ff0219169055428260600151111561158a57600080611547846000015184611c3f565b91509150611583600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633838561157e919061240a565b611af3565b50506115c7565b6115c6600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338385600001516115c1919061240a565b611af3565b5b50506001600081905550565b600042905090565b60035481565b6115e96119cf565b73ffffffffffffffffffffffffffffffffffffffff166116076112ac565b73ffffffffffffffffffffffffffffffffffffffff161461165d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611654906123ea565b60405180910390fd5b42600581905550565b61166e6119cf565b73ffffffffffffffffffffffffffffffffffffffff1661168c6112ac565b73ffffffffffffffffffffffffffffffffffffffff16146116e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d9906123ea565b60405180910390fd5b60c881111561171d576040517fa552cf1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806004819055507fcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e816040516117539190612231565b60405180910390a150565b6117666119cf565b73ffffffffffffffffffffffffffffffffffffffff166117846112ac565b73ffffffffffffffffffffffffffffffffffffffff16146117da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d1906123ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561184a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611841906125c3565b60405180910390fd5b61185381611b79565b50565b61185e6119cf565b73ffffffffffffffffffffffffffffffffffffffff1661187c6112ac565b73ffffffffffffffffffffffffffffffffffffffff16146118d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c9906123ea565b60405180910390fd5b6118da6118f7565b6000600660006101000a81548160ff021916908315150217905550565b600660009054906101000a900460ff1661193d576040517fa1d1891400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60001515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151514156119cd576040517f1e567dd400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600033905090565b611a5a846323b872dd60e01b8585856040516024016119f8939291906125e3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611caf565b50505050565b60008082600001511415611a775760009050611abb565b6a52b7d2dcc80cd2e4000000611a908360200151611d76565b83604001518460000151611aa49190612497565b611aae9190612497565b611ab89190612520565b90505b919050565b60006301dfe2006103e860045484611ad89190612497565b611ae29190612520565b611aec9190612520565b9050919050565b611b748363a9059cbb60e01b8484604051602401611b1292919061261a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611caf565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806000841415611c575760008091509150611ca8565b6103e860035485611c689190612497565b611c729190612520565b84611c7d919061236a565b6103e860035485611c8e9190612497565b611c989190612520565b84611ca3919061236a565b915091505b9250929050565b6000611d11826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611daf9092919063ffffffff16565b9050600081511115611d715780806020019051810190611d31919061266f565b611d70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d679061270e565b60405180910390fd5b5b505050565b60006301e1338069d3c21bcecceda10000008342611d94919061236a565b611d9e9190612497565b611da89190612520565b9050919050565b6060611dbe8484600085611dc7565b90509392505050565b606082471015611e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e03906127a0565b60405180910390fd5b611e1585611edb565b611e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4b9061280c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611e7d91906128a6565b60006040518083038185875af1925050503d8060008114611eba576040519150601f19603f3d011682016040523d82523d6000602084013e611ebf565b606091505b5091509150611ecf828286611efe565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611f0e57829050611f5e565b600083511115611f215782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f559190612912565b60405180910390fd5b9392505050565b60405180606001604052806000815260200160008152602001611f86611f8c565b81525090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ff982611fce565b9050919050565b61200981611fee565b811461201457600080fd5b50565b60008135905061202681612000565b92915050565b6000819050919050565b61203f8161202c565b811461204a57600080fd5b50565b60008135905061205c81612036565b92915050565b60008060006060848603121561207b5761207a611fc9565b5b600061208986828701612017565b935050602061209a8682870161204d565b92505060406120ab8682870161204d565b9150509250925092565b6120be8161202c565b82525050565b60e0820160008201516120da60008501826120b5565b5060208201516120ed60208501826120b5565b50604082015161210060408501826120b5565b50606082015161211360608501826120b5565b50608082015161212660808501826120b5565b5060a082015161213960a08501826120b5565b5060c082015161214c60c08501826120b5565b50505050565b6101208201600082015161216960008501826120b5565b50602082015161217c60208501826120b5565b50604082015161218f60408501826120c4565b50505050565b6000610120820190506121ab6000830184612152565b92915050565b6000602082840312156121c7576121c6611fc9565b5b60006121d584828501612017565b91505092915050565b60008115159050919050565b6121f3816121de565b82525050565b600060408201905061220e60008301856121ea565b61221b60208301846121ea565b9392505050565b61222b8161202c565b82525050565b60006020820190506122466000830184612222565b92915050565b600060208201905061226160008301846121ea565b92915050565b60006020828403121561227d5761227c611fc9565b5b600061228b8482850161204d565b91505092915050565b61229d81611fee565b82525050565b60006020820190506122b86000830184612294565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612305601f836122be565b9150612310826122cf565b602082019050919050565b60006020820190508181036000830152612334816122f8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123758261202c565b91506123808361202c565b9250828210156123935761239261233b565b5b828203905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006123d46020836122be565b91506123df8261239e565b602082019050919050565b60006020820190508181036000830152612403816123c7565b9050919050565b60006124158261202c565b91506124208361202c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124555761245461233b565b5b828201905092915050565b60006060820190506124756000830186612222565b6124826020830185612222565b61248f6040830184612222565b949350505050565b60006124a28261202c565b91506124ad8361202c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124e6576124e561233b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061252b8261202c565b91506125368361202c565b925082612546576125456124f1565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006125ad6026836122be565b91506125b882612551565b604082019050919050565b600060208201905081810360008301526125dc816125a0565b9050919050565b60006060820190506125f86000830186612294565b6126056020830185612294565b6126126040830184612222565b949350505050565b600060408201905061262f6000830185612294565b61263c6020830184612222565b9392505050565b61264c816121de565b811461265757600080fd5b50565b60008151905061266981612643565b92915050565b60006020828403121561268557612684611fc9565b5b60006126938482850161265a565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006126f8602a836122be565b91506127038261269c565b604082019050919050565b60006020820190508181036000830152612727816126eb565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061278a6026836122be565b91506127958261272e565b604082019050919050565b600060208201905081810360008301526127b98161277d565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006127f6601d836122be565b9150612801826127c0565b602082019050919050565b60006020820190508181036000830152612825816127e9565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612860578082015181840152602081019050612845565b8381111561286f576000848401525b50505050565b60006128808261282c565b61288a8185612837565b935061289a818560208601612842565b80840191505092915050565b60006128b28284612875565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006128e4826128bd565b6128ee81856122be565b93506128fe818560208601612842565b612907816128c8565b840191505092915050565b6000602082019050818103600083015261292c81846128d9565b90509291505056fea26469706673582212206080df30709ffc63f62f5f3d50c085629ce899587f1dda48bb1132431e8b5a6a64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2BF0 CODESIZE SUB DUP1 PUSH3 0x2BF0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x244 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH3 0x5F PUSH3 0x53 PUSH3 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x114 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xF PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x50 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x2 PUSH1 0x0 PUSH3 0x76A700 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x2 PUSH1 0x0 PUSH3 0xED4E00 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x2 PUSH1 0x0 PUSH4 0x1E13380 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH3 0x276 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20C DUP3 PUSH3 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x21E DUP2 PUSH3 0x1FF JUMP JUMPDEST DUP2 EQ PUSH3 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x23E DUP2 PUSH3 0x213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x25D JUMPI PUSH3 0x25C PUSH3 0x1DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x26D DUP5 DUP3 DUP6 ADD PUSH3 0x22D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x296A DUP1 PUSH3 0x286 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C8E8FEE GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBED9D861 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD2A569C3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD2A569C3 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x40F JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xC63AA3E7 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x3AF JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x8C8E8FEE EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xB5D9DF83 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x369 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x632A9A52 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x281 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xC51B88F EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x1F7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x419 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0xB47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP3 SWAP2 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH2 0xD63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0x1100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x118E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x12AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x371 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH2 0x1342 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH2 0x15D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH2 0x15E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x1666 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x175E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH2 0x1856 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x46F PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0x477 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8B74220000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x60B PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x629 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x676 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x88B440D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4462D2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x95377BE400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP5 PUSH2 0x839 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH2 0x907 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP7 PUSH2 0x19D7 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP5 DUP4 DUP5 DUP7 PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x97A PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB018F08700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xA78 DUP4 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0xAD8 JUMPI PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP3 PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 PUSH2 0xAE7 DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0x1319 JUMP JUMPDEST GT ISZERO PUSH2 0xB12 JUMPI PUSH1 0x0 PUSH2 0xAFC DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1AC0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB84 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xB9D PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBBB PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC08 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DA4CD2E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC8D SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA0 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xDB9 PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0xDC1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xE62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x740E33B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEF6 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xFEB JUMPI PUSH1 0x0 PUSH2 0xF66 DUP3 PUSH1 0x6 ADD SLOAD PUSH2 0x1319 JUMP JUMPDEST EQ ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD8456CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xFEA PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0xFE5 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1AC0 JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF9 PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1017 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1064 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 SLOAD GT PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2F9686DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x5 PUSH1 0x8 SLOAD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x10F7 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1108 PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1126 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x117C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1186 PUSH1 0x0 PUSH2 0x1B79 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1196 PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11B4 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x120A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1201 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF1A470D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 DUP2 PUSH1 0x40 MLOAD PUSH2 0x127B SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 DUP3 TIMESTAMP PUSH2 0x132B SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST PUSH2 0x1335 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137F SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x142F DUP3 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14BE SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE TIMESTAMP DUP3 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x158A JUMPI PUSH1 0x0 DUP1 PUSH2 0x1547 DUP5 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0x1C3F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1583 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST POP POP PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x15C6 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15E9 PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1607 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1654 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x166E PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x168C PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D9 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0x171D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA552CF1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E DUP2 PUSH1 0x40 MLOAD PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1766 PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1784 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D1 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x184A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1841 SWAP1 PUSH2 0x25C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1853 DUP2 PUSH2 0x1B79 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x185E PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x187C PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C9 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18DA PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x193D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D1891400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x19CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E567DD400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A5A DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1CAF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1A77 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1ABB JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1A90 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1D76 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1AA4 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1AAE SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1AB8 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x4 SLOAD DUP5 PUSH2 0x1AD8 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1AE2 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST PUSH2 0x1AEC SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B74 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B12 SWAP3 SWAP2 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1CAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x1C57 JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x1CA8 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x1C68 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1C72 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST DUP5 PUSH2 0x1C7D SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x1C8E SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1C98 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST DUP5 PUSH2 0x1CA3 SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DAF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1D71 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D31 SWAP2 SWAP1 PUSH2 0x266F JUMP JUMPDEST PUSH2 0x1D70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D67 SWAP1 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x1D94 SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST PUSH2 0x1D9E SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1DA8 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DBE DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1E0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E03 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E15 DUP6 PUSH2 0x1EDB JUMP JUMPDEST PUSH2 0x1E54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4B SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1E7D SWAP2 SWAP1 PUSH2 0x28A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1EBA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1ECF DUP3 DUP3 DUP7 PUSH2 0x1EFE JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1F0E JUMPI DUP3 SWAP1 POP PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1F21 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F55 SWAP2 SWAP1 PUSH2 0x2912 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F86 PUSH2 0x1F8C JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF9 DUP3 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2009 DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP2 EQ PUSH2 0x2014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2026 DUP2 PUSH2 0x2000 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203F DUP2 PUSH2 0x202C JUMP JUMPDEST DUP2 EQ PUSH2 0x204A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x205C DUP2 PUSH2 0x2036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x207B JUMPI PUSH2 0x207A PUSH2 0x1FC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2089 DUP7 DUP3 DUP8 ADD PUSH2 0x2017 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x209A DUP7 DUP3 DUP8 ADD PUSH2 0x204D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20AB DUP7 DUP3 DUP8 ADD PUSH2 0x204D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x20BE DUP2 PUSH2 0x202C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x20DA PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x20ED PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2100 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2113 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2126 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2139 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x214C PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2169 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x217C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x218F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x20C4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x21AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2152 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C7 JUMPI PUSH2 0x21C6 PUSH2 0x1FC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D5 DUP5 DUP3 DUP6 ADD PUSH2 0x2017 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21F3 DUP2 PUSH2 0x21DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x220E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x21EA JUMP JUMPDEST PUSH2 0x221B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x222B DUP2 PUSH2 0x202C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2246 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2222 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2261 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227D JUMPI PUSH2 0x227C PUSH2 0x1FC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228B DUP5 DUP3 DUP6 ADD PUSH2 0x204D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x229D DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2305 PUSH1 0x1F DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2310 DUP3 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2334 DUP2 PUSH2 0x22F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2375 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x2380 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2393 JUMPI PUSH2 0x2392 PUSH2 0x233B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23D4 PUSH1 0x20 DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x23DF DUP3 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2403 DUP2 PUSH2 0x23C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2415 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x2420 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2455 JUMPI PUSH2 0x2454 PUSH2 0x233B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2475 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0x2482 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0x248F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2222 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A2 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x24AD DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x24E6 JUMPI PUSH2 0x24E5 PUSH2 0x233B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x252B DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x2536 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2546 JUMPI PUSH2 0x2545 PUSH2 0x24F1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AD PUSH1 0x26 DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x25B8 DUP3 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25DC DUP2 PUSH2 0x25A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25F8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x2605 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x2612 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2222 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x262F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x263C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2222 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x264C DUP2 PUSH2 0x21DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2669 DUP2 PUSH2 0x2643 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2685 JUMPI PUSH2 0x2684 PUSH2 0x1FC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2693 DUP5 DUP3 DUP6 ADD PUSH2 0x265A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F8 PUSH1 0x2A DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2703 DUP3 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2727 DUP2 PUSH2 0x26EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278A PUSH1 0x26 DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2795 DUP3 PUSH2 0x272E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B9 DUP2 PUSH2 0x277D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F6 PUSH1 0x1D DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2801 DUP3 PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2825 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2860 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2845 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x286F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2880 DUP3 PUSH2 0x282C JUMP JUMPDEST PUSH2 0x288A DUP2 DUP6 PUSH2 0x2837 JUMP JUMPDEST SWAP4 POP PUSH2 0x289A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2842 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B2 DUP3 DUP5 PUSH2 0x2875 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E4 DUP3 PUSH2 0x28BD JUMP JUMPDEST PUSH2 0x28EE DUP2 DUP6 PUSH2 0x22BE JUMP JUMPDEST SWAP4 POP PUSH2 0x28FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x2907 DUP2 PUSH2 0x28C8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x292C DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x80 0xDF ADDRESS PUSH17 0x9FFC63F62F5F3D50C085629CE899587F1D 0xDA BASEFEE 0xBB GT ORIGIN NUMBER 0x1E DUP12 GAS PUSH11 0x64736F6C634300080B0033 ",
							"sourceMap": "980:11703:6:-:0;;;1680:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:1;1806:7;:22;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1800:2:6;1779:18;:23;;;;1826:2;1812:11;:16;;;;1855:5;1839:13;;:21;;;;;;;;;;;;;;;;;;1897:1;1871:14;:23;1886:7;1871:23;;;;;;;;;;;:27;;;;1935:1;1908:14;:24;1923:8;1908:24;;;;;;;;;;;:28;;;;1973:1;1946:14;:24;1961:8;1946:24;;;;;;;;;;;:28;;;;1680:301;980:11703;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;980:11703:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_blockTimestamp_1430": {
									"entryPoint": 5587,
									"id": 1430,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_calculateAirdrop_1464": {
									"entryPoint": 6848,
									"id": 1464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakeReward_1141": {
									"entryPoint": 6752,
									"id": 1141,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingDuration_1110": {
									"entryPoint": 7542,
									"id": 1110,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingWithPenalty_1182": {
									"entryPoint": 7231,
									"id": 1182,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_callOptionalReturn_445": {
									"entryPoint": 7343,
									"id": 445,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkVotingStatus_956": {
									"entryPoint": 6391,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_isVoter_938": {
									"entryPoint": 6463,
									"id": 938,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_753": {
									"entryPoint": 6607,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 7033,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@airdropRate_819": {
									"entryPoint": 4488,
									"id": 819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropSince_821": {
									"entryPoint": 4924,
									"id": 821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateWeek_1446": {
									"entryPoint": 4889,
									"id": 1446,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeAirdropPercentage_1421": {
									"entryPoint": 5734,
									"id": 1421,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePenaltyFee_1091": {
									"entryPoint": 4494,
									"id": 1091,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimAirdrop_1521": {
									"entryPoint": 3847,
									"id": 1521,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_605": {
									"entryPoint": 7623,
									"id": 605,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_535": {
									"entryPoint": 7599,
									"id": 535,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getVoters_1543": {
									"entryPoint": 3230,
									"id": 1543,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getVotingResult_1686": {
									"entryPoint": 4079,
									"id": 1686,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasStake_1386": {
									"entryPoint": 2418,
									"id": 1386,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_464": {
									"entryPoint": 7899,
									"id": 464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 4780,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 4352,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@retractVote_1647": {
									"entryPoint": 1049,
									"id": 1647,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_279": {
									"entryPoint": 6615,
									"id": 279,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_253": {
									"entryPoint": 6899,
									"id": 253,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1067": {
									"entryPoint": 1461,
									"id": 1067,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakingPenaltyRate_817": {
									"entryPoint": 5595,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAirdrop_1397": {
									"entryPoint": 5601,
									"id": 1397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startVoting_1567": {
									"entryPoint": 2887,
									"id": 1567,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopVoting_1698": {
									"entryPoint": 6230,
									"id": 1698,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_address_838": {
									"entryPoint": 4742,
									"id": 838,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalVoters_827": {
									"entryPoint": 3421,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 5982,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResult_740": {
									"entryPoint": 7934,
									"id": 740,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@vote_1607": {
									"entryPoint": 3427,
									"id": 1607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@votedUsers_836": {
									"entryPoint": 4822,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voters_832": {
									"entryPoint": 4846,
									"id": 832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawStake_1269": {
									"entryPoint": 4930,
									"id": 1269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 8290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$889_memory_ptr_to_t_struct$_Stake_$889_memory_ptr": {
									"entryPoint": 8388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_StakingSummary_$897_memory_ptr_to_t_struct$_StakingSummary_$897_memory_ptr_fromStack": {
									"entryPoint": 8530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9699,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9754,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 8697,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$897_memory_ptr__to_t_struct$_StakingSummary_$897_memory_ptr__fromStack_reversed": {
									"entryPoint": 8597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9312,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 10306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 10030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 10176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 9884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18307:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:7",
														"type": ""
													}
												],
												"src": "841:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:7"
															},
															"nodeType": "YulIf",
															"src": "977:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:7",
														"type": ""
													}
												],
												"src": "924:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:7",
														"type": ""
													}
												],
												"src": "1052:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:519:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1343:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1345:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1345:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1345:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1318:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1339:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:32:7"
															},
															"nodeType": "YulIf",
															"src": "1307:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1436:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1465:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1480:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1490:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1490:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1480:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1563:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1608:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1618:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1618:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1736:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1771:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1782:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1767:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1746:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1251:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1262:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1274:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1282:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1290:6:7",
														"type": ""
													}
												],
												"src": "1197:619:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1877:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1894:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1917:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1899:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1887:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1865:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1872:3:7",
														"type": ""
													}
												],
												"src": "1822:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2088:1304:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2098:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2114:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2119:4:7",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2110:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2110:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2102:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2134:166:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2171:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2201:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2208:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2197:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2197:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2191:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2191:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2175:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2261:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2279:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2284:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2275:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2275:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2227:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2227:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2310:165:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2346:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2376:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2383:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2372:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2366:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2350:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2436:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2454:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2459:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2450:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2450:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2402:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2402:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2402:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2485:169:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2525:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2555:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2562:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2551:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2551:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2545:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2545:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2529:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2615:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2633:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2638:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2629:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2629:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2581:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2581:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2581:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2664:171:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2706:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2736:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2743:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2732:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2732:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2726:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2726:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2710:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2796:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2814:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2819:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2810:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2810:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2762:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2762:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2762:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2845:169:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2885:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2915:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2922:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2911:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2911:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2905:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2905:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2889:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2975:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2993:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2998:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2989:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2989:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2941:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2941:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2941:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3024:176:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3071:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3101:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3108:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3097:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3097:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3091:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3091:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3075:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3161:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3179:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3184:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3175:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3175:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3127:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3127:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3127:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3210:175:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3256:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3286:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3293:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3282:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3282:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3276:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3276:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3260:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3346:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3364:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3369:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3360:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3360:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3312:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3312:63:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$889_memory_ptr_to_t_struct$_Stake_$889_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2075:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2082:3:7",
														"type": ""
													}
												],
												"src": "1988:1404:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:623:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3606:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3622:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3627:6:7",
																		"type": "",
																		"value": "0x0120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:16:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "3610:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3644:172:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3687:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3717:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3724:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3713:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3713:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3707:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3707:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3691:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3777:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3795:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3800:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3791:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3791:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3743:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3743:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3743:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3826:167:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3864:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3894:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3901:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3890:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3890:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3884:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3884:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3868:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3954:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3972:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3977:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3968:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3968:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3920:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3920:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4003:209:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4039:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4069:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4076:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4065:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4065:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4059:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4059:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4043:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4173:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4191:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4196:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4187:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4187:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_Stake_$889_memory_ptr_to_t_struct$_Stake_$889_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4095:77:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:107:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4095:107:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingSummary_$897_memory_ptr_to_t_struct$_StakingSummary_$897_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3583:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3590:3:7",
														"type": ""
													}
												],
												"src": "3468:751:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4385:187:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4395:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4407:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4418:3:7",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4403:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4403:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4395:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4538:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4551:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4562:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4547:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4547:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingSummary_$897_memory_ptr_to_t_struct$_StakingSummary_$897_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4432:105:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4432:133:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4432:133:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$897_memory_ptr__to_t_struct$_StakingSummary_$897_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4357:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4369:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4380:4:7",
														"type": ""
													}
												],
												"src": "4225:347:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4644:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4690:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4692:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4692:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4692:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4665:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4661:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4657:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4657:32:7"
															},
															"nodeType": "YulIf",
															"src": "4654:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4783:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4798:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4812:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4802:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4862:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4858:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4837:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4827:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4625:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4637:6:7",
														"type": ""
													}
												],
												"src": "4578:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4965:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4990:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4983:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4983:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4976:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4976:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4965:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4937:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4947:7:7",
														"type": ""
													}
												],
												"src": "4913:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5068:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5085:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5105:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5090:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5090:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5078:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5078:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5078:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5056:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5063:3:7",
														"type": ""
													}
												],
												"src": "5009:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5238:194:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5248:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5260:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5271:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5256:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5256:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5248:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5322:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5335:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5346:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5331:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5331:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5284:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5284:65:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5397:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5410:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5421:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5406:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5406:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5359:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5359:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5359:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5202:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5214:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5222:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5233:4:7",
														"type": ""
													}
												],
												"src": "5124:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5503:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5520:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5543:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5525:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5513:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5513:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5513:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5491:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5498:3:7",
														"type": ""
													}
												],
												"src": "5438:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5660:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5670:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5682:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5693:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5678:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5670:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5750:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5763:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5774:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5759:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5759:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5706:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5632:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5644:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5655:4:7",
														"type": ""
													}
												],
												"src": "5562:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5882:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5892:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5904:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5915:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5900:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5900:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5892:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5966:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5979:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5990:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5928:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5928:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5854:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5866:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5877:4:7",
														"type": ""
													}
												],
												"src": "5790:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6072:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6118:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6120:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6120:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6120:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6093:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6102:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6089:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6089:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6114:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6085:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:32:7"
															},
															"nodeType": "YulIf",
															"src": "6082:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "6211:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6226:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6240:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6230:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6255:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6290:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6301:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6286:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6286:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6310:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6265:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6265:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6255:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6042:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6053:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6065:6:7",
														"type": ""
													}
												],
												"src": "6006:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6406:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6446:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6428:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6428:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6416:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6416:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6394:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6401:3:7",
														"type": ""
													}
												],
												"src": "6341:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6563:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6573:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6585:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6596:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6581:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6581:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6573:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6653:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6666:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6677:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6662:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6662:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6609:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6609:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6609:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6535:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6547:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6558:4:7",
														"type": ""
													}
												],
												"src": "6465:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6789:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6806:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6811:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6799:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6799:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6799:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6827:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6846:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6851:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6842:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6827:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6761:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6766:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6777:11:7",
														"type": ""
													}
												],
												"src": "6693:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6974:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6996:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7004:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6992:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6992:14:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7008:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6985:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6985:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6985:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6966:6:7",
														"type": ""
													}
												],
												"src": "6868:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7201:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7211:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7277:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7282:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7218:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7218:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7211:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7383:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "7294:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7294:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7294:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7396:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7407:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7412:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7403:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7189:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7197:3:7",
														"type": ""
													}
												],
												"src": "7055:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7598:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7608:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7620:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7616:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7608:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7655:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7666:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7651:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7651:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7674:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7680:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7670:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7670:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7644:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7644:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7644:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7700:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7834:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7708:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7708:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7700:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7578:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7593:4:7",
														"type": ""
													}
												],
												"src": "7427:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7880:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7897:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7900:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7890:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7890:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7890:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7994:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7997:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7987:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7987:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7987:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8018:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8021:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8011:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8011:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8011:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7852:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8083:146:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8093:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8116:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8098:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8093:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8127:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8150:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8132:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8127:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8174:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8176:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8176:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8176:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8168:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8171:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8165:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8165:8:7"
															},
															"nodeType": "YulIf",
															"src": "8162:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8206:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8218:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8221:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8214:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8214:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8206:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8069:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8072:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8078:4:7",
														"type": ""
													}
												],
												"src": "8038:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8341:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8363:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8371:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8359:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8359:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8375:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8352:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8352:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8352:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8333:6:7",
														"type": ""
													}
												],
												"src": "8235:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8569:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8579:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8645:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8650:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8586:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8586:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8579:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8751:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8662:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8662:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8662:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8764:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8775:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8780:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8771:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8764:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8557:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8565:3:7",
														"type": ""
													}
												],
												"src": "8423:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8966:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8976:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8988:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8999:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8984:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8984:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8976:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9023:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9034:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9019:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9019:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9042:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9048:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9038:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9038:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9012:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9012:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9012:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9068:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9202:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9076:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9076:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9068:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8946:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8961:4:7",
														"type": ""
													}
												],
												"src": "8795:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9264:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9274:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9297:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9279:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9274:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9308:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9331:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9313:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9308:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9471:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9473:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9473:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9473:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9392:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9399:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9467:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9395:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9395:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9389:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9389:81:7"
															},
															"nodeType": "YulIf",
															"src": "9386:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9503:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9514:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9517:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9510:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9510:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9503:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9251:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9254:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9260:3:7",
														"type": ""
													}
												],
												"src": "9220:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9685:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9695:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9707:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9718:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9703:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9703:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9695:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9775:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9788:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9799:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9784:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9784:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9731:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9731:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9731:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9856:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9869:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9880:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9865:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9865:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9812:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9812:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9812:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9938:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9951:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9962:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9947:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9947:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9894:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9894:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9894:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9641:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9653:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9661:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9669:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9680:4:7",
														"type": ""
													}
												],
												"src": "9531:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10027:300:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10037:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10060:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10042:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10042:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10037:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10071:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10094:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10076:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10076:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10071:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10269:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10271:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10271:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10271:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10181:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10174:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10174:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10167:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10167:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10189:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10196:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10264:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10192:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10192:74:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10186:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10186:81:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10163:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10163:105:7"
															},
															"nodeType": "YulIf",
															"src": "10160:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10301:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10316:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10319:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10312:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10312:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10301:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10010:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10013:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10019:7:7",
														"type": ""
													}
												],
												"src": "9979:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10361:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10378:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10381:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10371:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10371:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10371:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10475:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10478:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10468:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10468:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10468:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10499:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10502:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10492:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10492:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10492:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10333:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10561:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10571:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10594:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10576:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10576:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10571:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10605:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10628:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10610:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10610:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10605:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10652:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10654:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10654:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10654:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10649:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10642:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10642:9:7"
															},
															"nodeType": "YulIf",
															"src": "10639:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10684:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10693:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10696:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10689:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10689:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10684:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10550:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10553:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10559:1:7",
														"type": ""
													}
												],
												"src": "10519:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10816:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10838:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10846:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10834:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10834:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10850:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10827:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10827:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10827:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10906:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10914:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10902:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10902:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10919:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10895:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10895:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10895:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10808:6:7",
														"type": ""
													}
												],
												"src": "10710:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11087:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11097:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11163:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11168:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11104:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11104:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11097:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11269:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "11180:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11180:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11180:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11282:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11293:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11298:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11289:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11289:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11282:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11075:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11083:3:7",
														"type": ""
													}
												],
												"src": "10941:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11484:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11494:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11506:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11517:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11502:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11494:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11541:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11552:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11537:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11537:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11560:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11566:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11556:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11556:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11530:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11530:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11530:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11586:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11720:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11594:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11594:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11586:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11464:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11479:4:7",
														"type": ""
													}
												],
												"src": "11313:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11892:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11902:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11914:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11925:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11910:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11910:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11902:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11982:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11995:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12006:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11991:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11991:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11938:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11938:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11938:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12063:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12076:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12087:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12072:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12072:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12019:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12019:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12019:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12145:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12158:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12169:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12154:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12154:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12101:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12101:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12101:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11848:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11860:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11868:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11876:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11887:4:7",
														"type": ""
													}
												],
												"src": "11738:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12312:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12334:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12345:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12330:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12415:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12411:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12358:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12358:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12358:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12483:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12496:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12507:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12492:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12492:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12439:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12439:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12439:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12276:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12288:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12307:4:7",
														"type": ""
													}
												],
												"src": "12186:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12564:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12618:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12627:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12630:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12620:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12620:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12620:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12587:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12609:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "12594:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12594:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12584:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12584:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12577:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12577:40:7"
															},
															"nodeType": "YulIf",
															"src": "12574:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12557:5:7",
														"type": ""
													}
												],
												"src": "12524:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12706:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12716:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12731:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12725:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12725:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12716:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12771:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "12747:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12747:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12747:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12684:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12692:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12700:5:7",
														"type": ""
													}
												],
												"src": "12646:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12863:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12909:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12911:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12911:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12911:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12884:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12893:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12880:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12880:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12905:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12876:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12876:32:7"
															},
															"nodeType": "YulIf",
															"src": "12873:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "13002:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13017:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13031:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13021:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13046:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13089:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13100:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13085:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13085:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13109:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13056:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13056:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13046:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12833:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12844:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12856:6:7",
														"type": ""
													}
												],
												"src": "12789:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13246:123:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13268:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13276:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13264:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13264:14:7"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13280:34:7",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13257:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13257:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13257:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13336:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13344:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13332:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13332:15:7"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13349:12:7",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13325:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13325:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13325:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13238:6:7",
														"type": ""
													}
												],
												"src": "13140:229:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13521:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13531:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13597:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13602:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13538:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13538:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13531:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13703:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "13614:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13614:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13614:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13716:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13727:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13732:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13723:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13723:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13716:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13509:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13517:3:7",
														"type": ""
													}
												],
												"src": "13375:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13918:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13928:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13940:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13951:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13936:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13936:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13928:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13975:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13986:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13971:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13971:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13994:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14000:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13990:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13990:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13964:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13964:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13964:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14020:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14154:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14028:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14028:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14020:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13898:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13913:4:7",
														"type": ""
													}
												],
												"src": "13747:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14278:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14300:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14308:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14296:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14296:14:7"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14312:34:7",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14289:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14289:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14289:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14368:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14376:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14364:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14364:15:7"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14381:8:7",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14357:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14357:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14357:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14270:6:7",
														"type": ""
													}
												],
												"src": "14172:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14549:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14559:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14625:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14630:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14566:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14566:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14559:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14731:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "14642:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14642:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14642:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14744:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14755:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14760:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14751:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14751:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14744:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14537:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14545:3:7",
														"type": ""
													}
												],
												"src": "14403:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14946:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14956:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14968:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14979:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14964:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14964:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14956:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15003:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15014:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14999:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14999:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15022:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15028:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15018:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15018:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14992:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14992:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14992:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15048:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15182:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15056:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15056:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15048:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14926:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14941:4:7",
														"type": ""
													}
												],
												"src": "14775:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15306:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15328:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15336:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15324:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15324:14:7"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15340:31:7",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15317:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15317:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15317:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15298:6:7",
														"type": ""
													}
												],
												"src": "15200:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15531:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15541:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15607:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15612:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15548:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15548:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15541:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15713:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "15624:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15624:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15624:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15726:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15737:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15742:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15733:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15733:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15726:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15519:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15527:3:7",
														"type": ""
													}
												],
												"src": "15385:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15928:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15938:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15950:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15961:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15946:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15946:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15938:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15985:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15996:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15981:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15981:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16004:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16010:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16000:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16000:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15974:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15974:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15974:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16030:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16164:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16038:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16038:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16030:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15908:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15923:4:7",
														"type": ""
													}
												],
												"src": "15757:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16240:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16251:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16267:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16261:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16261:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16251:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16223:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16233:6:7",
														"type": ""
													}
												],
												"src": "16182:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16399:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16409:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16424:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16409:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16371:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16376:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16387:11:7",
														"type": ""
													}
												],
												"src": "16286:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16488:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16498:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16507:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "16502:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16567:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16592:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "16597:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16588:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16588:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "16611:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "16616:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "16607:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16607:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "16601:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16601:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16581:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16581:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16581:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16528:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16531:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16525:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16525:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16539:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16541:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16550:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16553:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16546:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16546:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16541:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16521:3:7",
																"statements": []
															},
															"src": "16517:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16664:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16714:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "16719:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16710:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16710:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16728:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16703:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16703:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16703:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16645:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16648:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16642:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16642:13:7"
															},
															"nodeType": "YulIf",
															"src": "16639:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "16470:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "16475:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16480:6:7",
														"type": ""
													}
												],
												"src": "16439:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16860:265:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16870:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16916:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16884:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16884:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16874:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16931:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17014:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17019:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16938:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16938:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16931:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17061:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17068:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17057:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17057:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17075:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17080:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "17035:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17035:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17035:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17096:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17107:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17112:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17103:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17103:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17096:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16841:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16848:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16856:3:7",
														"type": ""
													}
												],
												"src": "16752:373:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17265:137:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17276:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17363:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17372:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17283:79:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17283:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17276:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17386:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17393:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17386:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17244:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17250:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17261:3:7",
														"type": ""
													}
												],
												"src": "17131:271:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17467:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17478:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17494:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17488:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17488:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17478:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17450:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17460:6:7",
														"type": ""
													}
												],
												"src": "17408:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17561:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17571:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17589:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17596:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17585:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17585:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17605:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17601:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17601:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17581:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17581:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17571:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17544:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "17554:6:7",
														"type": ""
													}
												],
												"src": "17513:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17713:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17723:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17770:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "17737:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17737:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "17727:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17785:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17851:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17856:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17792:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17792:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17785:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17898:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17905:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17894:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17894:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17912:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17917:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "17872:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17872:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17872:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17933:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17944:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17971:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "17949:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17949:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17940:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17940:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17933:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17694:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17701:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17709:3:7",
														"type": ""
													}
												],
												"src": "17621:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18109:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18119:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18131:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18142:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18127:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18127:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18119:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18166:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18177:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18162:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18162:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18185:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18191:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18181:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18181:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18155:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18155:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18155:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18211:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18283:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18292:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18219:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18219:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18211:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18081:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18093:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18104:4:7",
														"type": ""
													}
												],
												"src": "17991:313:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Staking.Stake -> struct Staking.Stake\n    function abi_encode_t_struct$_Stake_$889_memory_ptr_to_t_struct$_Stake_$889_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // rewardAPY\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // releaseTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // claimableAirdrop\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // latestClaimDrop\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    // struct Staking.StakingSummary -> struct Staking.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$897_memory_ptr_to_t_struct$_StakingSummary_$897_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // penalty\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stake\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_struct$_Stake_$889_memory_ptr_to_t_struct$_Stake_$889_memory_ptr(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$897_memory_ptr__to_t_struct$_StakingSummary_$897_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_struct$_StakingSummary_$897_memory_ptr_to_t_struct$_StakingSummary_$897_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101735760003560e01c80638c8e8fee116100de578063bed9d86111610097578063d2a569c311610071578063d2a569c3146103cd578063d5dbdf1b146103d7578063f2fde38b146103f3578063fab2f86b1461040f57610173565b8063bed9d86114610387578063c63aa3e714610391578063cb79c2e1146103af57610173565b80638c8e8fee1461029d5780638da5cb5b146102bb578063a143a5f2146102d9578063a3ec138d14610309578063b5d9df8314610339578063b87da76d1461036957610173565b8063632a9a5211610130578063632a9a521461021557806365f8c6c51461021f578063671d2b751461023b578063715018a6146102595780638891cf0d146102635780638c63f97f1461028157610173565b8063070c8b74146101785780630c51b88f1461018257806310486b6a1461019e5780631ec6b60a146101bc5780632d15cc04146101c65780635f5300ff146101f7575b600080fd5b610180610419565b005b61019c60048036038101906101979190612062565b6105b5565b005b6101a6610972565b6040516101b39190612195565b60405180910390f35b6101c4610b47565b005b6101e060048036038101906101db91906121b1565b610c9e565b6040516101ee9291906121f9565b60405180910390f35b6101ff610d5d565b60405161020c9190612231565b60405180910390f35b61021d610d63565b005b610239600480360381019061023491906121b1565b610f07565b005b610243610fef565b604051610250919061224c565b60405180910390f35b610261611100565b005b61026b611188565b6040516102789190612231565b60405180910390f35b61029b60048036038101906102969190612267565b61118e565b005b6102a5611286565b6040516102b291906122a3565b60405180910390f35b6102c36112ac565b6040516102d091906122a3565b60405180910390f35b6102f360048036038101906102ee9190612267565b6112d6565b6040516103009190612231565b60405180910390f35b610323600480360381019061031e91906121b1565b6112ee565b604051610330919061224c565b60405180910390f35b610353600480360381019061034e9190612267565b611319565b6040516103609190612231565b60405180910390f35b61037161133c565b60405161037e9190612231565b60405180910390f35b61038f611342565b005b6103996115d3565b6040516103a69190612231565b60405180910390f35b6103b76115db565b6040516103c49190612231565b60405180910390f35b6103d56115e1565b005b6103f160048036038101906103ec9190612267565b611666565b005b61040d600480360381019061040891906121b1565b61175e565b005b610417611856565b005b6002600054141561045f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104569061231b565b60405180910390fd5b600260008190555061046f6118f7565b61047761193f565b60001515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060009054906101000a900460ff1615151415610518576040517f8b74220000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60001515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060009054906101000a905050506001600a6000600754815260200190815260200160002060008282546105a4919061236a565b925050819055506001600081905550565b600260005414156105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f29061231b565b60405180910390fd5b600260008190555061060b6119cf565b73ffffffffffffffffffffffffffffffffffffffff166106296112ac565b73ffffffffffffffffffffffffffffffffffffffff161461067f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610676906123ea565b60405180910390fd5b600082116106b9576040517f88b440d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610735576040517f04462d2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060026000838152602001908152602001600020541415610783576040517f95377be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160086000828254610796919061240a565b925050819055506001600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060004290506040518060e00160405280848152602001828152602001600260008581526020019081526020016000205481526020018284610839919061240a565b815260200160008152602001600081526020016000815250600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060155905050610907600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163330866119d7565b8373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8483848661094d919061240a565b60405161095c93929190612460565b60405180910390a2506001600081905550505050565b61097a611f65565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000816000015111610a4c576040517fb018f08700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051806060016040528060008152602001600081526020018381525090506000610a7883611a60565b9050428260400151606001511115610ad8576103e860035482610a9b9190612497565b610aa59190612520565b6103e86003548560000151610aba9190612497565b610ac49190612520565b610ace919061240a565b8260200181815250505b6000610ae78460c00151611319565b1115610b12576000610afc8460000151611ac0565b905080836040015160a001818152505050610b22565b6000826040015160a00181815250505b8082604001516080018181525050826000015182600001818152505081935050505090565b60026000541415610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b849061231b565b60405180910390fd5b6002600081905550610b9d6119cf565b73ffffffffffffffffffffffffffffffffffffffff16610bbb6112ac565b73ffffffffffffffffffffffffffffffffffffffff1614610c11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c08906123ea565b60405180910390fd5b60011515600660009054906101000a900460ff1615151415610c5f576040517f6da4cd2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660006101000a81548160ff021916908315150217905550600160076000828254610c8d919061240a565b925050819055506001600081905550565b600080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060009054906101000a900460ff1691509150915091565b60085481565b60026000541415610da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da09061231b565b60405180910390fd5b6002600081905550610db96118f7565b610dc161193f565b60011515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060009054906101000a900460ff1615151415610e62576040517f740e33b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600a600060075481526020019081526020016000206000828254610ef6919061240a565b925050819055506001600081905550565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541115610feb576000610f668260060154611319565b1415610f9e576040517fdd8456cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160050181905550428160060181905550610fea600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633610fe58460000154611ac0565b611af3565b5b5050565b6000610ff96119cf565b73ffffffffffffffffffffffffffffffffffffffff166110176112ac565b73ffffffffffffffffffffffffffffffffffffffff161461106d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611064906123ea565b60405180910390fd5b6110756118f7565b6001600854116110b1576040517f2f9686de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600a60056008546110c49190612497565b6110ce9190612520565b905080600a600060075481526020019081526020016000205411156110f75760019150506110fd565b60009150505b90565b6111086119cf565b73ffffffffffffffffffffffffffffffffffffffff166111266112ac565b73ffffffffffffffffffffffffffffffffffffffff161461117c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611173906123ea565b60405180910390fd5b6111866000611b79565b565b60045481565b6111966119cf565b73ffffffffffffffffffffffffffffffffffffffff166111b46112ac565b73ffffffffffffffffffffffffffffffffffffffff161461120a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611201906123ea565b60405180910390fd5b601e811115611245576040517ff1a470d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003819055507fcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a98160405161127b9190612231565b60405180910390a150565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a6020528060005260406000206000915090505481565b60096020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b600062093a80824261132b919061236a565b6113359190612520565b9050919050565b60055481565b60026000541415611388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137f9061231b565b60405180910390fd5b60026000819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050600061142f82611a60565b9050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160009055600382016000905560048201600090556005820160009055600682016000905550506001600860008282546114be919061236a565b92505081905550600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060006101000a81549060ff0219169055428260600151111561158a57600080611547846000015184611c3f565b91509150611583600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633838561157e919061240a565b611af3565b50506115c7565b6115c6600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338385600001516115c1919061240a565b611af3565b5b50506001600081905550565b600042905090565b60035481565b6115e96119cf565b73ffffffffffffffffffffffffffffffffffffffff166116076112ac565b73ffffffffffffffffffffffffffffffffffffffff161461165d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611654906123ea565b60405180910390fd5b42600581905550565b61166e6119cf565b73ffffffffffffffffffffffffffffffffffffffff1661168c6112ac565b73ffffffffffffffffffffffffffffffffffffffff16146116e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d9906123ea565b60405180910390fd5b60c881111561171d576040517fa552cf1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806004819055507fcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e816040516117539190612231565b60405180910390a150565b6117666119cf565b73ffffffffffffffffffffffffffffffffffffffff166117846112ac565b73ffffffffffffffffffffffffffffffffffffffff16146117da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d1906123ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561184a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611841906125c3565b60405180910390fd5b61185381611b79565b50565b61185e6119cf565b73ffffffffffffffffffffffffffffffffffffffff1661187c6112ac565b73ffffffffffffffffffffffffffffffffffffffff16146118d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c9906123ea565b60405180910390fd5b6118da6118f7565b6000600660006101000a81548160ff021916908315150217905550565b600660009054906101000a900460ff1661193d576040517fa1d1891400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60001515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151514156119cd576040517f1e567dd400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600033905090565b611a5a846323b872dd60e01b8585856040516024016119f8939291906125e3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611caf565b50505050565b60008082600001511415611a775760009050611abb565b6a52b7d2dcc80cd2e4000000611a908360200151611d76565b83604001518460000151611aa49190612497565b611aae9190612497565b611ab89190612520565b90505b919050565b60006301dfe2006103e860045484611ad89190612497565b611ae29190612520565b611aec9190612520565b9050919050565b611b748363a9059cbb60e01b8484604051602401611b1292919061261a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611caf565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806000841415611c575760008091509150611ca8565b6103e860035485611c689190612497565b611c729190612520565b84611c7d919061236a565b6103e860035485611c8e9190612497565b611c989190612520565b84611ca3919061236a565b915091505b9250929050565b6000611d11826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611daf9092919063ffffffff16565b9050600081511115611d715780806020019051810190611d31919061266f565b611d70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d679061270e565b60405180910390fd5b5b505050565b60006301e1338069d3c21bcecceda10000008342611d94919061236a565b611d9e9190612497565b611da89190612520565b9050919050565b6060611dbe8484600085611dc7565b90509392505050565b606082471015611e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e03906127a0565b60405180910390fd5b611e1585611edb565b611e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4b9061280c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611e7d91906128a6565b60006040518083038185875af1925050503d8060008114611eba576040519150601f19603f3d011682016040523d82523d6000602084013e611ebf565b606091505b5091509150611ecf828286611efe565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611f0e57829050611f5e565b600083511115611f215782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f559190612912565b60405180910390fd5b9392505050565b60405180606001604052806000815260200160008152602001611f86611f8c565b81525090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ff982611fce565b9050919050565b61200981611fee565b811461201457600080fd5b50565b60008135905061202681612000565b92915050565b6000819050919050565b61203f8161202c565b811461204a57600080fd5b50565b60008135905061205c81612036565b92915050565b60008060006060848603121561207b5761207a611fc9565b5b600061208986828701612017565b935050602061209a8682870161204d565b92505060406120ab8682870161204d565b9150509250925092565b6120be8161202c565b82525050565b60e0820160008201516120da60008501826120b5565b5060208201516120ed60208501826120b5565b50604082015161210060408501826120b5565b50606082015161211360608501826120b5565b50608082015161212660808501826120b5565b5060a082015161213960a08501826120b5565b5060c082015161214c60c08501826120b5565b50505050565b6101208201600082015161216960008501826120b5565b50602082015161217c60208501826120b5565b50604082015161218f60408501826120c4565b50505050565b6000610120820190506121ab6000830184612152565b92915050565b6000602082840312156121c7576121c6611fc9565b5b60006121d584828501612017565b91505092915050565b60008115159050919050565b6121f3816121de565b82525050565b600060408201905061220e60008301856121ea565b61221b60208301846121ea565b9392505050565b61222b8161202c565b82525050565b60006020820190506122466000830184612222565b92915050565b600060208201905061226160008301846121ea565b92915050565b60006020828403121561227d5761227c611fc9565b5b600061228b8482850161204d565b91505092915050565b61229d81611fee565b82525050565b60006020820190506122b86000830184612294565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612305601f836122be565b9150612310826122cf565b602082019050919050565b60006020820190508181036000830152612334816122f8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123758261202c565b91506123808361202c565b9250828210156123935761239261233b565b5b828203905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006123d46020836122be565b91506123df8261239e565b602082019050919050565b60006020820190508181036000830152612403816123c7565b9050919050565b60006124158261202c565b91506124208361202c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124555761245461233b565b5b828201905092915050565b60006060820190506124756000830186612222565b6124826020830185612222565b61248f6040830184612222565b949350505050565b60006124a28261202c565b91506124ad8361202c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124e6576124e561233b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061252b8261202c565b91506125368361202c565b925082612546576125456124f1565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006125ad6026836122be565b91506125b882612551565b604082019050919050565b600060208201905081810360008301526125dc816125a0565b9050919050565b60006060820190506125f86000830186612294565b6126056020830185612294565b6126126040830184612222565b949350505050565b600060408201905061262f6000830185612294565b61263c6020830184612222565b9392505050565b61264c816121de565b811461265757600080fd5b50565b60008151905061266981612643565b92915050565b60006020828403121561268557612684611fc9565b5b60006126938482850161265a565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006126f8602a836122be565b91506127038261269c565b604082019050919050565b60006020820190508181036000830152612727816126eb565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061278a6026836122be565b91506127958261272e565b604082019050919050565b600060208201905081810360008301526127b98161277d565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006127f6601d836122be565b9150612801826127c0565b602082019050919050565b60006020820190508181036000830152612825816127e9565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612860578082015181840152602081019050612845565b8381111561286f576000848401525b50505050565b60006128808261282c565b61288a8185612837565b935061289a818560208601612842565b80840191505092915050565b60006128b28284612875565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006128e4826128bd565b6128ee81856122be565b93506128fe818560208601612842565b612907816128c8565b840191505092915050565b6000602082019050818103600083015261292c81846128d9565b90509291505056fea26469706673582212206080df30709ffc63f62f5f3d50c085629ce899587f1dda48bb1132431e8b5a6a64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C8E8FEE GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBED9D861 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD2A569C3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD2A569C3 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x40F JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xC63AA3E7 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x3AF JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x8C8E8FEE EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xB5D9DF83 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x369 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x632A9A52 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x281 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xC51B88F EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x1F7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x419 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0xB47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP3 SWAP2 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH2 0xD63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0x1100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x118E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x12AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x371 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH2 0x1342 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH2 0x15D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH2 0x15E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x1666 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x175E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH2 0x1856 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x46F PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0x477 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8B74220000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x60B PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x629 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x676 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x88B440D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4462D2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x95377BE400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP5 PUSH2 0x839 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH2 0x907 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP7 PUSH2 0x19D7 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP5 DUP4 DUP5 DUP7 PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x97A PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB018F08700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xA78 DUP4 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0xAD8 JUMPI PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP3 PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 PUSH2 0xAE7 DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0x1319 JUMP JUMPDEST GT ISZERO PUSH2 0xB12 JUMPI PUSH1 0x0 PUSH2 0xAFC DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1AC0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB84 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xB9D PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBBB PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC08 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DA4CD2E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC8D SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA0 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xDB9 PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0xDC1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xE62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x740E33B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEF6 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xFEB JUMPI PUSH1 0x0 PUSH2 0xF66 DUP3 PUSH1 0x6 ADD SLOAD PUSH2 0x1319 JUMP JUMPDEST EQ ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD8456CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xFEA PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0xFE5 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1AC0 JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF9 PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1017 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1064 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 SLOAD GT PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2F9686DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x5 PUSH1 0x8 SLOAD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x10F7 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1108 PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1126 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x117C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1186 PUSH1 0x0 PUSH2 0x1B79 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1196 PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11B4 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x120A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1201 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF1A470D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 DUP2 PUSH1 0x40 MLOAD PUSH2 0x127B SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 DUP3 TIMESTAMP PUSH2 0x132B SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST PUSH2 0x1335 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137F SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x142F DUP3 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14BE SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE TIMESTAMP DUP3 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x158A JUMPI PUSH1 0x0 DUP1 PUSH2 0x1547 DUP5 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0x1C3F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1583 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST POP POP PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x15C6 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15E9 PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1607 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1654 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x166E PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x168C PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D9 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0x171D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA552CF1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E DUP2 PUSH1 0x40 MLOAD PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1766 PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1784 PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D1 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x184A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1841 SWAP1 PUSH2 0x25C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1853 DUP2 PUSH2 0x1B79 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x185E PUSH2 0x19CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x187C PUSH2 0x12AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C9 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18DA PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x193D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D1891400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x19CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E567DD400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A5A DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1CAF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1A77 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1ABB JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1A90 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1D76 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1AA4 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1AAE SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1AB8 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x4 SLOAD DUP5 PUSH2 0x1AD8 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1AE2 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST PUSH2 0x1AEC SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B74 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B12 SWAP3 SWAP2 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1CAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x1C57 JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x1CA8 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x1C68 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1C72 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST DUP5 PUSH2 0x1C7D SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x1C8E SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1C98 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST DUP5 PUSH2 0x1CA3 SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DAF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1D71 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D31 SWAP2 SWAP1 PUSH2 0x266F JUMP JUMPDEST PUSH2 0x1D70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D67 SWAP1 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x1D94 SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST PUSH2 0x1D9E SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1DA8 SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DBE DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1E0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E03 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E15 DUP6 PUSH2 0x1EDB JUMP JUMPDEST PUSH2 0x1E54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4B SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1E7D SWAP2 SWAP1 PUSH2 0x28A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1EBA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1ECF DUP3 DUP3 DUP7 PUSH2 0x1EFE JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1F0E JUMPI DUP3 SWAP1 POP PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1F21 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F55 SWAP2 SWAP1 PUSH2 0x2912 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F86 PUSH2 0x1F8C JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF9 DUP3 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2009 DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP2 EQ PUSH2 0x2014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2026 DUP2 PUSH2 0x2000 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203F DUP2 PUSH2 0x202C JUMP JUMPDEST DUP2 EQ PUSH2 0x204A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x205C DUP2 PUSH2 0x2036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x207B JUMPI PUSH2 0x207A PUSH2 0x1FC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2089 DUP7 DUP3 DUP8 ADD PUSH2 0x2017 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x209A DUP7 DUP3 DUP8 ADD PUSH2 0x204D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20AB DUP7 DUP3 DUP8 ADD PUSH2 0x204D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x20BE DUP2 PUSH2 0x202C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x20DA PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x20ED PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2100 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2113 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2126 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2139 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x214C PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2169 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x217C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x20B5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x218F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x20C4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x21AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2152 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C7 JUMPI PUSH2 0x21C6 PUSH2 0x1FC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D5 DUP5 DUP3 DUP6 ADD PUSH2 0x2017 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21F3 DUP2 PUSH2 0x21DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x220E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x21EA JUMP JUMPDEST PUSH2 0x221B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x222B DUP2 PUSH2 0x202C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2246 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2222 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2261 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227D JUMPI PUSH2 0x227C PUSH2 0x1FC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228B DUP5 DUP3 DUP6 ADD PUSH2 0x204D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x229D DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2305 PUSH1 0x1F DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2310 DUP3 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2334 DUP2 PUSH2 0x22F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2375 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x2380 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2393 JUMPI PUSH2 0x2392 PUSH2 0x233B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23D4 PUSH1 0x20 DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x23DF DUP3 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2403 DUP2 PUSH2 0x23C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2415 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x2420 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2455 JUMPI PUSH2 0x2454 PUSH2 0x233B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2475 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0x2482 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0x248F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2222 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A2 DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x24AD DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x24E6 JUMPI PUSH2 0x24E5 PUSH2 0x233B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x252B DUP3 PUSH2 0x202C JUMP JUMPDEST SWAP2 POP PUSH2 0x2536 DUP4 PUSH2 0x202C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2546 JUMPI PUSH2 0x2545 PUSH2 0x24F1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AD PUSH1 0x26 DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x25B8 DUP3 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25DC DUP2 PUSH2 0x25A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25F8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x2605 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x2612 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2222 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x262F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x263C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2222 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x264C DUP2 PUSH2 0x21DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2669 DUP2 PUSH2 0x2643 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2685 JUMPI PUSH2 0x2684 PUSH2 0x1FC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2693 DUP5 DUP3 DUP6 ADD PUSH2 0x265A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F8 PUSH1 0x2A DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2703 DUP3 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2727 DUP2 PUSH2 0x26EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278A PUSH1 0x26 DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2795 DUP3 PUSH2 0x272E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B9 DUP2 PUSH2 0x277D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F6 PUSH1 0x1D DUP4 PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2801 DUP3 PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2825 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2860 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2845 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x286F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2880 DUP3 PUSH2 0x282C JUMP JUMPDEST PUSH2 0x288A DUP2 DUP6 PUSH2 0x2837 JUMP JUMPDEST SWAP4 POP PUSH2 0x289A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2842 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B2 DUP3 DUP5 PUSH2 0x2875 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E4 DUP3 PUSH2 0x28BD JUMP JUMPDEST PUSH2 0x28EE DUP2 DUP6 PUSH2 0x22BE JUMP JUMPDEST SWAP4 POP PUSH2 0x28FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x2907 DUP2 PUSH2 0x28C8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x292C DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x80 0xDF ADDRESS PUSH17 0x9FFC63F62F5F3D50C085629CE899587F1D 0xDA BASEFEE 0xBB GT ORIGIN NUMBER 0x1E DUP12 GAS PUSH11 0x64736F6C634300080B0033 ",
							"sourceMap": "980:11703:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11889:278;;;:::i;:::-;;4306:1427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8536:1024;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11398:210;;;:::i;:::-;;11183:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1516:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11614:269;;;:::i;:::-;;10435:593;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12173:406;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;:::i;:::-;;1385:26:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5739:306;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1645:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1593:45:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1548:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10110:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1417:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7546:984;;;:::i;:::-;;10008:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1346:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9672:90;;;:::i;:::-;;9768:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12585:96:6;;;:::i;:::-;;11889:278;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3951:20:6::1;:18;:20::i;:::-;3669:10:::2;:8;:10::i;:::-;12010:5:::3;11971:44;;:6;:18;11978:10;11971:18;;;;;;;;;;;;;;;:24;;:35;11996:9;;11971:35;;;;;;;;;;;;;;;;;;;;;:44;;;11967:103;;;12038:21;;;;;;;;;;;;;;11967:103;12119:5;12080:44;;:6;:18;12087:10;12080:18;;;;;;;;;;;;;;;:24;;:35;12105:9;;12080:35;;;;;;;;;;;;;;;;;;::::0;;:44;12159:1:::3;12134:10;:21;12145:9;;12134:21;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;1701:1:1::0;2628:7;:22;;;;11889:278:6:o;4306:1427::-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1259:12:0::1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4568:1:6::2;4558:6;:11;4554:78;;4592:29;;;;;;;;;;;;;;4554:78;4746:1;4717:12;:18;4730:4;4717:18;;;;;;;;;;;;;;;:25;;;:30;4713:91;;4770:23;;;;;;;;;;;;;;4713:91;4849:1;4818:14;:27;4833:11;4818:27;;;;;;;;;;;;:32;4814:101;;;4873:31;;;;;;;;;;;;;;4814:101;4940:1;4925:11;;:16;;;;;;;:::i;:::-;;;;;;;;4978:4;4951:6;:12;4958:4;4951:12;;;;;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;5080:17;5100:15;5080:35;;5265:183;;;;;;;;5284:6;5265:183;;;;5304:9;5265:183;;;;5327:14;:27;5342:11;5327:27;;;;;;;;;;;;5265:183;;;;5383:9;5369:11;:23;;;;:::i;:::-;5265:183;;;;5407:1;5265:183;;;;5422:1;5265:183;;;;5437:1;5265:183;;::::0;5244:12:::2;:18;5257:4;5244:18;;;;;;;;;;;;;;;:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5459:142;5506:13;;;;;;;;;;;5534:10;5566:4;5585:6;5459:26;:142::i;:::-;5675:4;5668:58;;;5681:6;5689:9;5715;5701:11;:23;;;;:::i;:::-;5668:58;;;;;;;;:::i;:::-;;;;;;;;4434:1299;1701:1:1::0;2628:7;:22;;;;4306:1427:6;;;:::o;8536:1024::-;8579:21;;:::i;:::-;8612:23;8638:12;:24;8651:10;8638:24;;;;;;;;;;;;;;;8612:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8758:1;8737:10;:17;;;:22;8733:85;;8782:25;;;;;;;;;;;;;;8733:85;8827:29;8859:32;;;;;;;;8874:1;8859:32;;;;8877:1;8859:32;;;;8880:10;8859:32;;;8827:64;;8902:14;8919:33;8941:10;8919:21;:33::i;:::-;8902:50;;8995:15;8967:7;:13;;;:25;;;:43;8963:214;;;9161:4;9139:18;;9130:6;:27;;;;:::i;:::-;9129:36;;;;:::i;:::-;9104:4;9082:18;;9062:10;:17;;;:38;;;;:::i;:::-;9061:47;;;;:::i;:::-;9060:106;;;;:::i;:::-;9026:7;:15;;:140;;;;;8963:214;9235:1;9191:41;9205:10;:26;;;9191:13;:41::i;:::-;:45;9187:249;;;9252:15;9270:36;9288:10;:17;;;9270;:36::i;:::-;9252:54;;9353:7;9320;:13;;;:30;;:40;;;;;9238:133;9187:249;;;9424:1;9391:7;:13;;;:30;;:34;;;;;9187:249;9472:6;9446:7;:13;;;:23;;:32;;;;;9511:10;:17;;;9488:7;:20;;:40;;;;;9546:7;9539:14;;;;;8536:1024;:::o;11398:210::-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1259:12:0::1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11484:4:6::2;11467:21;;:13;;;;;;;;;;;:21;;;11463:84;;;11511:25;;;;;;;;;;;;;;11463:84;11573:4;11557:13;;:20;;;;;;;;;;;;;;;;;;11600:1;11587:9;;:14;;;;;;;:::i;:::-;;;;;;;;1701:1:1::0;2628:7;:22;;;;11398:210:6:o;11183:149::-;11239:4;11245;11269:6;:12;11276:4;11269:12;;;;;;;;;;;;;;;:24;;;;;;;;;;;;11295:6;:12;11302:4;11295:12;;;;;;;;;;;;;;;:18;;:29;11314:9;;11295:29;;;;;;;;;;;;;;;;;;;;;11261:64;;;;11183:149;;;:::o;1516:26::-;;;;:::o;11614:269::-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3951:20:6::1;:18;:20::i;:::-;3669:10:::2;:8;:10::i;:::-;11728:4:::3;11689:43;;:6;:18;11696:10;11689:18;;;;;;;;;;;;;;;:24;;:35;11714:9;;11689:35;;;;;;;;;;;;;;;;;;;;;:43;;;11685:103;;;11755:22;;;;;;;;;;;;;;11685:103;11836:4;11798:6;:18;11805:10;11798:18;;;;;;;;;;;;;;;:24;;:35;11823:9;;11798:35;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;11875:1;11850:10;:21;11861:9;;11850:21;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;1701:1:1::0;2628:7;:22;;;;11614:269:6:o;10435:593::-;10542:20;10565:12;:18;10578:4;10565:18;;;;;;;;;;;;;;;10542:41;;10614:1;10598:6;:13;;;:17;10594:428;;;10676:1;10635:37;10649:6;:22;;;10635:13;:37::i;:::-;:42;10631:117;;;10704:29;;;;;;;;;;;;;;10631:117;10788:1;10762:6;:23;;:27;;;;10828:15;10803:6;:22;;:40;;;;10858:153;10905:13;;;;;;;;;;;10937:10;10965:32;10983:6;:13;;;10965:17;:32::i;:::-;10858:22;:153::i;:::-;10594:428;10480:548;10435:593;:::o;12173:406::-;12290:4;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3951:20:6::1;:18;:20::i;:::-;12329:1:::2;12314:11;;:16;12310:79;;12353:25;;;;;;;;;;;;;;12310:79;12398:19;12440:2;12435:1;12421:11;;:15;;;;:::i;:::-;12420:22;;;;:::i;:::-;12398:44;;12481:11;12457:10;:21;12468:9;;12457:21;;;;;;;;;;;;:35;12453:120;;;12515:4;12508:11;;;;;12453:120;12557:5;12550:12;;;3981:1;12173:406:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1385:26:6:-;;;;:::o;5739:306::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5897:2:6::1;5888:6;:11;5884:81;;;5922:32;;;;;;;;;;;;;;5884:81;5995:6;5974:18;:27;;;;6016:22;6031:6;6016:22;;;;;;:::i;:::-;;;;;;;;5739:306:::0;:::o;1645:28::-;;;;;;;;;;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1593:45:6:-;;;;;;;;;;;;;;;;;:::o;1548:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10110:134::-;10173:7;10231:6;10218:9;10200:15;:27;;;;:::i;:::-;10199:38;;;;:::i;:::-;10192:45;;10110:134;;;:::o;1417:27::-;;;;:::o;7546:984::-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;7711:23:6::1;7737:12;:24;7750:10;7737:24;;;;;;;;;;;;;;;7711:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;7771:14;7788:33;7810:10;7788:21;:33::i;:::-;7771:50;;7839:12;:24;7852:10;7839:24;;;;;;;;;;;;;;;;7832:31:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7888:1;7873:11;;:16;;;;;;;:::i;:::-;;;;;;;;7906:6;:18;7913:10;7906:18;;;;;;;;;;;;;;;:24;;:35;7931:9;;7906:35;;;;;;;;;;;;7899:42;;;;;;;;;;;7981:15;7956:10;:22;;;:40;7952:572;;;8030:22;8070::::0;8109:55:::1;8138:10;:17;;;8157:6;8109:28;:55::i;:::-;8012:152;;;;8179:154;8226:13;;;;;;;;;;;8258:10;8304:14;8287;:31;;;;:::i;:::-;8179:22;:154::i;:::-;7998:346;;7952:572;;;8364:149;8411:13;;;;;;;;;;;8443:10;8492:6;8472:10;:17;;;:26;;;;:::i;:::-;8364:22;:149::i;:::-;7952:572;7593:937;;1701:1:1::0;2628:7;:22;;;;7546:984:6:o;10008:96::-;10056:7;10082:15;10075:22;;10008:96;:::o;1346:33::-;;;;:::o;9672:90::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9740:15:6::1;9725:12;:30;;;;9672:90::o:0;9768:234::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9859:3:6::1;9850:6;:12;9846:83;;;9885:33;;;;;;;;;;;;;;9846:83;9952:6;9938:11;:20;;;;9973:22;9988:6;9973:22;;;;;;:::i;:::-;;;;;;;;9768:234:::0;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;12585:96:6:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3951:20:6::1;:18;:20::i;:::-;12669:5:::2;12653:13;;:21;;;;;;;;;;;;;;;;;;12585:96::o:0;3703:204::-;3824:13;;;;;;;;;;;3819:82;;3860:30;;;;;;;;;;;;;;3819:82;3703:204::o;3403:231::-;3568:5;3534:39;;:6;:18;3541:10;3534:18;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:39;;;3530:98;;;3596:21;;;;;;;;;;;;;;3530:98;3403:231::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;912:241:3:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;6288:437:6:-;6391:7;6439:1;6418:10;:17;;;:22;6414:61;;;6463:1;6456:8;;;;6414:61;6714:4;6667:43;6693:10;:16;;;6667:25;:43::i;:::-;6628:10;:20;;;6592:10;:17;;;:56;;;;:::i;:::-;:118;;;;:::i;:::-;6591:127;;;;:::i;:::-;6572:146;;6288:437;;;;:::o;10250:179::-;10345:7;10414:8;10406:4;10391:11;;10377;:25;;;;:::i;:::-;10376:34;;;;:::i;:::-;10375:47;;;;:::i;:::-;10368:54;;10250:179;;;:::o;701:205:3:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;6731:359:6:-;6848:7;6857;6894:1;6884:6;:11;6880:55;;;6919:1;6922;6911:13;;;;;;6880:55;7007:4;6985:18;;6976:6;:27;;;;:::i;:::-;6975:36;;;;:::i;:::-;6965:6;:47;;;;:::i;:::-;7068:4;7046:18;;7037:6;:27;;;;:::i;:::-;7036:36;;;;:::i;:::-;7026:6;:47;;;;:::i;:::-;6944:139;;;;6731:359;;;;;;:::o;3207:706:3:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3277:636;3207:706;;:::o;6051:231:6:-;6148:7;6267:8;6259:4;6250:5;6232:15;:23;;;;:::i;:::-;6231:32;;;;:::i;:::-;6230:45;;;;:::i;:::-;6223:52;;6051:231;;;:::o;3861:223:4:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:108::-;1899:24;1917:5;1899:24;:::i;:::-;1894:3;1887:37;1822:108;;:::o;1988:1404::-;2119:4;2114:3;2110:14;2208:4;2201:5;2197:16;2191:23;2227:63;2284:4;2279:3;2275:14;2261:12;2227:63;:::i;:::-;2134:166;2383:4;2376:5;2372:16;2366:23;2402:63;2459:4;2454:3;2450:14;2436:12;2402:63;:::i;:::-;2310:165;2562:4;2555:5;2551:16;2545:23;2581:63;2638:4;2633:3;2629:14;2615:12;2581:63;:::i;:::-;2485:169;2743:4;2736:5;2732:16;2726:23;2762:63;2819:4;2814:3;2810:14;2796:12;2762:63;:::i;:::-;2664:171;2922:4;2915:5;2911:16;2905:23;2941:63;2998:4;2993:3;2989:14;2975:12;2941:63;:::i;:::-;2845:169;3108:4;3101:5;3097:16;3091:23;3127:63;3184:4;3179:3;3175:14;3161:12;3127:63;:::i;:::-;3024:176;3293:4;3286:5;3282:16;3276:23;3312:63;3369:4;3364:3;3360:14;3346:12;3312:63;:::i;:::-;3210:175;2088:1304;1988:1404;;:::o;3468:751::-;3627:6;3622:3;3618:16;3724:4;3717:5;3713:16;3707:23;3743:63;3800:4;3795:3;3791:14;3777:12;3743:63;:::i;:::-;3644:172;3901:4;3894:5;3890:16;3884:23;3920:63;3977:4;3972:3;3968:14;3954:12;3920:63;:::i;:::-;3826:167;4076:4;4069:5;4065:16;4059:23;4095:107;4196:4;4191:3;4187:14;4173:12;4095:107;:::i;:::-;4003:209;3596:623;3468:751;;:::o;4225:347::-;4380:4;4418:3;4407:9;4403:19;4395:27;;4432:133;4562:1;4551:9;4547:17;4538:6;4432:133;:::i;:::-;4225:347;;;;:::o;4578:329::-;4637:6;4686:2;4674:9;4665:7;4661:23;4657:32;4654:119;;;4692:79;;:::i;:::-;4654:119;4812:1;4837:53;4882:7;4873:6;4862:9;4858:22;4837:53;:::i;:::-;4827:63;;4783:117;4578:329;;;;:::o;4913:90::-;4947:7;4990:5;4983:13;4976:21;4965:32;;4913:90;;;:::o;5009:109::-;5090:21;5105:5;5090:21;:::i;:::-;5085:3;5078:34;5009:109;;:::o;5124:308::-;5233:4;5271:2;5260:9;5256:18;5248:26;;5284:65;5346:1;5335:9;5331:17;5322:6;5284:65;:::i;:::-;5359:66;5421:2;5410:9;5406:18;5397:6;5359:66;:::i;:::-;5124:308;;;;;:::o;5438:118::-;5525:24;5543:5;5525:24;:::i;:::-;5520:3;5513:37;5438:118;;:::o;5562:222::-;5655:4;5693:2;5682:9;5678:18;5670:26;;5706:71;5774:1;5763:9;5759:17;5750:6;5706:71;:::i;:::-;5562:222;;;;:::o;5790:210::-;5877:4;5915:2;5904:9;5900:18;5892:26;;5928:65;5990:1;5979:9;5975:17;5966:6;5928:65;:::i;:::-;5790:210;;;;:::o;6006:329::-;6065:6;6114:2;6102:9;6093:7;6089:23;6085:32;6082:119;;;6120:79;;:::i;:::-;6082:119;6240:1;6265:53;6310:7;6301:6;6290:9;6286:22;6265:53;:::i;:::-;6255:63;;6211:117;6006:329;;;;:::o;6341:118::-;6428:24;6446:5;6428:24;:::i;:::-;6423:3;6416:37;6341:118;;:::o;6465:222::-;6558:4;6596:2;6585:9;6581:18;6573:26;;6609:71;6677:1;6666:9;6662:17;6653:6;6609:71;:::i;:::-;6465:222;;;;:::o;6693:169::-;6777:11;6811:6;6806:3;6799:19;6851:4;6846:3;6842:14;6827:29;;6693:169;;;;:::o;6868:181::-;7008:33;7004:1;6996:6;6992:14;6985:57;6868:181;:::o;7055:366::-;7197:3;7218:67;7282:2;7277:3;7218:67;:::i;:::-;7211:74;;7294:93;7383:3;7294:93;:::i;:::-;7412:2;7407:3;7403:12;7396:19;;7055:366;;;:::o;7427:419::-;7593:4;7631:2;7620:9;7616:18;7608:26;;7680:9;7674:4;7670:20;7666:1;7655:9;7651:17;7644:47;7708:131;7834:4;7708:131;:::i;:::-;7700:139;;7427:419;;;:::o;7852:180::-;7900:77;7897:1;7890:88;7997:4;7994:1;7987:15;8021:4;8018:1;8011:15;8038:191;8078:4;8098:20;8116:1;8098:20;:::i;:::-;8093:25;;8132:20;8150:1;8132:20;:::i;:::-;8127:25;;8171:1;8168;8165:8;8162:34;;;8176:18;;:::i;:::-;8162:34;8221:1;8218;8214:9;8206:17;;8038:191;;;;:::o;8235:182::-;8375:34;8371:1;8363:6;8359:14;8352:58;8235:182;:::o;8423:366::-;8565:3;8586:67;8650:2;8645:3;8586:67;:::i;:::-;8579:74;;8662:93;8751:3;8662:93;:::i;:::-;8780:2;8775:3;8771:12;8764:19;;8423:366;;;:::o;8795:419::-;8961:4;8999:2;8988:9;8984:18;8976:26;;9048:9;9042:4;9038:20;9034:1;9023:9;9019:17;9012:47;9076:131;9202:4;9076:131;:::i;:::-;9068:139;;8795:419;;;:::o;9220:305::-;9260:3;9279:20;9297:1;9279:20;:::i;:::-;9274:25;;9313:20;9331:1;9313:20;:::i;:::-;9308:25;;9467:1;9399:66;9395:74;9392:1;9389:81;9386:107;;;9473:18;;:::i;:::-;9386:107;9517:1;9514;9510:9;9503:16;;9220:305;;;;:::o;9531:442::-;9680:4;9718:2;9707:9;9703:18;9695:26;;9731:71;9799:1;9788:9;9784:17;9775:6;9731:71;:::i;:::-;9812:72;9880:2;9869:9;9865:18;9856:6;9812:72;:::i;:::-;9894;9962:2;9951:9;9947:18;9938:6;9894:72;:::i;:::-;9531:442;;;;;;:::o;9979:348::-;10019:7;10042:20;10060:1;10042:20;:::i;:::-;10037:25;;10076:20;10094:1;10076:20;:::i;:::-;10071:25;;10264:1;10196:66;10192:74;10189:1;10186:81;10181:1;10174:9;10167:17;10163:105;10160:131;;;10271:18;;:::i;:::-;10160:131;10319:1;10316;10312:9;10301:20;;9979:348;;;;:::o;10333:180::-;10381:77;10378:1;10371:88;10478:4;10475:1;10468:15;10502:4;10499:1;10492:15;10519:185;10559:1;10576:20;10594:1;10576:20;:::i;:::-;10571:25;;10610:20;10628:1;10610:20;:::i;:::-;10605:25;;10649:1;10639:35;;10654:18;;:::i;:::-;10639:35;10696:1;10693;10689:9;10684:14;;10519:185;;;;:::o;10710:225::-;10850:34;10846:1;10838:6;10834:14;10827:58;10919:8;10914:2;10906:6;10902:15;10895:33;10710:225;:::o;10941:366::-;11083:3;11104:67;11168:2;11163:3;11104:67;:::i;:::-;11097:74;;11180:93;11269:3;11180:93;:::i;:::-;11298:2;11293:3;11289:12;11282:19;;10941:366;;;:::o;11313:419::-;11479:4;11517:2;11506:9;11502:18;11494:26;;11566:9;11560:4;11556:20;11552:1;11541:9;11537:17;11530:47;11594:131;11720:4;11594:131;:::i;:::-;11586:139;;11313:419;;;:::o;11738:442::-;11887:4;11925:2;11914:9;11910:18;11902:26;;11938:71;12006:1;11995:9;11991:17;11982:6;11938:71;:::i;:::-;12019:72;12087:2;12076:9;12072:18;12063:6;12019:72;:::i;:::-;12101;12169:2;12158:9;12154:18;12145:6;12101:72;:::i;:::-;11738:442;;;;;;:::o;12186:332::-;12307:4;12345:2;12334:9;12330:18;12322:26;;12358:71;12426:1;12415:9;12411:17;12402:6;12358:71;:::i;:::-;12439:72;12507:2;12496:9;12492:18;12483:6;12439:72;:::i;:::-;12186:332;;;;;:::o;12524:116::-;12594:21;12609:5;12594:21;:::i;:::-;12587:5;12584:32;12574:60;;12630:1;12627;12620:12;12574:60;12524:116;:::o;12646:137::-;12700:5;12731:6;12725:13;12716:22;;12747:30;12771:5;12747:30;:::i;:::-;12646:137;;;;:::o;12789:345::-;12856:6;12905:2;12893:9;12884:7;12880:23;12876:32;12873:119;;;12911:79;;:::i;:::-;12873:119;13031:1;13056:61;13109:7;13100:6;13089:9;13085:22;13056:61;:::i;:::-;13046:71;;13002:125;12789:345;;;;:::o;13140:229::-;13280:34;13276:1;13268:6;13264:14;13257:58;13349:12;13344:2;13336:6;13332:15;13325:37;13140:229;:::o;13375:366::-;13517:3;13538:67;13602:2;13597:3;13538:67;:::i;:::-;13531:74;;13614:93;13703:3;13614:93;:::i;:::-;13732:2;13727:3;13723:12;13716:19;;13375:366;;;:::o;13747:419::-;13913:4;13951:2;13940:9;13936:18;13928:26;;14000:9;13994:4;13990:20;13986:1;13975:9;13971:17;13964:47;14028:131;14154:4;14028:131;:::i;:::-;14020:139;;13747:419;;;:::o;14172:225::-;14312:34;14308:1;14300:6;14296:14;14289:58;14381:8;14376:2;14368:6;14364:15;14357:33;14172:225;:::o;14403:366::-;14545:3;14566:67;14630:2;14625:3;14566:67;:::i;:::-;14559:74;;14642:93;14731:3;14642:93;:::i;:::-;14760:2;14755:3;14751:12;14744:19;;14403:366;;;:::o;14775:419::-;14941:4;14979:2;14968:9;14964:18;14956:26;;15028:9;15022:4;15018:20;15014:1;15003:9;14999:17;14992:47;15056:131;15182:4;15056:131;:::i;:::-;15048:139;;14775:419;;;:::o;15200:179::-;15340:31;15336:1;15328:6;15324:14;15317:55;15200:179;:::o;15385:366::-;15527:3;15548:67;15612:2;15607:3;15548:67;:::i;:::-;15541:74;;15624:93;15713:3;15624:93;:::i;:::-;15742:2;15737:3;15733:12;15726:19;;15385:366;;;:::o;15757:419::-;15923:4;15961:2;15950:9;15946:18;15938:26;;16010:9;16004:4;16000:20;15996:1;15985:9;15981:17;15974:47;16038:131;16164:4;16038:131;:::i;:::-;16030:139;;15757:419;;;:::o;16182:98::-;16233:6;16267:5;16261:12;16251:22;;16182:98;;;:::o;16286:147::-;16387:11;16424:3;16409:18;;16286:147;;;;:::o;16439:307::-;16507:1;16517:113;16531:6;16528:1;16525:13;16517:113;;;16616:1;16611:3;16607:11;16601:18;16597:1;16592:3;16588:11;16581:39;16553:2;16550:1;16546:10;16541:15;;16517:113;;;16648:6;16645:1;16642:13;16639:101;;;16728:1;16719:6;16714:3;16710:16;16703:27;16639:101;16488:258;16439:307;;;:::o;16752:373::-;16856:3;16884:38;16916:5;16884:38;:::i;:::-;16938:88;17019:6;17014:3;16938:88;:::i;:::-;16931:95;;17035:52;17080:6;17075:3;17068:4;17061:5;17057:16;17035:52;:::i;:::-;17112:6;17107:3;17103:16;17096:23;;16860:265;16752:373;;;;:::o;17131:271::-;17261:3;17283:93;17372:3;17363:6;17283:93;:::i;:::-;17276:100;;17393:3;17386:10;;17131:271;;;;:::o;17408:99::-;17460:6;17494:5;17488:12;17478:22;;17408:99;;;:::o;17513:102::-;17554:6;17605:2;17601:7;17596:2;17589:5;17585:14;17581:28;17571:38;;17513:102;;;:::o;17621:364::-;17709:3;17737:39;17770:5;17737:39;:::i;:::-;17792:71;17856:6;17851:3;17792:71;:::i;:::-;17785:78;;17872:52;17917:6;17912:3;17905:4;17898:5;17894:16;17872:52;:::i;:::-;17949:29;17971:6;17949:29;:::i;:::-;17944:3;17940:39;17933:46;;17713:272;17621:364;;;;:::o;17991:313::-;18104:4;18142:2;18131:9;18127:18;18119:26;;18191:9;18185:4;18181:20;18177:1;18166:9;18162:17;18155:47;18219:78;18292:4;18283:6;18219:78;:::i;:::-;18211:86;;17991:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2120400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_blockTimestamp()": "403",
								"airdropRate()": "2540",
								"airdropSince()": "2562",
								"calculateWeek(uint256)": "infinite",
								"changeAirdropPercentage(uint256)": "infinite",
								"changePenaltyFee(uint256)": "infinite",
								"claimAirdrop(address)": "infinite",
								"getVoters(address)": "infinite",
								"getVotingResult()": "infinite",
								"hasStake()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30463",
								"retractVote()": "infinite",
								"stake(address,uint256,uint256)": "infinite",
								"stakingPenaltyRate()": "2518",
								"startAirdrop()": "24541",
								"startVoting()": "infinite",
								"stopVoting()": "28938",
								"token_address()": "2537",
								"totalVoters()": "2563",
								"transferOwnership(address)": "30811",
								"vote()": "infinite",
								"votedUsers(uint256)": "infinite",
								"voters(address)": "2959",
								"withdrawStake()": "infinite"
							},
							"internal": {
								"_calculateAirdrop(uint256)": "infinite",
								"_calculateStakeReward(struct Staking.Stake memory)": "infinite",
								"_calculateStakingDuration(uint256)": "infinite",
								"_calculateStakingWithPenalty(uint256,uint256)": "infinite",
								"_checkVotingStatus()": "infinite",
								"_isVoter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 980,
									"end": 12683,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1800,
									"end": 1802,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1779,
									"end": 1802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1802,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1802,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1826,
									"end": 1828,
									"name": "PUSH",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1812,
									"end": 1823,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1812,
									"end": 1828,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1828,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1828,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1852,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1839,
									"end": 1852,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1860,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1897,
									"end": 1898,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1871,
									"end": 1885,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1886,
									"end": 1893,
									"name": "PUSH",
									"source": 6,
									"value": "76A700"
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1871,
									"end": 1894,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1898,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1898,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1898,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1871,
									"end": 1898,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1935,
									"end": 1936,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1908,
									"end": 1922,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1923,
									"end": 1931,
									"name": "PUSH",
									"source": 6,
									"value": "ED4E00"
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1936,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1936,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1936,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1936,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1973,
									"end": 1974,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1946,
									"end": 1960,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1961,
									"end": 1969,
									"name": "PUSH",
									"source": 6,
									"value": "1E13380"
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1974,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1974,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1974,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1974,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1981,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 12683,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206080df30709ffc63f62f5f3d50c085629ce899587f1dda48bb1132431e8b5a6a64736f6c634300080b0033",
									".code": [
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "8C8E8FEE"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "BED9D861"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "D2A569C3"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "D2A569C3"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "D5DBDF1B"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "FAB2F86B"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "BED9D861"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "C63AA3E7"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "CB79C2E1"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "8C8E8FEE"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "A143A5F2"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "A3EC138D"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "B5D9DF83"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "B87DA76D"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "632A9A52"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "632A9A52"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "65F8C6C5"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "671D2B75"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "8891CF0D"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "8C63F97F"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "70C8B74"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "C51B88F"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "10486B6A"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "1EC6B60A"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "2D15CC04"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "5F5300FF"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 12683,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3669,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3669,
											"end": 3679,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3669,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3669,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12010,
											"end": 12015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 12015,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12015,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11977,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11978,
											"end": 11988,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11995,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11971,
											"end": 11995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11996,
											"end": 12005,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 11996,
											"end": 12005,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11971,
											"end": 12006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12015,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12015,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12015,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11967,
											"end": 12070,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11967,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 11967,
											"end": 12070,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "PUSH",
											"source": 6,
											"value": "8B74220000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11967,
											"end": 12070,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 11967,
											"end": 12070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12119,
											"end": 12124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12080,
											"end": 12124,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12124,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12086,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12087,
											"end": 12097,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12104,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12080,
											"end": 12104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12105,
											"end": 12114,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 12105,
											"end": 12114,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12080,
											"end": 12124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12159,
											"end": 12160,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12134,
											"end": 12144,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12145,
											"end": 12154,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 12145,
											"end": 12154,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11889,
											"end": 12167,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4569,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4554,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4554,
											"end": 4632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "PUSH",
											"source": 6,
											"value": "88B440D600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4621,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4554,
											"end": 4632,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4554,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4747,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4713,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4713,
											"end": 4804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "PUSH",
											"source": 6,
											"value": "4462D2700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4793,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4713,
											"end": 4804,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4713,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4832,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4844,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4845,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4850,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4915,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4814,
											"end": 4915,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "PUSH",
											"source": 6,
											"value": "95377BE400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4904,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4915,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4814,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4941,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4925,
											"end": 4936,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4925,
											"end": 4936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4978,
											"end": 4982,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4957,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4958,
											"end": 4962,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4975,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4975,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4975,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5341,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5353,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5354,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5380,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5369,
											"end": 5392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5369,
											"end": 5392,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5369,
											"end": 5392,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5369,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5437,
											"end": 5438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5256,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5261,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5506,
											"end": 5519,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5544,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 5591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5459,
											"end": 5601,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5459,
											"end": 5601,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5459,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "PUSH",
											"source": 6,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 5681,
											"end": 5687,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5698,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5724,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5701,
											"end": 5724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5701,
											"end": 5724,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5701,
											"end": 5724,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5701,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5726,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4434,
											"end": 5733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 5733,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8579,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 8579,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8579,
											"end": 8600,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8579,
											"end": 8600,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 8579,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8650,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8651,
											"end": 8661,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8662,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8758,
											"end": 8759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8737,
											"end": 8747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8737,
											"end": 8754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8737,
											"end": 8754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8737,
											"end": 8754,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8737,
											"end": 8759,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8733,
											"end": 8818,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "PUSH",
											"source": 6,
											"value": "B018F08700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8807,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8818,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8733,
											"end": 8818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8827,
											"end": 8856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8874,
											"end": 8875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8877,
											"end": 8878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8880,
											"end": 8890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8827,
											"end": 8891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8827,
											"end": 8891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8902,
											"end": 8916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 8941,
											"end": 8951,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8919,
											"end": 8952,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8919,
											"end": 8952,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 8919,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8902,
											"end": 8952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8902,
											"end": 8952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9010,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 8980,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8967,
											"end": 8980,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 8980,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 8992,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8967,
											"end": 8992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 8992,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 9010,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8963,
											"end": 9177,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8963,
											"end": 9177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8963,
											"end": 9177,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9130,
											"end": 9136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9130,
											"end": 9157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 9130,
											"end": 9157,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9130,
											"end": 9157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9130,
											"end": 9157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9130,
											"end": 9157,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9130,
											"end": 9157,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 9130,
											"end": 9157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9129,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 9129,
											"end": 9165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9129,
											"end": 9165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9129,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 9129,
											"end": 9165,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9129,
											"end": 9165,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 9129,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9104,
											"end": 9108,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9062,
											"end": 9072,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9062,
											"end": 9079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9062,
											"end": 9079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9062,
											"end": 9079,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9062,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 9062,
											"end": 9100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9062,
											"end": 9100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9062,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9062,
											"end": 9100,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9062,
											"end": 9100,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 9062,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9061,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 9061,
											"end": 9108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9061,
											"end": 9108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9061,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 9061,
											"end": 9108,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9061,
											"end": 9108,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 9061,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 9060,
											"end": 9166,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 9060,
											"end": 9166,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9060,
											"end": 9166,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 9060,
											"end": 9166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9026,
											"end": 9033,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9026,
											"end": 9041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9026,
											"end": 9041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9026,
											"end": 9166,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9026,
											"end": 9166,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9026,
											"end": 9166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9026,
											"end": 9166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9026,
											"end": 9166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8963,
											"end": 9177,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8963,
											"end": 9177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 9205,
											"end": 9215,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9205,
											"end": 9231,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 9205,
											"end": 9231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9205,
											"end": 9231,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9191,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 9191,
											"end": 9232,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9191,
											"end": 9232,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 9191,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9191,
											"end": 9236,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9436,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 9187,
											"end": 9436,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9252,
											"end": 9267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 9288,
											"end": 9298,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9288,
											"end": 9305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9288,
											"end": 9305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9288,
											"end": 9305,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9270,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 9270,
											"end": 9306,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9270,
											"end": 9306,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 9270,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9252,
											"end": 9306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9252,
											"end": 9306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9360,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9327,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9333,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9333,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9350,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 9320,
											"end": 9350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9360,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9238,
											"end": 9371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 9187,
											"end": 9436,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9436,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 9187,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9421,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 9391,
											"end": 9421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9436,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 9187,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9469,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9446,
											"end": 9469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9478,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9511,
											"end": 9521,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9511,
											"end": 9528,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9511,
											"end": 9528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9511,
											"end": 9528,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9495,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9508,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9488,
											"end": 9508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9539,
											"end": 9553,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9539,
											"end": 9553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9539,
											"end": 9553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9539,
											"end": 9553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9539,
											"end": 9553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 9560,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11484,
											"end": 11488,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11467,
											"end": 11488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11467,
											"end": 11480,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11488,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11463,
											"end": 11547,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11463,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 11463,
											"end": 11547,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "PUSH",
											"source": 6,
											"value": "6DA4CD2E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11463,
											"end": 11547,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 11463,
											"end": 11547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11573,
											"end": 11577,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11557,
											"end": 11570,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 11557,
											"end": 11570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11600,
											"end": 11601,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11587,
											"end": 11596,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 11587,
											"end": 11596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11398,
											"end": 11608,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11245,
											"end": 11249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11276,
											"end": 11280,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11269,
											"end": 11293,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11301,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11302,
											"end": 11306,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11313,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11295,
											"end": 11313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11323,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 11314,
											"end": 11323,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11295,
											"end": 11324,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11261,
											"end": 11325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11261,
											"end": 11325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11261,
											"end": 11325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11261,
											"end": 11325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11332,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3669,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3669,
											"end": 3679,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3669,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3669,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11732,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11689,
											"end": 11732,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11732,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11695,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11696,
											"end": 11706,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11713,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11689,
											"end": 11713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11714,
											"end": 11723,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 11714,
											"end": 11723,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11732,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11732,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11732,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11685,
											"end": 11788,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11685,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 11685,
											"end": 11788,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "PUSH",
											"source": 6,
											"value": "740E33B000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11777,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11685,
											"end": 11788,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 11685,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11836,
											"end": 11840,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11798,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 11815,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11822,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11798,
											"end": 11822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11823,
											"end": 11832,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 11823,
											"end": 11832,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11875,
											"end": 11876,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11850,
											"end": 11860,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11861,
											"end": 11870,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 11861,
											"end": 11870,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11614,
											"end": 11883,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10542,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10565,
											"end": 10577,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10578,
											"end": 10582,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10565,
											"end": 10583,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10542,
											"end": 10583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10542,
											"end": 10583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10614,
											"end": 10615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10598,
											"end": 10604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10598,
											"end": 10611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10598,
											"end": 10611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10598,
											"end": 10611,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10598,
											"end": 10615,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10594,
											"end": 11022,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10594,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 10594,
											"end": 11022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10676,
											"end": 10677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 10649,
											"end": 10655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10671,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 10649,
											"end": 10671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10671,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10635,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 10635,
											"end": 10672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10635,
											"end": 10672,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 10635,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10635,
											"end": 10677,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10748,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 10631,
											"end": 10748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "PUSH",
											"source": 6,
											"value": "DD8456CC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10733,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10748,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 10631,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10788,
											"end": 10789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10785,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10762,
											"end": 10785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10789,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10828,
											"end": 10843,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 10809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 10825,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 10803,
											"end": 10825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 10843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 10843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 10843,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 10843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10858,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10905,
											"end": 10918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10937,
											"end": 10947,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 10997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10983,
											"end": 10996,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10983,
											"end": 10996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10983,
											"end": 10996,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10965,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 10965,
											"end": 10997,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10965,
											"end": 10997,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 10965,
											"end": 10997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10858,
											"end": 10880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 10858,
											"end": 11011,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10858,
											"end": 11011,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 10858,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10594,
											"end": 11022,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 10594,
											"end": 11022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 11028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 11028,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12290,
											"end": 12294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12329,
											"end": 12330,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12314,
											"end": 12325,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 12314,
											"end": 12325,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12314,
											"end": 12330,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 12310,
											"end": 12389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "PUSH",
											"source": 6,
											"value": "2F9686DE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12378,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12389,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 12310,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12398,
											"end": 12417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12440,
											"end": 12442,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 12435,
											"end": 12436,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 12421,
											"end": 12432,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 12421,
											"end": 12432,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12421,
											"end": 12436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 12421,
											"end": 12436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12421,
											"end": 12436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12421,
											"end": 12436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 12421,
											"end": 12436,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12421,
											"end": 12436,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 12421,
											"end": 12436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12420,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 12420,
											"end": 12442,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12420,
											"end": 12442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12420,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 12420,
											"end": 12442,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12420,
											"end": 12442,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 12420,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12398,
											"end": 12442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12398,
											"end": 12442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12481,
											"end": 12492,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12467,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12468,
											"end": 12477,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 12468,
											"end": 12477,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12457,
											"end": 12492,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12453,
											"end": 12573,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12453,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 12453,
											"end": 12573,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12515,
											"end": 12519,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12508,
											"end": 12519,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12508,
											"end": 12519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12508,
											"end": 12519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12508,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 12508,
											"end": 12519,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12453,
											"end": 12573,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 12453,
											"end": 12573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12557,
											"end": 12562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12550,
											"end": 12562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12550,
											"end": 12562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12550,
											"end": 12562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12173,
											"end": 12579,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1411,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5897,
											"end": 5899,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 5899,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 5965,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5884,
											"end": 5965,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "PUSH",
											"source": 6,
											"value": "F1A470D700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5954,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 5965,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5884,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5995,
											"end": 6001,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 5992,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5974,
											"end": 6001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6001,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "PUSH",
											"source": 6,
											"value": "CFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9"
										},
										{
											"begin": 6031,
											"end": 6037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6038,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6045,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1587,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10173,
											"end": 10180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10231,
											"end": 10237,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 10218,
											"end": 10227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10215,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 10200,
											"end": 10227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 10200,
											"end": 10227,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10200,
											"end": 10227,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 10200,
											"end": 10227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10199,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 10199,
											"end": 10237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10199,
											"end": 10237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10199,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10199,
											"end": 10237,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10199,
											"end": 10237,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 10199,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10244,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 7734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7749,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7760,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7761,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7788,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 7810,
											"end": 7820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7788,
											"end": 7821,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7788,
											"end": 7821,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 7788,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7851,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7862,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 7889,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7873,
											"end": 7884,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7873,
											"end": 7884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7913,
											"end": 7923,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7930,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7906,
											"end": 7930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7931,
											"end": 7940,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7931,
											"end": 7940,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7941,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7981,
											"end": 7996,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 7966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 7996,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7952,
											"end": 8524,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7952,
											"end": 8524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7952,
											"end": 8524,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8109,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 8138,
											"end": 8148,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8138,
											"end": 8155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8138,
											"end": 8155,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8157,
											"end": 8163,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8109,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 8109,
											"end": 8164,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8109,
											"end": 8164,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 8109,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8164,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8164,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8226,
											"end": 8239,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8318,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8287,
											"end": 8301,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8179,
											"end": 8333,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8179,
											"end": 8333,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8179,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7998,
											"end": 8344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7998,
											"end": 8344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7952,
											"end": 8524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7952,
											"end": 8524,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7952,
											"end": 8524,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7952,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8364,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8411,
											"end": 8424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8453,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8498,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8482,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8472,
											"end": 8489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8489,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 8472,
											"end": 8498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8472,
											"end": 8498,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8472,
											"end": 8498,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 8472,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8364,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8364,
											"end": 8513,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8364,
											"end": 8513,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 8364,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7952,
											"end": 8524,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7952,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 8530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 8530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 8530,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10056,
											"end": 10063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10082,
											"end": 10097,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10104,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9755,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9725,
											"end": 9737,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9725,
											"end": 9755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9725,
											"end": 9755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9725,
											"end": 9755,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9725,
											"end": 9755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9672,
											"end": 9762,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9862,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 9850,
											"end": 9856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9850,
											"end": 9862,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9846,
											"end": 9929,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9846,
											"end": 9929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 9846,
											"end": 9929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "PUSH",
											"source": 6,
											"value": "A552CF1000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9885,
											"end": 9918,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9846,
											"end": 9929,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 9846,
											"end": 9929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9958,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9938,
											"end": 9949,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9938,
											"end": 9958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9938,
											"end": 9958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9938,
											"end": 9958,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9938,
											"end": 9958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "PUSH",
											"source": 6,
											"value": "CC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E"
										},
										{
											"begin": 9988,
											"end": 9994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9995,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 10002,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12669,
											"end": 12674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12585,
											"end": 12681,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3703,
											"end": 3907,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3703,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3819,
											"end": 3901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "A1D1891400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 3901,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3819,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3907,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3403,
											"end": 3634,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3403,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3573,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3573,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3551,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3534,
											"end": 3564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3573,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3573,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3573,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3628,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 3530,
											"end": 3628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "1E567DD400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3617,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3628,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 3530,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3634,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6288,
											"end": 6725,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6288,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6391,
											"end": 6398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6440,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6418,
											"end": 6428,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6418,
											"end": 6435,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6418,
											"end": 6435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6418,
											"end": 6440,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6475,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6414,
											"end": 6475,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6456,
											"end": 6464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6456,
											"end": 6464,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6475,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6414,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6718,
											"name": "PUSH",
											"source": 6,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 6667,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6693,
											"end": 6703,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6709,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6709,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 6667,
											"end": 6710,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6667,
											"end": 6710,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6667,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 6638,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 6648,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6628,
											"end": 6648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 6648,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6602,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6609,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6592,
											"end": 6648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6592,
											"end": 6648,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 6648,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6592,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6592,
											"end": 6710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6592,
											"end": 6710,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 6710,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6592,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6591,
											"end": 6718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6591,
											"end": 6718,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6591,
											"end": 6718,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6591,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6725,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6288,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6725,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6725,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10250,
											"end": 10429,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 10250,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10345,
											"end": 10352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10414,
											"end": 10422,
											"name": "PUSH",
											"source": 6,
											"value": "1DFE200"
										},
										{
											"begin": 10406,
											"end": 10410,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 10391,
											"end": 10402,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10391,
											"end": 10402,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 10377,
											"end": 10402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10377,
											"end": 10402,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10377,
											"end": 10402,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 10377,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10376,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 10376,
											"end": 10410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10376,
											"end": 10410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10376,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10376,
											"end": 10410,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10376,
											"end": 10410,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 10376,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10375,
											"end": 10422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10375,
											"end": 10422,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10375,
											"end": 10422,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10375,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10368,
											"end": 10422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10368,
											"end": 10422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10429,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 888,
											"end": 890,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6731,
											"end": 7090,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6731,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6857,
											"end": 6864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6890,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6895,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6880,
											"end": 6935,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6880,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6880,
											"end": 6935,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6922,
											"end": 6923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6880,
											"end": 6935,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6880,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7007,
											"end": 7011,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6982,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6976,
											"end": 7003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 7003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6976,
											"end": 7003,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6976,
											"end": 7003,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6976,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6975,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6975,
											"end": 7011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6975,
											"end": 7011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6975,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6975,
											"end": 7011,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6975,
											"end": 7011,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6975,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6971,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6965,
											"end": 7012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 7012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6965,
											"end": 7012,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6965,
											"end": 7012,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6965,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7072,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7043,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 7037,
											"end": 7064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7037,
											"end": 7064,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7037,
											"end": 7064,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 7037,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 7036,
											"end": 7072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7036,
											"end": 7072,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7036,
											"end": 7072,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 7036,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7032,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7026,
											"end": 7073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7026,
											"end": 7073,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7026,
											"end": 7073,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7026,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6944,
											"end": 7083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6944,
											"end": 7083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6944,
											"end": 7083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6944,
											"end": 7083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 7090,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6731,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 7090,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 7090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 7090,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 7090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 7090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 7090,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6051,
											"end": 6282,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 6051,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6148,
											"end": 6155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "PUSH",
											"source": 6,
											"value": "1E13380"
										},
										{
											"begin": 6259,
											"end": 6263,
											"name": "PUSH",
											"source": 6,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 6232,
											"end": 6255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6232,
											"end": 6255,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6255,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 6232,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 6231,
											"end": 6263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6231,
											"end": 6263,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6231,
											"end": 6263,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 6231,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6051,
											"end": 6282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6051,
											"end": 6282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6051,
											"end": 6282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6051,
											"end": 6282,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "149"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1327,
											"end": 1336,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1436,
											"end": 1553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1822,
											"end": 1930,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 1822,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 1917,
											"end": 1922,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 1899,
											"end": 1923,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 1923,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 1899,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1924,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1930,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1988,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 1988,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2123,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2110,
											"end": 2124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2212,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2206,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2213,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2214,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 2284,
											"end": 2288,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2282,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2275,
											"end": 2289,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2227,
											"end": 2290,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2227,
											"end": 2290,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 2227,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2387,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2376,
											"end": 2381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 2459,
											"end": 2463,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2457,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2402,
											"end": 2465,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2402,
											"end": 2465,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 2402,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2310,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2566,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2568,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 2638,
											"end": 2642,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2627,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 2581,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2747,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2736,
											"end": 2741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2749,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 2819,
											"end": 2823,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2814,
											"end": 2817,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2762,
											"end": 2825,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2762,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 2762,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2926,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2928,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2941,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 2998,
											"end": 3002,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2993,
											"end": 2996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 3003,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2941,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2941,
											"end": 3004,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3004,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 2941,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 3014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3101,
											"end": 3106,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3184,
											"end": 3188,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3179,
											"end": 3182,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3293,
											"end": 3297,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 3286,
											"end": 3291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3299,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3312,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3369,
											"end": 3373,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 3364,
											"end": 3367,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3312,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3312,
											"end": 3375,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3312,
											"end": 3375,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3312,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 3392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 3392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 3392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 3392,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3468,
											"end": 4219,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 3468,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3633,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3622,
											"end": 3625,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3634,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 3728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3722,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3730,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 3800,
											"end": 3804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3798,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3743,
											"end": 3806,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3743,
											"end": 3806,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 3743,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3905,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3894,
											"end": 3899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3884,
											"end": 3907,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3977,
											"end": 3981,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3972,
											"end": 3975,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3968,
											"end": 3982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3954,
											"end": 3966,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 4080,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4082,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 4196,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4187,
											"end": 4201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 4095,
											"end": 4202,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4095,
											"end": 4202,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 4095,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 4219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 4219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 4219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 4219,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4225,
											"end": 4572,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4225,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4432,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 4562,
											"end": 4563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4560,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4564,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4544,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4432,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 4432,
											"end": 4565,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4432,
											"end": 4565,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 4432,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4572,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4572,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4572,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4578,
											"end": 4907,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4578,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4637,
											"end": 4643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4674,
											"end": 4683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4672,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4773,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 4654,
											"end": 4773,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 4692,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4692,
											"end": 4771,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4692,
											"end": 4771,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 4692,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4773,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 4654,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4812,
											"end": 4813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 4882,
											"end": 4889,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4862,
											"end": 4871,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 4837,
											"end": 4890,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4837,
											"end": 4890,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 4837,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4827,
											"end": 4890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4827,
											"end": 4890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4783,
											"end": 4900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4907,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4907,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4913,
											"end": 5003,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4913,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4947,
											"end": 4954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4983,
											"end": 4996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 5003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 5003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 5003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 5003,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5009,
											"end": 5118,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 5009,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 5105,
											"end": 5110,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5078,
											"end": 5112,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5009,
											"end": 5118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5009,
											"end": 5118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5009,
											"end": 5118,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5124,
											"end": 5432,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5124,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5233,
											"end": 5237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 5346,
											"end": 5347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 5284,
											"end": 5349,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5284,
											"end": 5349,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 5284,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 5421,
											"end": 5423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5403,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 5359,
											"end": 5425,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5359,
											"end": 5425,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 5359,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5432,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5432,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5432,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5438,
											"end": 5556,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 5438,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 5543,
											"end": 5548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 5525,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5556,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5659,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5695,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5682,
											"end": 5691,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 5696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5772,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5776,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5750,
											"end": 5756,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 5706,
											"end": 5777,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5706,
											"end": 5777,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 5706,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5562,
											"end": 5784,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5790,
											"end": 6000,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5790,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5990,
											"end": 5991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5988,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5975,
											"end": 5992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5966,
											"end": 5972,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 5928,
											"end": 5993,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5928,
											"end": 5993,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5928,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5790,
											"end": 6000,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5790,
											"end": 6000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5790,
											"end": 6000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5790,
											"end": 6000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5790,
											"end": 6000,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6006,
											"end": 6335,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 6006,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6116,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6102,
											"end": 6111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6100,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6112,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6117,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6201,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 6082,
											"end": 6201,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 6120,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 6120,
											"end": 6199,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6120,
											"end": 6199,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 6120,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6201,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 6082,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6240,
											"end": 6241,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6310,
											"end": 6317,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6307,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6299,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6286,
											"end": 6308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 6265,
											"end": 6318,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6265,
											"end": 6318,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6265,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6318,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6335,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6335,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6335,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6341,
											"end": 6459,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6341,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 6446,
											"end": 6451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 6428,
											"end": 6452,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6428,
											"end": 6452,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 6428,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6416,
											"end": 6453,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6459,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6465,
											"end": 6687,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 6465,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 6598,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 6679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6659,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6609,
											"end": 6680,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6609,
											"end": 6680,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6609,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6687,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6687,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6693,
											"end": 6862,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 6693,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6777,
											"end": 6788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6806,
											"end": 6809,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6846,
											"end": 6849,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6856,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6862,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6862,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6862,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6868,
											"end": 7049,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 6868,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7041,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6992,
											"end": 7006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6985,
											"end": 7042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 7049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 7049,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 7282,
											"end": 7284,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7277,
											"end": 7280,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 7218,
											"end": 7285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7218,
											"end": 7285,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 7218,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7211,
											"end": 7285,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7211,
											"end": 7285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7294,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 7383,
											"end": 7386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7294,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 7294,
											"end": 7387,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7294,
											"end": 7387,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 7294,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7414,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7407,
											"end": 7410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7403,
											"end": 7415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7633,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7620,
											"end": 7629,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7634,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 7634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 7634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7690,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7666,
											"end": 7667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7655,
											"end": 7664,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7651,
											"end": 7668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 7834,
											"end": 7838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 7708,
											"end": 7839,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7708,
											"end": 7839,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 7708,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7700,
											"end": 7839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7700,
											"end": 7839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7852,
											"end": 8032,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 7852,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7900,
											"end": 7977,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7978,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7997,
											"end": 8001,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7994,
											"end": 7995,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7987,
											"end": 8002,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8021,
											"end": 8025,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8018,
											"end": 8019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8026,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8229,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 8038,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8082,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8098,
											"end": 8118,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8098,
											"end": 8118,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 8098,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8093,
											"end": 8118,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8093,
											"end": 8118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 8150,
											"end": 8151,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8132,
											"end": 8152,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8132,
											"end": 8152,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 8132,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8152,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8171,
											"end": 8172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8165,
											"end": 8173,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8196,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 8162,
											"end": 8196,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8196,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 8162,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8222,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8218,
											"end": 8219,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8214,
											"end": 8223,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8206,
											"end": 8223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8206,
											"end": 8223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8229,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8229,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8229,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8235,
											"end": 8417,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 8235,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8375,
											"end": 8409,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8371,
											"end": 8372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8363,
											"end": 8369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8373,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8352,
											"end": 8410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8417,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8423,
											"end": 8789,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 8423,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8586,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 8650,
											"end": 8652,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8645,
											"end": 8648,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8586,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 8586,
											"end": 8653,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8586,
											"end": 8653,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 8586,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 8751,
											"end": 8754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 8662,
											"end": 8755,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8662,
											"end": 8755,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 8662,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8780,
											"end": 8782,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8775,
											"end": 8778,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 8783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 8783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8789,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8795,
											"end": 9214,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 8795,
											"end": 9214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8961,
											"end": 8965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9001,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8988,
											"end": 8997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8984,
											"end": 9002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9042,
											"end": 9046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9038,
											"end": 9058,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9023,
											"end": 9032,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9019,
											"end": 9036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 9202,
											"end": 9206,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 9076,
											"end": 9207,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9076,
											"end": 9207,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 9076,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9068,
											"end": 9207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9068,
											"end": 9207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 9214,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 9214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 9214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 9214,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9220,
											"end": 9525,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 9220,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9260,
											"end": 9263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 9297,
											"end": 9298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 9331,
											"end": 9332,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9313,
											"end": 9333,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9313,
											"end": 9333,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 9313,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9308,
											"end": 9333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9308,
											"end": 9333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9467,
											"end": 9468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9399,
											"end": 9465,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9395,
											"end": 9469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9392,
											"end": 9393,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9470,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9493,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 9386,
											"end": 9493,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9493,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 9386,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9517,
											"end": 9518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9514,
											"end": 9515,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9519,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9519,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9525,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9525,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9525,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9531,
											"end": 9973,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9531,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9680,
											"end": 9684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9718,
											"end": 9720,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9707,
											"end": 9716,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9703,
											"end": 9721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9695,
											"end": 9721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9695,
											"end": 9721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 9799,
											"end": 9800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9784,
											"end": 9801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9775,
											"end": 9781,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 9731,
											"end": 9802,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9731,
											"end": 9802,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 9731,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 9880,
											"end": 9882,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9869,
											"end": 9878,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9865,
											"end": 9883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9856,
											"end": 9862,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 9812,
											"end": 9884,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9812,
											"end": 9884,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 9812,
											"end": 9884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9894,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 9962,
											"end": 9964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9951,
											"end": 9960,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9938,
											"end": 9944,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9894,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 9894,
											"end": 9966,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9894,
											"end": 9966,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 9894,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9973,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9973,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9973,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9979,
											"end": 10327,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 9979,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10019,
											"end": 10026,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 10060,
											"end": 10061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 10042,
											"end": 10062,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10042,
											"end": 10062,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 10042,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10062,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 10094,
											"end": 10095,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 10076,
											"end": 10096,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10076,
											"end": 10096,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 10076,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10071,
											"end": 10096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10071,
											"end": 10096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10264,
											"end": 10265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10196,
											"end": 10262,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10192,
											"end": 10266,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10186,
											"end": 10267,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10181,
											"end": 10182,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10167,
											"end": 10184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10160,
											"end": 10291,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10160,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 10160,
											"end": 10291,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10160,
											"end": 10291,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 10160,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10320,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10316,
											"end": 10317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10312,
											"end": 10321,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9979,
											"end": 10327,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9979,
											"end": 10327,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9979,
											"end": 10327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9979,
											"end": 10327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9979,
											"end": 10327,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10333,
											"end": 10513,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 10333,
											"end": 10513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10381,
											"end": 10458,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10378,
											"end": 10379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10459,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10478,
											"end": 10482,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10475,
											"end": 10476,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10468,
											"end": 10483,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10506,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10499,
											"end": 10500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10492,
											"end": 10507,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10519,
											"end": 10704,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 10519,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10576,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 10594,
											"end": 10595,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10576,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 10576,
											"end": 10596,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10576,
											"end": 10596,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 10576,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10571,
											"end": 10596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10571,
											"end": 10596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10610,
											"end": 10630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 10628,
											"end": 10629,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10610,
											"end": 10630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 10610,
											"end": 10630,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10610,
											"end": 10630,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 10610,
											"end": 10630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10630,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10630,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10649,
											"end": 10650,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10696,
											"end": 10697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10689,
											"end": 10698,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10684,
											"end": 10698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10684,
											"end": 10698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10519,
											"end": 10704,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10519,
											"end": 10704,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10519,
											"end": 10704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10519,
											"end": 10704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10519,
											"end": 10704,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10710,
											"end": 10935,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 10710,
											"end": 10935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10850,
											"end": 10884,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10846,
											"end": 10847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10838,
											"end": 10844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10834,
											"end": 10848,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10885,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10919,
											"end": 10927,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10914,
											"end": 10916,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10906,
											"end": 10912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10902,
											"end": 10917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 10928,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 10935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 10935,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10941,
											"end": 11307,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 10941,
											"end": 11307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11083,
											"end": 11086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11104,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 11168,
											"end": 11170,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 11163,
											"end": 11166,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11104,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 11104,
											"end": 11171,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11104,
											"end": 11171,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 11104,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11097,
											"end": 11171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11097,
											"end": 11171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11180,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 11269,
											"end": 11272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11180,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 11180,
											"end": 11273,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11180,
											"end": 11273,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 11180,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11298,
											"end": 11300,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11293,
											"end": 11296,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11282,
											"end": 11301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11282,
											"end": 11301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10941,
											"end": 11307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10941,
											"end": 11307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10941,
											"end": 11307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10941,
											"end": 11307,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11313,
											"end": 11732,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 11313,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11479,
											"end": 11483,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11517,
											"end": 11519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11506,
											"end": 11515,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11502,
											"end": 11520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11494,
											"end": 11520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11494,
											"end": 11520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11560,
											"end": 11564,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11556,
											"end": 11576,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11552,
											"end": 11553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11541,
											"end": 11550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11537,
											"end": 11554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11530,
											"end": 11577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11594,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 11720,
											"end": 11724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11594,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 11594,
											"end": 11725,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11594,
											"end": 11725,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 11594,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11313,
											"end": 11732,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11313,
											"end": 11732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11313,
											"end": 11732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11313,
											"end": 11732,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11738,
											"end": 12180,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 11738,
											"end": 12180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 11891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11925,
											"end": 11927,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11914,
											"end": 11923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11902,
											"end": 11928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11902,
											"end": 11928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11938,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 12006,
											"end": 12007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11995,
											"end": 12004,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11991,
											"end": 12008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11982,
											"end": 11988,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11938,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 11938,
											"end": 12009,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11938,
											"end": 12009,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 11938,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12019,
											"end": 12091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 12087,
											"end": 12089,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12076,
											"end": 12085,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12072,
											"end": 12090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12063,
											"end": 12069,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12019,
											"end": 12091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 12019,
											"end": 12091,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12019,
											"end": 12091,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 12019,
											"end": 12091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12101,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 12169,
											"end": 12171,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12158,
											"end": 12167,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12154,
											"end": 12172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12145,
											"end": 12151,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12101,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 12101,
											"end": 12173,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12101,
											"end": 12173,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 12101,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 12180,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 12180,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 12180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 12180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 12180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 12180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 12180,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12186,
											"end": 12518,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 12186,
											"end": 12518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12307,
											"end": 12311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12345,
											"end": 12347,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12334,
											"end": 12343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12330,
											"end": 12348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12322,
											"end": 12348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12322,
											"end": 12348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12358,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 12426,
											"end": 12427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12411,
											"end": 12428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12402,
											"end": 12408,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12358,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 12358,
											"end": 12429,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12358,
											"end": 12429,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 12358,
											"end": 12429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12439,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 12507,
											"end": 12509,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12496,
											"end": 12505,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12492,
											"end": 12510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12483,
											"end": 12489,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12439,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 12439,
											"end": 12511,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12439,
											"end": 12511,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 12439,
											"end": 12511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12518,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12518,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12518,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12524,
											"end": 12640,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 12524,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12594,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 12609,
											"end": 12614,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12594,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 12594,
											"end": 12615,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12594,
											"end": 12615,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 12594,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12587,
											"end": 12592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12584,
											"end": 12616,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12574,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 12574,
											"end": 12634,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12630,
											"end": 12631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12627,
											"end": 12628,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12574,
											"end": 12634,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 12574,
											"end": 12634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12524,
											"end": 12640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12524,
											"end": 12640,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12646,
											"end": 12783,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 12646,
											"end": 12783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12731,
											"end": 12737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12725,
											"end": 12738,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12716,
											"end": 12738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12716,
											"end": 12738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12747,
											"end": 12777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 12771,
											"end": 12776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12747,
											"end": 12777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 12747,
											"end": 12777,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12747,
											"end": 12777,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 12747,
											"end": 12777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12646,
											"end": 12783,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12646,
											"end": 12783,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12646,
											"end": 12783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12646,
											"end": 12783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12646,
											"end": 12783,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12789,
											"end": 13134,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 12789,
											"end": 13134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12856,
											"end": 12862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12905,
											"end": 12907,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12893,
											"end": 12902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12884,
											"end": 12891,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12880,
											"end": 12903,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12876,
											"end": 12908,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12992,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 12873,
											"end": 12992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12911,
											"end": 12990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 12911,
											"end": 12990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 12911,
											"end": 12990,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12911,
											"end": 12990,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 12911,
											"end": 12990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12992,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 12873,
											"end": 12992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13031,
											"end": 13032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13056,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 13109,
											"end": 13116,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13100,
											"end": 13106,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13089,
											"end": 13098,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13085,
											"end": 13107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13056,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 13056,
											"end": 13117,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13056,
											"end": 13117,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 13056,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13046,
											"end": 13117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13046,
											"end": 13117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13002,
											"end": 13127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12789,
											"end": 13134,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12789,
											"end": 13134,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12789,
											"end": 13134,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12789,
											"end": 13134,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12789,
											"end": 13134,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13140,
											"end": 13369,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 13140,
											"end": 13369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13280,
											"end": 13314,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 13276,
											"end": 13277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13268,
											"end": 13274,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13264,
											"end": 13278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13257,
											"end": 13315,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13349,
											"end": 13361,
											"name": "PUSH",
											"source": 7,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 13344,
											"end": 13346,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13336,
											"end": 13342,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13325,
											"end": 13362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13140,
											"end": 13369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13140,
											"end": 13369,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13375,
											"end": 13741,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 13375,
											"end": 13741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13538,
											"end": 13605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 13602,
											"end": 13604,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 13597,
											"end": 13600,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 13538,
											"end": 13605,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13538,
											"end": 13605,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 13538,
											"end": 13605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13531,
											"end": 13605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13531,
											"end": 13605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13614,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 13703,
											"end": 13706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13614,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 13614,
											"end": 13707,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13614,
											"end": 13707,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 13614,
											"end": 13707,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13732,
											"end": 13734,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13727,
											"end": 13730,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13723,
											"end": 13735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13716,
											"end": 13735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13716,
											"end": 13735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13375,
											"end": 13741,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13375,
											"end": 13741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13375,
											"end": 13741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13375,
											"end": 13741,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13747,
											"end": 14166,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 13747,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13913,
											"end": 13917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13951,
											"end": 13953,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13940,
											"end": 13949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 13954,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13928,
											"end": 13954,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13928,
											"end": 13954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14000,
											"end": 14009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13994,
											"end": 13998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13990,
											"end": 14010,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13986,
											"end": 13987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13975,
											"end": 13984,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13971,
											"end": 13988,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13964,
											"end": 14011,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 14154,
											"end": 14158,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 14028,
											"end": 14159,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14028,
											"end": 14159,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 14028,
											"end": 14159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14020,
											"end": 14159,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14020,
											"end": 14159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 14166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 14166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 14166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 14166,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14172,
											"end": 14397,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 14172,
											"end": 14397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14312,
											"end": 14346,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 14308,
											"end": 14309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14300,
											"end": 14306,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14296,
											"end": 14310,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14289,
											"end": 14347,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14381,
											"end": 14389,
											"name": "PUSH",
											"source": 7,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14376,
											"end": 14378,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14368,
											"end": 14374,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14364,
											"end": 14379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14357,
											"end": 14390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14172,
											"end": 14397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14172,
											"end": 14397,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14403,
											"end": 14769,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 14403,
											"end": 14769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14545,
											"end": 14548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14566,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 14630,
											"end": 14632,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 14625,
											"end": 14628,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14566,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 14566,
											"end": 14633,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14566,
											"end": 14633,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 14566,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14559,
											"end": 14633,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14559,
											"end": 14633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14642,
											"end": 14735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 14731,
											"end": 14734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14642,
											"end": 14735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 14642,
											"end": 14735,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14642,
											"end": 14735,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 14642,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14760,
											"end": 14762,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14755,
											"end": 14758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14751,
											"end": 14763,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14744,
											"end": 14763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14744,
											"end": 14763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14403,
											"end": 14769,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14403,
											"end": 14769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14403,
											"end": 14769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14403,
											"end": 14769,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14775,
											"end": 15194,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 14775,
											"end": 15194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14941,
											"end": 14945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14979,
											"end": 14981,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14968,
											"end": 14977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14964,
											"end": 14982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14956,
											"end": 14982,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14956,
											"end": 14982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15028,
											"end": 15037,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15022,
											"end": 15026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15018,
											"end": 15038,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15014,
											"end": 15015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15003,
											"end": 15012,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14992,
											"end": 15039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15056,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 15182,
											"end": 15186,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15056,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 15056,
											"end": 15187,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15056,
											"end": 15187,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 15056,
											"end": 15187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15048,
											"end": 15187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15048,
											"end": 15187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14775,
											"end": 15194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14775,
											"end": 15194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14775,
											"end": 15194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14775,
											"end": 15194,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15200,
											"end": 15379,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 15200,
											"end": 15379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15340,
											"end": 15371,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 15336,
											"end": 15337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15328,
											"end": 15334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15324,
											"end": 15338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15317,
											"end": 15372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15200,
											"end": 15379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15200,
											"end": 15379,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15385,
											"end": 15751,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 15385,
											"end": 15751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15527,
											"end": 15530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15548,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 15612,
											"end": 15614,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 15607,
											"end": 15610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 15548,
											"end": 15615,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15548,
											"end": 15615,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 15548,
											"end": 15615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15541,
											"end": 15615,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15541,
											"end": 15615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15624,
											"end": 15717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15713,
											"end": 15716,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15624,
											"end": 15717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 15624,
											"end": 15717,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15624,
											"end": 15717,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15624,
											"end": 15717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15742,
											"end": 15744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15737,
											"end": 15740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15733,
											"end": 15745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15726,
											"end": 15745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15726,
											"end": 15745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15385,
											"end": 15751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15385,
											"end": 15751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15385,
											"end": 15751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15385,
											"end": 15751,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15923,
											"end": 15927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15961,
											"end": 15963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15950,
											"end": 15959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15946,
											"end": 15964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15938,
											"end": 15964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15938,
											"end": 15964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16010,
											"end": 16019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16004,
											"end": 16008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16000,
											"end": 16020,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15996,
											"end": 15997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15985,
											"end": 15994,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15981,
											"end": 15998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15974,
											"end": 16021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16038,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 16164,
											"end": 16168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16038,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 16038,
											"end": 16169,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16038,
											"end": 16169,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 16038,
											"end": 16169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16030,
											"end": 16169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16030,
											"end": 16169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16182,
											"end": 16280,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 16182,
											"end": 16280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16233,
											"end": 16239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16261,
											"end": 16273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16251,
											"end": 16273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16251,
											"end": 16273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16182,
											"end": 16280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16182,
											"end": 16280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16182,
											"end": 16280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16182,
											"end": 16280,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16286,
											"end": 16433,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 16286,
											"end": 16433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16387,
											"end": 16398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16424,
											"end": 16427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16409,
											"end": 16427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16409,
											"end": 16427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16433,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16433,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16439,
											"end": 16746,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 16439,
											"end": 16746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16507,
											"end": 16508,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16517,
											"end": 16630,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 16517,
											"end": 16630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16531,
											"end": 16537,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16528,
											"end": 16529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16517,
											"end": 16630,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16517,
											"end": 16630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 16517,
											"end": 16630,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16616,
											"end": 16617,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16611,
											"end": 16614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16607,
											"end": 16618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16619,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16597,
											"end": 16598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16592,
											"end": 16595,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16588,
											"end": 16599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16581,
											"end": 16620,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16553,
											"end": 16555,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16550,
											"end": 16551,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16546,
											"end": 16556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16541,
											"end": 16556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16541,
											"end": 16556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16517,
											"end": 16630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 16517,
											"end": 16630,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16517,
											"end": 16630,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 16517,
											"end": 16630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16648,
											"end": 16654,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16645,
											"end": 16646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16642,
											"end": 16655,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16639,
											"end": 16740,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16639,
											"end": 16740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 16639,
											"end": 16740,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16728,
											"end": 16729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16719,
											"end": 16725,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16714,
											"end": 16717,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16710,
											"end": 16726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16703,
											"end": 16730,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16639,
											"end": 16740,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 16639,
											"end": 16740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16488,
											"end": 16746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16439,
											"end": 16746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16439,
											"end": 16746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16439,
											"end": 16746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16439,
											"end": 16746,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16752,
											"end": 17125,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 16752,
											"end": 17125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16856,
											"end": 16859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16884,
											"end": 16922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 16916,
											"end": 16921,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16884,
											"end": 16922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 16884,
											"end": 16922,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16884,
											"end": 16922,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 16884,
											"end": 16922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16938,
											"end": 17026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 17019,
											"end": 17025,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17014,
											"end": 17017,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16938,
											"end": 17026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 16938,
											"end": 17026,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16938,
											"end": 17026,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 16938,
											"end": 17026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16931,
											"end": 17026,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16931,
											"end": 17026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17035,
											"end": 17087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 17080,
											"end": 17086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17075,
											"end": 17078,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17072,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17061,
											"end": 17066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17057,
											"end": 17073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17035,
											"end": 17087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 17035,
											"end": 17087,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17035,
											"end": 17087,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 17035,
											"end": 17087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17112,
											"end": 17118,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17107,
											"end": 17110,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17103,
											"end": 17119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17096,
											"end": 17119,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17096,
											"end": 17119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16860,
											"end": 17125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16752,
											"end": 17125,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16752,
											"end": 17125,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16752,
											"end": 17125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16752,
											"end": 17125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16752,
											"end": 17125,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17131,
											"end": 17402,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 17131,
											"end": 17402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17261,
											"end": 17264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17283,
											"end": 17376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 17372,
											"end": 17375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17363,
											"end": 17369,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17283,
											"end": 17376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 17283,
											"end": 17376,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17283,
											"end": 17376,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 17283,
											"end": 17376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17376,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17393,
											"end": 17396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17386,
											"end": 17396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17386,
											"end": 17396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17131,
											"end": 17402,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17131,
											"end": 17402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17131,
											"end": 17402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17131,
											"end": 17402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17131,
											"end": 17402,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17408,
											"end": 17507,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 17408,
											"end": 17507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17460,
											"end": 17466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17494,
											"end": 17499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17488,
											"end": 17500,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17478,
											"end": 17500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17478,
											"end": 17500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17408,
											"end": 17507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17408,
											"end": 17507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17408,
											"end": 17507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17408,
											"end": 17507,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17513,
											"end": 17615,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 17513,
											"end": 17615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17554,
											"end": 17560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17605,
											"end": 17607,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17601,
											"end": 17608,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17596,
											"end": 17598,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17589,
											"end": 17594,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17585,
											"end": 17599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17581,
											"end": 17609,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17571,
											"end": 17609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17571,
											"end": 17609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17513,
											"end": 17615,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17513,
											"end": 17615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17513,
											"end": 17615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17513,
											"end": 17615,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17621,
											"end": 17985,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 17621,
											"end": 17985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17709,
											"end": 17712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17737,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 17770,
											"end": 17775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17737,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 17737,
											"end": 17776,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17737,
											"end": 17776,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 17737,
											"end": 17776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17792,
											"end": 17863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 17856,
											"end": 17862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17851,
											"end": 17854,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17792,
											"end": 17863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 17792,
											"end": 17863,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17792,
											"end": 17863,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 17792,
											"end": 17863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17785,
											"end": 17863,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17785,
											"end": 17863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17872,
											"end": 17924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 17917,
											"end": 17923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17912,
											"end": 17915,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17905,
											"end": 17909,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17898,
											"end": 17903,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17894,
											"end": 17910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17872,
											"end": 17924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 17872,
											"end": 17924,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17872,
											"end": 17924,
											"name": "tag",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 17872,
											"end": 17924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17949,
											"end": 17978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17949,
											"end": 17978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 17949,
											"end": 17978,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17949,
											"end": 17978,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 17949,
											"end": 17978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17944,
											"end": 17947,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17940,
											"end": 17979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17933,
											"end": 17979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17933,
											"end": 17979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17713,
											"end": 17985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17985,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17985,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17985,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17991,
											"end": 18304,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 17991,
											"end": 18304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18104,
											"end": 18108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18142,
											"end": 18144,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18131,
											"end": 18140,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18127,
											"end": 18145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18119,
											"end": 18145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18119,
											"end": 18145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18191,
											"end": 18200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18185,
											"end": 18189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18181,
											"end": 18201,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18177,
											"end": 18178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18166,
											"end": 18175,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18162,
											"end": 18179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18155,
											"end": 18202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18219,
											"end": 18297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 18292,
											"end": 18296,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18283,
											"end": 18289,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18219,
											"end": 18297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 18219,
											"end": 18297,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18219,
											"end": 18297,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 18219,
											"end": 18297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18211,
											"end": 18297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18211,
											"end": 18297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17991,
											"end": 18304,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17991,
											"end": 18304,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17991,
											"end": 18304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17991,
											"end": 18304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17991,
											"end": 18304,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_blockTimestamp()": "c63aa3e7",
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"calculateWeek(uint256)": "b5d9df83",
							"changeAirdropPercentage(uint256)": "d5dbdf1b",
							"changePenaltyFee(uint256)": "8c63f97f",
							"claimAirdrop(address)": "65f8c6c5",
							"getVoters(address)": "2d15cc04",
							"getVotingResult()": "671d2b75",
							"hasStake()": "10486b6a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"retractVote()": "070c8b74",
							"stake(address,uint256,uint256)": "0c51b88f",
							"stakingPenaltyRate()": "cb79c2e1",
							"startAirdrop()": "d2a569c3",
							"startVoting()": "1ec6b60a",
							"stopVoting()": "fab2f86b",
							"token_address()": "8c8e8fee",
							"totalVoters()": "5f5300ff",
							"transferOwnership(address)": "f2fde38b",
							"vote()": "632a9a52",
							"votedUsers(uint256)": "a143a5f2",
							"voters(address)": "a3ec138d",
							"withdrawStake()": "bed9d861"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Airdrop__claimableOnceAWeek\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Function__notAVoter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Function__votingNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__airdropExceed20Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__cannotStakeNothing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__noStakingFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__penaltyExceed3Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__userIsStaker\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking_noStakingPackageFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__alreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__notEnoughVoters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__notYetVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__votingIsRunning\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_blockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"calculateWeek\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changePenaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVoters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableAirdrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestClaimDrop\",\"type\":\"uint256\"}],\"internalType\":\"struct Staking.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Staking.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retractVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakePeriod\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"votingRight\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"Airdrop__claimableOnceAWeek()\":[{\"notice\":\"Error handling message for Airdrop functions\"}],\"Staking__cannotStakeNothing()\":[{\"notice\":\"Error handling message for Staking functions\"}],\"Voting__votingIsRunning()\":[{\"notice\":\"Error handling message for Voting functions\"}]},\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{\"stake(address,uint256,uint256)\":{\"notice\":\"_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID\"},\"withdrawStake()\":{\"notice\":\"withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the account Will also _calculateStakeReward and reset timer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakable-2.0.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Stakable-2.0.sol\":{\"keccak256\":\"0x5109fa58fad29fdc0f670e8ecdd4e721eccff5e80695135da35572e093b0f315\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7a8d0ec8e1ae16a183f38ce969adf746fb5a847282bbf271809bd9a0c6fec291\",\"dweb:/ipfs/QmYq41nAogi4ggpisnj3sAVSXbcscBbbL6hmfPyz2wxM1U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 115,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 815,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "stakingPackage",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 817,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "stakingPenaltyRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 819,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "airdropRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 821,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "airdropSince",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 823,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "_votingStatus",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 825,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "_votingId",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 827,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "totalVoters",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 832,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "voters",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(Voter)811_storage)"
							},
							{
								"astId": 836,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "votedUsers",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 838,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "token_address",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 903,
								"contract": "contracts/Stakable-2.0.sol:Staking",
								"label": "stakeholders",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_struct(Stake)889_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Stake)889_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Staking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)889_storage"
							},
							"t_mapping(t_address,t_struct(Voter)811_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Staking.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)811_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)889_storage": {
								"encoding": "inplace",
								"label": "struct Staking.Stake",
								"members": [
									{
										"astId": 876,
										"contract": "contracts/Stakable-2.0.sol:Staking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 878,
										"contract": "contracts/Stakable-2.0.sol:Staking",
										"label": "since",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 880,
										"contract": "contracts/Stakable-2.0.sol:Staking",
										"label": "rewardAPY",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 882,
										"contract": "contracts/Stakable-2.0.sol:Staking",
										"label": "releaseTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 884,
										"contract": "contracts/Stakable-2.0.sol:Staking",
										"label": "claimable",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 886,
										"contract": "contracts/Stakable-2.0.sol:Staking",
										"label": "claimableAirdrop",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 888,
										"contract": "contracts/Stakable-2.0.sol:Staking",
										"label": "latestClaimDrop",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(Voter)811_storage": {
								"encoding": "inplace",
								"label": "struct Staking.Voter",
								"members": [
									{
										"astId": 806,
										"contract": "contracts/Stakable-2.0.sol:Staking",
										"label": "votingRight",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 810,
										"contract": "contracts/Stakable-2.0.sol:Staking",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_bool)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"Airdrop__claimableOnceAWeek()": [
								{
									"notice": "Error handling message for Airdrop functions"
								}
							],
							"Staking__cannotStakeNothing()": [
								{
									"notice": "Error handling message for Staking functions"
								}
							],
							"Voting__votingIsRunning()": [
								{
									"notice": "Error handling message for Voting functions"
								}
							]
						},
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {
							"stake(address,uint256,uint256)": {
								"notice": "_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID"
							},
							"withdrawStake()": {
								"notice": "withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the account Will also _calculateStakeReward and reset timer"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							763
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 764,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 763,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								763
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 110,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 144,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 128,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 134,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 143,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							222
						]
					},
					"id": 223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 222,
							"linearizedBaseContracts": [
								222
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:2"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:2"
									},
									"scope": 222,
									"src": "296:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:2"
									},
									"scope": 222,
									"src": "434:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "733:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 222,
									"src": "715:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 222,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 222,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2199:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2241:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2280:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:2"
									},
									"scope": 222,
									"src": "2168:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 212,
									"name": "Transfer",
									"nameLocation": "2461:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2492:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:2"
									},
									"src": "2455:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 221,
									"name": "Approval",
									"nameLocation": "2692:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2701:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2724:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:2"
									},
									"src": "2686:78:2"
								}
							],
							"scope": 223,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							741
						],
						"IERC20": [
							222
						],
						"SafeERC20": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 223,
							"src": "125:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 226,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 742,
							"src": "149:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 227,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 230,
									"libraryName": {
										"id": 228,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 741,
										"src": "675:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:3",
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "803:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "833:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 244,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "863:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 171,
																		"src": "863:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 247,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "888:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "892:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 242,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 240,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "813:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "813:86:3"
											}
										]
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "732:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 231,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "732:6:3"
													},
													"referencedDeclaration": 222,
													"src": "732:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "754:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "774:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:3"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:3"
									},
									"scope": 446,
									"src": "701:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "1040:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 266,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "1070:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 269,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "1100:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 203,
																		"src": "1100:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 272,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "1129:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 273,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "1135:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "1139:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 267,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 265,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1050:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:3"
											}
										]
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "947:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 254,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "947:6:3"
													},
													"referencedDeclaration": 222,
													"src": "947:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "969:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "991:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1011:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:3"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:3"
									},
									"scope": 446,
									"src": "912:241:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1519:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 291,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1768:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 294,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 299,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$446",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$446",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 297,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 300,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 301,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 285,
																					"src": "1815:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 283,
																					"src": "1784:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$222",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 181,
																				"src": "1784:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 311,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1939:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 314,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1969:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 191,
																		"src": "1969:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 317,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "1993:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 318,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "2002:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 312,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 310,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1919:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:3"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1443:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 281,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "1443:6:3"
													},
													"referencedDeclaration": 222,
													"src": "1443:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1465:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:3"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:3"
									},
									"scope": 446,
									"src": "1413:603:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2138:194:3",
										"statements": [
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "2148:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 339,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$446",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$446",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 337,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 341,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "2202:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 335,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "2171:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$222",
																	"typeString": "contract IERC20"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "2171:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 343,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2213:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2248:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 350,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 326,
																			"src": "2278:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 191,
																		"src": "2278:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 353,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "2302:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 354,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2311:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 348,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 346,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2228:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:3"
											}
										]
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2062:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 324,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "2062:6:3"
													},
													"referencedDeclaration": 222,
													"src": "2062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2084:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2109:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:3"
									},
									"scope": 446,
									"src": "2022:310:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "2454:370:3",
										"statements": [
											{
												"id": 405,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:3",
												"statements": [
													{
														"assignments": [
															370
														],
														"declarations": [
															{
																"constant": false,
																"id": 370,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 405,
																"src": "2488:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 369,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 379,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 375,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$446",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$446",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 373,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "2542:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 371,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "2511:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "2511:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "2572:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 382,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "2588:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 380,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 386,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:3"
													},
													{
														"assignments": [
															388
														],
														"declarations": [
															{
																"constant": false,
																"id": 388,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 405,
																"src": "2653:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 387,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 392,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2676:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "2691:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 394,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "2730:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 397,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 362,
																					"src": "2760:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$222",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 191,
																				"src": "2760:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 400,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 364,
																			"src": "2784:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 401,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "2793:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 395,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 393,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "2710:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 404,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:3"
													}
												]
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2378:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 361,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 360,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "2378:6:3"
													},
													"referencedDeclaration": 222,
													"src": "2378:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2400:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2425:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:3"
									},
									"scope": 446,
									"src": "2338:486:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "3277:636:3",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "3626:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 416,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"arguments": [
														{
															"id": 423,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3680:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3660:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 535,
														"src": "3652:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 427,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3735:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 443,
												"nodeType": "IfStatement",
												"src": "3731:176:3",
												"trueBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "3758:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 434,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 417,
																				"src": "3830:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 436,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 435,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 437,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 432,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 431,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 441,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3236:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 409,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "3236:6:3"
													},
													"referencedDeclaration": 222,
													"src": "3236:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3250:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:3"
									},
									"scope": 446,
									"src": "3207:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 447,
							"src": "645:3270:3",
							"usedErrors": []
						}
					],
					"src": "100:3816:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							741
						]
					},
					"id": 742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 449,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 741,
							"linearizedBaseContracts": [
								741
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 457,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 456,
												"id": 462,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 741,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 475,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		],
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 473,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 478,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													484,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 483,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 491,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 485,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 487,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 741,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 508,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															535
														],
														"referencedDeclaration": 535,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 507,
												"id": 513,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 741,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 531,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 527,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															555,
															605
														],
														"referencedDeclaration": 605,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 526,
												"id": 533,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 741,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 548,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 550,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 547,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															555,
															605
														],
														"referencedDeclaration": 605,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 546,
												"id": 553,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 741,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 572,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		],
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 570,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 575,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 582,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 581,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													588,
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 587,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 589,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 591,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 593,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 600,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 598,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 603,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 741,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 615,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															622,
															657
														],
														"referencedDeclaration": 657,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 614,
												"id": 620,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 741,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 636,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 635,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													642,
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 641,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 645,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 652,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 653,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 650,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 633,
												"id": 655,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 741,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 667,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															674,
															709
														],
														"referencedDeclaration": 709,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 666,
												"id": 672,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 741,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 688,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 687,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													694,
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 693,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 695,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"initialValue": {
													"arguments": [
														{
															"id": 699,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 697,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 704,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 705,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 702,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 685,
												"id": 707,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 741,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "7721:532:4",
										"statements": [
											{
												"condition": {
													"id": 721,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 712,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "7792:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 725,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 735,
																"nodeType": "Block",
																"src": "8184:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 732,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 716,
																					"src": "8209:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 731,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 734,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:4"
																	}
																]
															},
															"id": 736,
															"nodeType": "IfStatement",
															"src": "7872:365:4",
															"trueBody": {
																"id": 730,
																"nodeType": "Block",
																"src": "7899:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 714,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 714,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 729,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "7731:516:4",
												"trueBody": {
													"id": 724,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 722,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 720,
															"id": 723,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 741,
									"src": "7561:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 742,
							"src": "194:8061:4",
							"usedErrors": []
						}
					],
					"src": "101:8155:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							763
						]
					},
					"id": 764,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 744,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 763,
							"linearizedBaseContracts": [
								763
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 749,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 748,
												"id": 751,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 763,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 758,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 757,
												"id": 760,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 763,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 764,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"contracts/Stakable-2.0.sol": {
				"ast": {
					"absolutePath": "contracts/Stakable-2.0.sol",
					"exportedSymbols": {
						"Address": [
							741
						],
						"Airdrop__claimableOnceAWeek": [
							791
						],
						"Context": [
							763
						],
						"Function__notAVoter": [
							773
						],
						"Function__notAuthorized": [
							771
						],
						"Function__votingNotAvailable": [
							775
						],
						"IERC20": [
							222
						],
						"Ownable": [
							104
						],
						"ReentrancyGuard": [
							144
						],
						"SafeERC20": [
							446
						],
						"Staking": [
							1699
						],
						"Staking__airdropExceed20Percent": [
							784
						],
						"Staking__cannotStakeNothing": [
							778
						],
						"Staking__noStakingFound": [
							786
						],
						"Staking__penaltyExceed3Percent": [
							782
						],
						"Staking__userIsStaker": [
							780
						],
						"Staking_noStakingPackageFound": [
							788
						],
						"Voting__alreadyVoted": [
							796
						],
						"Voting__notEnoughVoters": [
							800
						],
						"Voting__notYetVoted": [
							798
						],
						"Voting__votingIsRunning": [
							794
						]
					},
					"id": 1700,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 447,
							"src": "64:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 145,
							"src": "130:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 105,
							"src": "193:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 769,
								"nodeType": "StructuredDocumentation",
								"src": "247:54:6",
								"text": " @notice Error handling message for Modifier"
							},
							"id": 771,
							"name": "Function__notAuthorized",
							"nameLocation": "308:23:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 770,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "331:2:6"
							},
							"src": "302:32:6"
						},
						{
							"id": 773,
							"name": "Function__notAVoter",
							"nameLocation": "341:19:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 772,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "360:2:6"
							},
							"src": "335:28:6"
						},
						{
							"id": 775,
							"name": "Function__votingNotAvailable",
							"nameLocation": "370:28:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 774,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "398:2:6"
							},
							"src": "364:37:6"
						},
						{
							"documentation": {
								"id": 776,
								"nodeType": "StructuredDocumentation",
								"src": "403:63:6",
								"text": " @notice Error handling message for Staking functions"
							},
							"id": 778,
							"name": "Staking__cannotStakeNothing",
							"nameLocation": "473:27:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 777,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "500:2:6"
							},
							"src": "467:36:6"
						},
						{
							"id": 780,
							"name": "Staking__userIsStaker",
							"nameLocation": "510:21:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 779,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "531:2:6"
							},
							"src": "504:30:6"
						},
						{
							"id": 782,
							"name": "Staking__penaltyExceed3Percent",
							"nameLocation": "541:30:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 781,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "571:2:6"
							},
							"src": "535:39:6"
						},
						{
							"id": 784,
							"name": "Staking__airdropExceed20Percent",
							"nameLocation": "581:31:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 783,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "612:2:6"
							},
							"src": "575:40:6"
						},
						{
							"id": 786,
							"name": "Staking__noStakingFound",
							"nameLocation": "622:23:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 785,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "645:2:6"
							},
							"src": "616:32:6"
						},
						{
							"id": 788,
							"name": "Staking_noStakingPackageFound",
							"nameLocation": "655:29:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 787,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "684:2:6"
							},
							"src": "649:38:6"
						},
						{
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "689:63:6",
								"text": " @notice Error handling message for Airdrop functions"
							},
							"id": 791,
							"name": "Airdrop__claimableOnceAWeek",
							"nameLocation": "759:27:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 790,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "786:2:6"
							},
							"src": "753:36:6"
						},
						{
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "791:62:6",
								"text": " @notice Error handling message for Voting functions"
							},
							"id": 794,
							"name": "Voting__votingIsRunning",
							"nameLocation": "860:23:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 793,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "883:2:6"
							},
							"src": "854:32:6"
						},
						{
							"id": 796,
							"name": "Voting__alreadyVoted",
							"nameLocation": "893:20:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 795,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "913:2:6"
							},
							"src": "887:29:6"
						},
						{
							"id": 798,
							"name": "Voting__notYetVoted",
							"nameLocation": "923:19:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 797,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "942:2:6"
							},
							"src": "917:28:6"
						},
						{
							"id": 800,
							"name": "Voting__notEnoughVoters",
							"nameLocation": "952:23:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 799,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "975:2:6"
							},
							"src": "946:32:6"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 801,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 144,
										"src": "1000:15:6"
									},
									"id": 802,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:15:6"
								},
								{
									"baseName": {
										"id": 803,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "1017:7:6"
									},
									"id": 804,
									"nodeType": "InheritanceSpecifier",
									"src": "1017:7:6"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1699,
							"linearizedBaseContracts": [
								1699,
								104,
								763,
								144
							],
							"name": "Staking",
							"nameLocation": "989:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Staking.Voter",
									"id": 811,
									"members": [
										{
											"constant": false,
											"id": 806,
											"mutability": "mutable",
											"name": "votingRight",
											"nameLocation": "1224:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 811,
											"src": "1219:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 805,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1219:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 810,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "1270:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 811,
											"src": "1245:30:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 809,
												"keyType": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1245:24:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueType": {
													"id": 808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1264:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "1203:5:6",
									"nodeType": "StructDefinition",
									"scope": 1699,
									"src": "1196:86:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 815,
									"mutability": "mutable",
									"name": "stakingPackage",
									"nameLocation": "1325:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "1288:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 814,
										"keyType": {
											"id": 812,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1296:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1288:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 813,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1307:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "cb79c2e1",
									"id": 817,
									"mutability": "mutable",
									"name": "stakingPenaltyRate",
									"nameLocation": "1361:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "1346:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 816,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1346:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8891cf0d",
									"id": 819,
									"mutability": "mutable",
									"name": "airdropRate",
									"nameLocation": "1400:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "1385:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 818,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1385:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b87da76d",
									"id": 821,
									"mutability": "mutable",
									"name": "airdropSince",
									"nameLocation": "1432:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "1417:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1417:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 823,
									"mutability": "mutable",
									"name": "_votingStatus",
									"nameLocation": "1465:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "1451:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 822,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1451:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 825,
									"mutability": "mutable",
									"name": "_votingId",
									"nameLocation": "1501:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "1484:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1484:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5f5300ff",
									"id": 827,
									"mutability": "mutable",
									"name": "totalVoters",
									"nameLocation": "1531:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "1516:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 826,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1516:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 832,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "1581:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "1548:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
										"typeString": "mapping(address => struct Staking.Voter)"
									},
									"typeName": {
										"id": 831,
										"keyType": {
											"id": 828,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1556:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1548:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
											"typeString": "mapping(address => struct Staking.Voter)"
										},
										"valueType": {
											"id": 830,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 829,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 811,
												"src": "1567:5:6"
											},
											"referencedDeclaration": 811,
											"src": "1567:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$811_storage_ptr",
												"typeString": "struct Staking.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a143a5f2",
									"id": 836,
									"mutability": "mutable",
									"name": "votedUsers",
									"nameLocation": "1628:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "1593:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 835,
										"keyType": {
											"id": 833,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1601:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1593:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 834,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1612:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c8e8fee",
									"id": 838,
									"mutability": "mutable",
									"name": "token_address",
									"nameLocation": "1660:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "1645:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 837,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1645:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "1707:274:6",
										"statements": [
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "1779:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1800:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1779:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "1779:23:6"
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 847,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "1812:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3830",
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1826:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"src": "1812:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "1812:16:6"
											},
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 851,
														"name": "token_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "1839:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 852,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1855:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1839:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "1839:21:6"
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 855,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1871:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 857,
														"indexExpression": {
															"hexValue": "3930",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1886:7:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															"value": "90"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1871:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36",
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1897:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "1871:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "1871:27:6"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 861,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1908:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 863,
														"indexExpression": {
															"hexValue": "313830",
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1923:8:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15552000_by_1",
																"typeString": "int_const 15552000"
															},
															"value": "180"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1908:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1935:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "1908:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "1908:28:6"
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1946:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 869,
														"indexExpression": {
															"hexValue": "333635",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1961:8:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1946:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "38",
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1973:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "1946:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "1946:28:6"
											}
										]
									},
									"id": 874,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1700:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1692:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:15:6"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:0:6"
									},
									"scope": 1699,
									"src": "1680:301:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Staking.Stake",
									"id": 889,
									"members": [
										{
											"constant": false,
											"id": 876,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2245:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2237:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 875,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2237:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 878,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "2269:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2261:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 877,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2261:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 880,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "2292:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2284:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 879,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2284:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 882,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "2319:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2311:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 881,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2311:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 884,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "2447:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2439:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 883,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2439:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 886,
											"mutability": "mutable",
											"name": "claimableAirdrop",
											"nameLocation": "2474:16:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2466:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 885,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2466:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 888,
											"mutability": "mutable",
											"name": "latestClaimDrop",
											"nameLocation": "2508:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2500:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 887,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2500:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "2221:5:6",
									"nodeType": "StructDefinition",
									"scope": 1699,
									"src": "2214:316:6",
									"visibility": "public"
								},
								{
									"canonicalName": "Staking.StakingSummary",
									"id": 897,
									"members": [
										{
											"constant": false,
											"id": 891,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "2707:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 897,
											"src": "2699:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 890,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2699:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 893,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "2737:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 897,
											"src": "2729:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 892,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2729:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 896,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "2760:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 897,
											"src": "2754:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
												"typeString": "struct Staking.Stake"
											},
											"typeName": {
												"id": 895,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 894,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 889,
													"src": "2754:5:6"
												},
												"referencedDeclaration": 889,
												"src": "2754:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
													"typeString": "struct Staking.Stake"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "2674:14:6",
									"nodeType": "StructDefinition",
									"scope": 1699,
									"src": "2667:105:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "2778:111:6",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 903,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "2929:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1699,
									"src": "2894:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
										"typeString": "mapping(address => struct Staking.Stake)"
									},
									"typeName": {
										"id": 902,
										"keyType": {
											"id": 899,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2902:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2894:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
											"typeString": "mapping(address => struct Staking.Stake)"
										},
										"valueType": {
											"id": 901,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 900,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "2913:5:6"
											},
											"referencedDeclaration": 889,
											"src": "2913:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
												"typeString": "struct Staking.Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "2948:124:6",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 914,
									"name": "Staked",
									"nameLocation": "3083:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3115:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3099:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3137:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3129:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3129:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3161:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3153:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "3188:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3180:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3089:116:6"
									},
									"src": "3077:129:6"
								},
								{
									"anonymous": false,
									"id": 918,
									"name": "PenaltyChanged",
									"nameLocation": "3218:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3241:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3233:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:6"
									},
									"src": "3212:37:6"
								},
								{
									"anonymous": false,
									"id": 922,
									"name": "AirdropChanged",
									"nameLocation": "3260:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3283:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "3275:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3275:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3274:16:6"
									},
									"src": "3254:37:6"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "3437:197:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 925,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "3534:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																	"typeString": "mapping(address => struct Staking.Voter storage ref)"
																}
															},
															"id": 928,
															"indexExpression": {
																"expression": {
																	"id": 926,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3541:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3541:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3534:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$811_storage",
																"typeString": "struct Staking.Voter storage ref"
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 806,
														"src": "3534:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3568:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3534:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 936,
												"nodeType": "IfStatement",
												"src": "3530:98:6",
												"trueBody": {
													"id": 935,
													"nodeType": "Block",
													"src": "3575:53:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 932,
																	"name": "Function__notAVoter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "3596:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3596:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 934,
															"nodeType": "RevertStatement",
															"src": "3589:28:6"
														}
													]
												}
											}
										]
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isVoter",
									"nameLocation": "3412:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3420:2:6"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3437:0:6"
									},
									"scope": 1699,
									"src": "3403:231:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "3659:38:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 940,
														"name": "_isVoter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "3669:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3669:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "3669:10:6"
											},
											{
												"id": 943,
												"nodeType": "PlaceholderStatement",
												"src": "3689:1:6"
											}
										]
									},
									"id": 945,
									"name": "isVoter",
									"nameLocation": "3649:7:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3656:2:6"
									},
									"src": "3640:57:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "3747:160:6",
										"statements": [
											{
												"condition": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3823:14:6",
													"subExpression": {
														"id": 948,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "3824:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 954,
												"nodeType": "IfStatement",
												"src": "3819:82:6",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "3839:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 950,
																	"name": "Function__votingNotAvailable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "3860:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3860:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 952,
															"nodeType": "RevertStatement",
															"src": "3853:37:6"
														}
													]
												}
											}
										]
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkVotingStatus",
									"nameLocation": "3712:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:6"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3747:0:6"
									},
									"scope": 1699,
									"src": "3703:204:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "3941:48:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 958,
														"name": "_checkVotingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "3951:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "3951:20:6"
											},
											{
												"id": 961,
												"nodeType": "PlaceholderStatement",
												"src": "3981:1:6"
											}
										]
									},
									"id": 963,
									"name": "votingStatusTrue",
									"nameLocation": "3922:16:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3938:2:6"
									},
									"src": "3913:76:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "4434:1299:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "4558:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4568:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4558:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "4554:78:6",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "4571:61:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 980,
																	"name": "Staking__cannotStakeNothing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "4592:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4592:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "4585:36:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 985,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "4717:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
																	"typeString": "mapping(address => struct Staking.Stake storage ref)"
																}
															},
															"id": 987,
															"indexExpression": {
																"id": 986,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "4730:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4717:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_storage",
																"typeString": "struct Staking.Stake storage ref"
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "4717:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4746:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4717:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "4713:91:6",
												"trueBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "4749:55:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 991,
																	"name": "Staking__userIsStaker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "4770:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4770:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 993,
															"nodeType": "RevertStatement",
															"src": "4763:30:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 996,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "4818:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 998,
														"indexExpression": {
															"id": 997,
															"name": "stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "4833:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4818:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4849:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4818:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "4814:101:6",
												"trueBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "4852:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1001,
																	"name": "Staking_noStakingPackageFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "4873:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4873:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1003,
															"nodeType": "RevertStatement",
															"src": "4866:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1006,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "4925:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4940:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4925:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "4925:16:6"
											},
											{
												"expression": {
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1010,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "4951:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																	"typeString": "mapping(address => struct Staking.Voter storage ref)"
																}
															},
															"id": 1012,
															"indexExpression": {
																"id": 1011,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "4958:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4951:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$811_storage",
																"typeString": "struct Staking.Voter storage ref"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 806,
														"src": "4951:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4978:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4951:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "4951:31:6"
											},
											{
												"assignments": [
													1018
												],
												"declarations": [
													{
														"constant": false,
														"id": 1018,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "5088:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1066,
														"src": "5080:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1017,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5080:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"expression": {
														"id": 1019,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "5100:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "5100:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5080:35:6"
											},
											{
												"expression": {
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1022,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "5244:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
																"typeString": "mapping(address => struct Staking.Stake storage ref)"
															}
														},
														"id": 1024,
														"indexExpression": {
															"id": 1023,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "5257:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5244:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_storage",
															"typeString": "struct Staking.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1026,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "5284:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1027,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "5304:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"id": 1028,
																	"name": "stakingPackage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "5327:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1030,
																"indexExpression": {
																	"id": 1029,
																	"name": "stakePeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "5342:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5327:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1031,
																			"name": "stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "5369:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1032,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1018,
																			"src": "5383:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5369:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1034,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5368:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5407:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5422:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5437:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1025,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$889_storage_ptr_$",
																"typeString": "type(struct Staking.Stake storage pointer)"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5265:183:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
															"typeString": "struct Staking.Stake memory"
														}
													},
													"src": "5244:204:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$889_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "5244:204:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1045,
																	"name": "token_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "5506:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1044,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "5499:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5499:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 1047,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5534:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5534:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1051,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5566:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$1699",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$1699",
																		"typeString": "contract Staking"
																	}
																],
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5558:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1049,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5558:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5558:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "5585:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1041,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "5459:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "5459:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5459:142:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "5459:142:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1057,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "5675:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "5681:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1059,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "5689:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1060,
																		"name": "stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "5701:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1061,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "5715:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5701:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1063,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5700:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1056,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "5668:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5668:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "EmitStatement",
												"src": "5663:63:6"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "4101:200:6",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"functionSelector": "0c51b88f",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 973,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 972,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "4411:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4411:12:6"
										},
										{
											"id": 975,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 974,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4424:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4424:9:6"
										}
									],
									"name": "stake",
									"nameLocation": "4315:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4338:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4330:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4360:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4352:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "stakePeriod",
												"nameLocation": "4384:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4376:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4376:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4320:81:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4434:0:6"
									},
									"scope": 1699,
									"src": "4306:1427:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "5800:245:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1074,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "5888:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3330",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5897:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30_by_1",
															"typeString": "int_const 30"
														},
														"value": "30"
													},
													"src": "5888:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "IfStatement",
												"src": "5884:81:6",
												"trueBody": {
													"id": 1080,
													"nodeType": "Block",
													"src": "5901:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1077,
																	"name": "Staking__penaltyExceed3Percent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "5922:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5922:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1079,
															"nodeType": "RevertStatement",
															"src": "5915:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1082,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "5974:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1083,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "5995:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5974:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "5974:27:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1087,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "6031:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1086,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "6016:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6016:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "EmitStatement",
												"src": "6011:27:6"
											}
										]
									},
									"functionSelector": "8c63f97f",
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5790:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5790:9:6"
										}
									],
									"name": "changePenaltyFee",
									"nameLocation": "5748:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5773:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "5765:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5764:16:6"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5800:0:6"
									},
									"scope": 1699,
									"src": "5739:306:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "6161:121:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1098,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "6232:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "6232:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1100,
																				"name": "since",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "6250:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6232:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1102,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6231:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653234",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6259:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000000000"
																	},
																	"value": "1e24"
																},
																"src": "6231:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1105,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6230:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6267:8:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "6230:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1097,
												"id": 1108,
												"nodeType": "Return",
												"src": "6223:52:6"
											}
										]
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingDuration",
									"nameLocation": "6060:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "since",
												"nameLocation": "6094:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "6086:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6085:15:6"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "6148:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6148:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6147:9:6"
									},
									"scope": 1699,
									"src": "6051:231:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "6404:321:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1118,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "6418:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "6418:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6439:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6418:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1125,
												"nodeType": "IfStatement",
												"src": "6414:61:6",
												"trueBody": {
													"id": 1124,
													"nodeType": "Block",
													"src": "6442:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6463:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1117,
															"id": 1123,
															"nodeType": "Return",
															"src": "6456:8:6"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1126,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "6592:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 876,
																		"src": "6592:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 1128,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "6628:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 880,
																		"src": "6628:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6592:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1132,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1113,
																				"src": "6693:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																					"typeString": "struct Staking.Stake memory"
																				}
																			},
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 878,
																			"src": "6693:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1131,
																		"name": "_calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "6667:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6667:43:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6592:118:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1136,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6591:120:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6714:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "6591:127:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1117,
												"id": 1139,
												"nodeType": "Return",
												"src": "6572:146:6"
											}
										]
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakeReward",
									"nameLocation": "6297:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "6332:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "6319:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
													"typeString": "struct Staking.Stake"
												},
												"typeName": {
													"id": 1112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1111,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 889,
														"src": "6319:5:6"
													},
													"referencedDeclaration": 889,
													"src": "6319:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
														"typeString": "struct Staking.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6318:25:6"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "6391:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6391:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6390:9:6"
									},
									"scope": 1699,
									"src": "6288:437:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "6870:220:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "6884:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6894:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6884:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1160,
												"nodeType": "IfStatement",
												"src": "6880:55:6",
												"trueBody": {
													"id": 1159,
													"nodeType": "Block",
													"src": "6897:38:6",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6919:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6922:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6918:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1151,
															"id": 1158,
															"nodeType": "Return",
															"src": "6911:13:6"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1161,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "6965:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1162,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1143,
																						"src": "6976:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1163,
																						"name": "stakingPenaltyRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 817,
																						"src": "6985:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6976:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1165,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6975:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7007:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "6975:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1168,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6974:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6965:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1170,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "7026:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1173,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1171,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1145,
																						"src": "7037:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1172,
																						"name": "stakingPenaltyRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 817,
																						"src": "7046:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7037:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1174,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7036:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7068:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "7036:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1177,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7035:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7026:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1179,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6951:132:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1180,
												"nodeType": "Return",
												"src": "6944:139:6"
											}
										]
									},
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingWithPenalty",
									"nameLocation": "6740:28:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6777:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "6769:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6769:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6793:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "6785:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6785:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6768:32:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "6848:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6848:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "6857:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6857:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6847:18:6"
									},
									"scope": 1699,
									"src": "6731:359:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "7593:937:6",
										"statements": [
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "7724:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1268,
														"src": "7711:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
															"typeString": "struct Staking.Stake"
														},
														"typeName": {
															"id": 1189,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1188,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 889,
																"src": "7711:5:6"
															},
															"referencedDeclaration": 889,
															"src": "7711:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																"typeString": "struct Staking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1195,
												"initialValue": {
													"baseExpression": {
														"id": 1191,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "7737:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
															"typeString": "mapping(address => struct Staking.Stake storage ref)"
														}
													},
													"id": 1194,
													"indexExpression": {
														"expression": {
															"id": 1192,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7750:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7750:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7737:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$889_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7711:50:6"
											},
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7779:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1268,
														"src": "7771:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7771:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "7810:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														],
														"id": 1198,
														"name": "_calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "7788:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$889_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Staking.Stake memory) view returns (uint256)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7788:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7771:50:6"
											},
											{
												"expression": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7832:31:6",
													"subExpression": {
														"baseExpression": {
															"id": 1202,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "7839:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
																"typeString": "mapping(address => struct Staking.Stake storage ref)"
															}
														},
														"id": 1205,
														"indexExpression": {
															"expression": {
																"id": 1203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7852:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7852:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7839:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_storage",
															"typeString": "struct Staking.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "7832:31:6"
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1208,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "7873:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7888:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7873:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "7873:16:6"
											},
											{
												"expression": {
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7899:42:6",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1212,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "7906:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																		"typeString": "mapping(address => struct Staking.Voter storage ref)"
																	}
																},
																"id": 1215,
																"indexExpression": {
																	"expression": {
																		"id": 1213,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7913:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7913:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7906:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$811_storage",
																	"typeString": "struct Staking.Voter storage ref"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 810,
															"src": "7906:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1218,
														"indexExpression": {
															"id": 1217,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "7931:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7906:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "7899:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1221,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "7956:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 882,
														"src": "7956:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1223,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7981:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7981:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7956:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1266,
													"nodeType": "Block",
													"src": "8350:174:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1255,
																				"name": "token_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 838,
																				"src": "8411:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1254,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "8404:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8404:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"expression": {
																			"id": 1257,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8443:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8443:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1259,
																						"name": "user_stake",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1190,
																						"src": "8472:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																							"typeString": "struct Staking.Stake memory"
																						}
																					},
																					"id": 1260,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 876,
																					"src": "8472:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1261,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1197,
																					"src": "8492:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8472:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1263,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8471:28:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1251,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "8364:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "8364:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8364:149:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1265,
															"nodeType": "ExpressionStatement",
															"src": "8364:149:6"
														}
													]
												},
												"id": 1267,
												"nodeType": "IfStatement",
												"src": "7952:572:6",
												"trueBody": {
													"id": 1250,
													"nodeType": "Block",
													"src": "7998:346:6",
													"statements": [
														{
															"assignments": [
																1227,
																1229
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1227,
																	"mutability": "mutable",
																	"name": "amount_reduced",
																	"nameLocation": "8038:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1250,
																	"src": "8030:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1226,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8030:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1229,
																	"mutability": "mutable",
																	"name": "reward_reduced",
																	"nameLocation": "8078:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1250,
																	"src": "8070:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1228,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8070:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1235,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1231,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1190,
																			"src": "8138:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 876,
																		"src": "8138:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1233,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "8157:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1230,
																	"name": "_calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "8109:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8109:55:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8012:152:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1240,
																				"name": "token_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 838,
																				"src": "8226:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1239,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "8219:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8219:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"expression": {
																			"id": 1242,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8258:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8258:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1244,
																					"name": "amount_reduced",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1227,
																					"src": "8287:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1245,
																					"name": "reward_reduced",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1229,
																					"src": "8304:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8287:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1247,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8286:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1236,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "8179:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "8179:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8179:154:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1249,
															"nodeType": "ExpressionStatement",
															"src": "8179:154:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "7096:335:6",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the account\n Will also _calculateStakeReward and reset timer"
									},
									"functionSelector": "bed9d861",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1185,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "7580:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7580:12:6"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "7555:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7568:2:6"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7593:0:6"
									},
									"scope": 1699,
									"src": "7546:984:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "8602:958:6",
										"statements": [
											{
												"assignments": [
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "8625:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1385,
														"src": "8612:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
															"typeString": "struct Staking.Stake"
														},
														"typeName": {
															"id": 1276,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1275,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 889,
																"src": "8612:5:6"
															},
															"referencedDeclaration": 889,
															"src": "8612:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																"typeString": "struct Staking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"baseExpression": {
														"id": 1278,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "8638:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
															"typeString": "mapping(address => struct Staking.Stake storage ref)"
														}
													},
													"id": 1281,
													"indexExpression": {
														"expression": {
															"id": 1279,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8651:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8651:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8638:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$889_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8612:50:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1283,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "8737:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "8737:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8758:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8737:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"nodeType": "IfStatement",
												"src": "8733:85:6",
												"trueBody": {
													"id": 1290,
													"nodeType": "Block",
													"src": "8761:57:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1287,
																	"name": "Staking__noStakingFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "8782:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8782:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1289,
															"nodeType": "RevertStatement",
															"src": "8775:32:6"
														}
													]
												}
											},
											{
												"assignments": [
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "8849:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1385,
														"src": "8827:29:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
															"typeString": "struct Staking.StakingSummary"
														},
														"typeName": {
															"id": 1293,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1292,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 897,
																"src": "8827:14:6"
															},
															"referencedDeclaration": 897,
															"src": "8827:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$897_storage_ptr",
																"typeString": "struct Staking.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8874:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8877:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1298,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "8880:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														],
														"id": 1295,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "8859:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$897_storage_ptr_$",
															"typeString": "type(struct Staking.StakingSummary storage pointer)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8859:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
														"typeString": "struct Staking.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8827:64:6"
											},
											{
												"assignments": [
													1302
												],
												"declarations": [
													{
														"constant": false,
														"id": 1302,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "8910:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1385,
														"src": "8902:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1301,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8902:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"initialValue": {
													"arguments": [
														{
															"id": 1304,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "8941:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														],
														"id": 1303,
														"name": "_calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "8919:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$889_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Staking.Stake memory) view returns (uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8919:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8902:50:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1307,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "8967:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																	"typeString": "struct Staking.StakingSummary memory"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 896,
															"src": "8967:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 882,
														"src": "8967:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1310,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8995:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8995:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8967:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "IfStatement",
												"src": "8963:214:6",
												"trueBody": {
													"id": 1334,
													"nodeType": "Block",
													"src": "9012:165:6",
													"statements": [
														{
															"expression": {
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1313,
																		"name": "summary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "9026:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																			"typeString": "struct Staking.StakingSummary memory"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "penalty",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 893,
																	"src": "9026:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1319,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1316,
																									"name": "user_stake",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1277,
																									"src": "9062:10:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																										"typeString": "struct Staking.Stake memory"
																									}
																								},
																								"id": 1317,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 876,
																								"src": "9062:17:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1318,
																								"name": "stakingPenaltyRate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 817,
																								"src": "9082:18:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9062:38:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1320,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9061:40:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 1321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9104:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "9061:47:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1323,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9060:49:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1326,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1324,
																								"name": "reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1302,
																								"src": "9130:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1325,
																								"name": "stakingPenaltyRate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 817,
																								"src": "9139:18:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9130:27:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1327,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9129:29:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 1328,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9161:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "9129:36:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1330,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9128:38:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9060:106:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9026:140:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1333,
															"nodeType": "ExpressionStatement",
															"src": "9026:140:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1337,
																	"name": "user_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "9205:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																		"typeString": "struct Staking.Stake memory"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "latestClaimDrop",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 888,
																"src": "9205:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1336,
															"name": "calculateWeek",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "9191:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9191:41:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9235:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9191:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1366,
													"nodeType": "Block",
													"src": "9377:59:6",
													"statements": [
														{
															"expression": {
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1358,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "9391:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																				"typeString": "struct Staking.StakingSummary memory"
																			}
																		},
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 896,
																		"src": "9391:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 886,
																	"src": "9391:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9424:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9391:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1365,
															"nodeType": "ExpressionStatement",
															"src": "9391:34:6"
														}
													]
												},
												"id": 1367,
												"nodeType": "IfStatement",
												"src": "9187:249:6",
												"trueBody": {
													"id": 1357,
													"nodeType": "Block",
													"src": "9238:133:6",
													"statements": [
														{
															"assignments": [
																1343
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1343,
																	"mutability": "mutable",
																	"name": "airdrop",
																	"nameLocation": "9260:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1357,
																	"src": "9252:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1342,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9252:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1348,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1345,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1277,
																			"src": "9288:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 876,
																		"src": "9288:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1344,
																	"name": "_calculateAirdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "9270:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9270:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9252:54:6"
														},
														{
															"expression": {
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1349,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "9320:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																				"typeString": "struct Staking.StakingSummary memory"
																			}
																		},
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 896,
																		"src": "9320:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 886,
																	"src": "9320:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1354,
																	"name": "airdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1343,
																	"src": "9353:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9320:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1356,
															"nodeType": "ExpressionStatement",
															"src": "9320:40:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1368,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "9446:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																	"typeString": "struct Staking.StakingSummary memory"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 896,
															"src": "9446:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 884,
														"src": "9446:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1373,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "9472:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9446:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "9446:32:6"
											},
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1376,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "9488:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																"typeString": "struct Staking.StakingSummary memory"
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 891,
														"src": "9488:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1379,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "9511:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "9511:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9488:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "9488:40:6"
											},
											{
												"expression": {
													"id": 1383,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1294,
													"src": "9546:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
														"typeString": "struct Staking.StakingSummary memory"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1384,
												"nodeType": "Return",
												"src": "9539:14:6"
											}
										]
									},
									"functionSelector": "10486b6a",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "8545:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8553:2:6"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "8579:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
													"typeString": "struct Staking.StakingSummary"
												},
												"typeName": {
													"id": 1272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1271,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 897,
														"src": "8579:14:6"
													},
													"referencedDeclaration": 897,
													"src": "8579:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$897_storage_ptr",
														"typeString": "struct Staking.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8578:23:6"
									},
									"scope": 1699,
									"src": "8536:1024:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "9715:47:6",
										"statements": [
											{
												"expression": {
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1391,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "9725:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1392,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9740:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9740:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9725:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "9725:30:6"
											}
										]
									},
									"functionSelector": "d2a569c3",
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1389,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1388,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "9705:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9705:9:6"
										}
									],
									"name": "startAirdrop",
									"nameLocation": "9681:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9693:2:6"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9715:0:6"
									},
									"scope": 1699,
									"src": "9672:90:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "9836:166:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1404,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "9850:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "323030",
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9859:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "9850:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "9846:83:6",
												"trueBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "9864:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1407,
																	"name": "Staking__airdropExceed20Percent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "9885:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9885:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1409,
															"nodeType": "RevertStatement",
															"src": "9878:40:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1412,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "9938:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1413,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "9952:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9938:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "9938:20:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1417,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "9988:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1416,
														"name": "AirdropChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "9973:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9973:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "EmitStatement",
												"src": "9968:27:6"
											}
										]
									},
									"functionSelector": "d5dbdf1b",
									"id": 1421,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1402,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1401,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "9826:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9826:9:6"
										}
									],
									"name": "changeAirdropPercentage",
									"nameLocation": "9777:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9809:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "9801:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9801:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9800:16:6"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9836:0:6"
									},
									"scope": 1699,
									"src": "9768:234:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "10065:39:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1426,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "10082:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "10082:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1425,
												"id": 1428,
												"nodeType": "Return",
												"src": "10075:22:6"
											}
										]
									},
									"functionSelector": "c63aa3e7",
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_blockTimestamp",
									"nameLocation": "10017:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10032:2:6"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "10056:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10056:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10055:9:6"
									},
									"scope": 1699,
									"src": "10008:96:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "10182:62:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1437,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10200:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10200:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1439,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "10218:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10200:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1441,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10199:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "37",
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10231:6:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "10199:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1444,
												"nodeType": "Return",
												"src": "10192:45:6"
											}
										]
									},
									"functionSelector": "b5d9df83",
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateWeek",
									"nameLocation": "10119:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "10141:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "10133:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10133:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10132:19:6"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "10173:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10173:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10172:9:6"
									},
									"scope": 1699,
									"src": "10110:134:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "10358:71:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1453,
																				"name": "stakeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1448,
																				"src": "10377:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1454,
																				"name": "airdropRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 819,
																				"src": "10391:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10377:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1456,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10376:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10406:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "10376:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1459,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10375:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3532",
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10414:8:6",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31449600_by_1",
															"typeString": "int_const 31449600"
														},
														"value": "52"
													},
													"src": "10375:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1452,
												"id": 1462,
												"nodeType": "Return",
												"src": "10368:54:6"
											}
										]
									},
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAirdrop",
									"nameLocation": "10259:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "stakeAmount",
												"nameLocation": "10285:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "10277:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10277:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10276:21:6"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "10345:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10345:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10344:9:6"
									},
									"scope": 1699,
									"src": "10250:179:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "10480:548:6",
										"statements": [
											{
												"assignments": [
													1471
												],
												"declarations": [
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "10556:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1520,
														"src": "10542:20:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
															"typeString": "struct Staking.Stake"
														},
														"typeName": {
															"id": 1470,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1469,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 889,
																"src": "10542:5:6"
															},
															"referencedDeclaration": 889,
															"src": "10542:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																"typeString": "struct Staking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"initialValue": {
													"baseExpression": {
														"id": 1472,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "10565:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
															"typeString": "mapping(address => struct Staking.Stake storage ref)"
														}
													},
													"id": 1474,
													"indexExpression": {
														"id": 1473,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "10578:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10565:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$889_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10542:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1476,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "10598:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																"typeString": "struct Staking.Stake storage pointer"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "10598:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10614:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10598:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1519,
												"nodeType": "IfStatement",
												"src": "10594:428:6",
												"trueBody": {
													"id": 1518,
													"nodeType": "Block",
													"src": "10617:405:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1481,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1471,
																				"src": "10649:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																					"typeString": "struct Staking.Stake storage pointer"
																				}
																			},
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "latestClaimDrop",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 888,
																			"src": "10649:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1480,
																		"name": "calculateWeek",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "10635:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10635:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10676:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10635:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1490,
															"nodeType": "IfStatement",
															"src": "10631:117:6",
															"trueBody": {
																"id": 1489,
																"nodeType": "Block",
																"src": "10679:69:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1486,
																				"name": "Airdrop__claimableOnceAWeek",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 791,
																				"src": "10704:27:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10704:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1488,
																		"nodeType": "RevertStatement",
																		"src": "10697:36:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1491,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "10762:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																			"typeString": "struct Staking.Stake storage pointer"
																		}
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 886,
																	"src": "10762:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10788:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10762:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1496,
															"nodeType": "ExpressionStatement",
															"src": "10762:27:6"
														},
														{
															"expression": {
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1497,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "10803:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																			"typeString": "struct Staking.Stake storage pointer"
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "latestClaimDrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 888,
																	"src": "10803:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1500,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10828:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10828:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10803:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1503,
															"nodeType": "ExpressionStatement",
															"src": "10803:40:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1508,
																				"name": "token_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 838,
																				"src": "10905:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1507,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "10898:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10898:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"expression": {
																			"id": 1510,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10937:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10937:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1513,
																					"name": "staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1471,
																					"src": "10983:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																						"typeString": "struct Staking.Stake storage pointer"
																					}
																				},
																				"id": 1514,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 876,
																				"src": "10983:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1512,
																			"name": "_calculateAirdrop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "10965:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) view returns (uint256)"
																			}
																		},
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10965:32:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1504,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "10858:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "10858:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10858:153:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1517,
															"nodeType": "ExpressionStatement",
															"src": "10858:153:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "65f8c6c5",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimAirdrop",
									"nameLocation": "10444:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "10465:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "10457:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10457:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10456:14:6"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10480:0:6"
									},
									"scope": 1699,
									"src": "10435:593:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "11251:81:6",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1530,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "11269:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																		"typeString": "mapping(address => struct Staking.Voter storage ref)"
																	}
																},
																"id": 1532,
																"indexExpression": {
																	"id": 1531,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "11276:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11269:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$811_storage",
																	"typeString": "struct Staking.Voter storage ref"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "votingRight",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 806,
															"src": "11269:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1534,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "11295:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																			"typeString": "mapping(address => struct Staking.Voter storage ref)"
																		}
																	},
																	"id": 1536,
																	"indexExpression": {
																		"id": 1535,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "11302:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11295:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$811_storage",
																		"typeString": "struct Staking.Voter storage ref"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 810,
																"src": "11295:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 1539,
															"indexExpression": {
																"id": 1538,
																"name": "_votingId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "11314:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11295:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1540,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11268:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool)"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1541,
												"nodeType": "Return",
												"src": "11261:64:6"
											}
										]
									},
									"functionSelector": "2d15cc04",
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVoters",
									"nameLocation": "11192:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11210:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "11202:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11202:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11201:14:6"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "11239:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11239:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "11245:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11245:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11238:12:6"
									},
									"scope": 1699,
									"src": "11183:149:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "11453:155:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1550,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "11467:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11484:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11467:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1557,
												"nodeType": "IfStatement",
												"src": "11463:84:6",
												"trueBody": {
													"id": 1556,
													"nodeType": "Block",
													"src": "11490:57:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1553,
																	"name": "Voting__votingIsRunning",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "11511:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11511:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1555,
															"nodeType": "RevertStatement",
															"src": "11504:32:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1558,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "11557:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11573:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11557:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "11557:20:6"
											},
											{
												"expression": {
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1562,
														"name": "_votingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "11587:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11600:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11587:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "11587:14:6"
											}
										]
									},
									"functionSelector": "1ec6b60a",
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1546,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1545,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "11430:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "11430:12:6"
										},
										{
											"id": 1548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1547,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "11443:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "11443:9:6"
										}
									],
									"name": "startVoting",
									"nameLocation": "11407:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11418:2:6"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11453:0:6"
									},
									"scope": 1699,
									"src": "11398:210:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "11675:208:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1576,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "11689:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																		"typeString": "mapping(address => struct Staking.Voter storage ref)"
																	}
																},
																"id": 1579,
																"indexExpression": {
																	"expression": {
																		"id": 1577,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11696:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11696:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11689:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$811_storage",
																	"typeString": "struct Staking.Voter storage ref"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 810,
															"src": "11689:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1582,
														"indexExpression": {
															"id": 1581,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "11714:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11689:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11728:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11689:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1589,
												"nodeType": "IfStatement",
												"src": "11685:103:6",
												"trueBody": {
													"id": 1588,
													"nodeType": "Block",
													"src": "11734:54:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1585,
																	"name": "Voting__alreadyVoted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "11755:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11755:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1587,
															"nodeType": "RevertStatement",
															"src": "11748:29:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1590,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "11798:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																		"typeString": "mapping(address => struct Staking.Voter storage ref)"
																	}
																},
																"id": 1593,
																"indexExpression": {
																	"expression": {
																		"id": 1591,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11805:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11805:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11798:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$811_storage",
																	"typeString": "struct Staking.Voter storage ref"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 810,
															"src": "11798:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1596,
														"indexExpression": {
															"id": 1595,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "11823:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11798:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11836:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11798:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "11798:42:6"
											},
											{
												"expression": {
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1600,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "11850:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1602,
														"indexExpression": {
															"id": 1601,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "11861:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11850:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11875:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11850:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "11850:26:6"
											}
										]
									},
									"functionSelector": "632a9a52",
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1570,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1569,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "11637:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "11637:12:6"
										},
										{
											"id": 1572,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1571,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 963,
												"src": "11650:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "11650:16:6"
										},
										{
											"id": 1574,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1573,
												"name": "isVoter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 945,
												"src": "11667:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "11667:7:6"
										}
									],
									"name": "vote",
									"nameLocation": "11623:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11627:2:6"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11675:0:6"
									},
									"scope": 1699,
									"src": "11614:269:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "11957:210:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1616,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "11971:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																		"typeString": "mapping(address => struct Staking.Voter storage ref)"
																	}
																},
																"id": 1619,
																"indexExpression": {
																	"expression": {
																		"id": 1617,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11978:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11978:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11971:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$811_storage",
																	"typeString": "struct Staking.Voter storage ref"
																}
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 810,
															"src": "11971:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1622,
														"indexExpression": {
															"id": 1621,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "11996:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11971:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12010:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11971:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1629,
												"nodeType": "IfStatement",
												"src": "11967:103:6",
												"trueBody": {
													"id": 1628,
													"nodeType": "Block",
													"src": "12017:53:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1625,
																	"name": "Voting__notYetVoted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "12038:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12038:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1627,
															"nodeType": "RevertStatement",
															"src": "12031:28:6"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1630,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "12080:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																		"typeString": "mapping(address => struct Staking.Voter storage ref)"
																	}
																},
																"id": 1633,
																"indexExpression": {
																	"expression": {
																		"id": 1631,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12087:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12087:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12080:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$811_storage",
																	"typeString": "struct Staking.Voter storage ref"
																}
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 810,
															"src": "12080:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1636,
														"indexExpression": {
															"id": 1635,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "12105:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12080:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12119:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12080:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "12080:44:6"
											},
											{
												"expression": {
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1640,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "12134:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1642,
														"indexExpression": {
															"id": 1641,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "12145:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12134:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12159:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12134:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "12134:26:6"
											}
										]
									},
									"functionSelector": "070c8b74",
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1609,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "11919:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "11919:12:6"
										},
										{
											"id": 1612,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1611,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 963,
												"src": "11932:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "11932:16:6"
										},
										{
											"id": 1614,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1613,
												"name": "isVoter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 945,
												"src": "11949:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "11949:7:6"
										}
									],
									"name": "retractVote",
									"nameLocation": "11898:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11909:2:6"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11957:0:6"
									},
									"scope": 1699,
									"src": "11889:278:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "12300:279:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1656,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "12314:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "31",
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12329:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12314:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1663,
												"nodeType": "IfStatement",
												"src": "12310:79:6",
												"trueBody": {
													"id": 1662,
													"nodeType": "Block",
													"src": "12332:57:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1659,
																	"name": "Voting__notEnoughVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "12353:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12353:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1661,
															"nodeType": "RevertStatement",
															"src": "12346:32:6"
														}
													]
												}
											},
											{
												"assignments": [
													1665
												],
												"declarations": [
													{
														"constant": false,
														"id": 1665,
														"mutability": "mutable",
														"name": "half_voters",
														"nameLocation": "12406:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1685,
														"src": "12398:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1664,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12398:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1672,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1666,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "12421:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12435:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "12421:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1669,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12420:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12440:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "12420:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12398:44:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1673,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "12457:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1675,
														"indexExpression": {
															"id": 1674,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "12468:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12457:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1676,
														"name": "half_voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "12481:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12457:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1683,
													"nodeType": "Block",
													"src": "12536:37:6",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12557:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1655,
															"id": 1682,
															"nodeType": "Return",
															"src": "12550:12:6"
														}
													]
												},
												"id": 1684,
												"nodeType": "IfStatement",
												"src": "12453:120:6",
												"trueBody": {
													"id": 1680,
													"nodeType": "Block",
													"src": "12494:36:6",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12515:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1655,
															"id": 1679,
															"nodeType": "Return",
															"src": "12508:11:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "671d2b75",
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1650,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1649,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "12238:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "12238:9:6"
										},
										{
											"id": 1652,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1651,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 963,
												"src": "12256:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "12256:16:6"
										}
									],
									"name": "getVotingResult",
									"nameLocation": "12182:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12197:2:6"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "12290:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1653,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12290:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12289:6:6"
									},
									"scope": 1699,
									"src": "12173:406:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "12643:38:6",
										"statements": [
											{
												"expression": {
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1693,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "12653:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12669:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12653:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "12653:21:6"
											}
										]
									},
									"functionSelector": "fab2f86b",
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1689,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1688,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "12616:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "12616:9:6"
										},
										{
											"id": 1691,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1690,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 963,
												"src": "12626:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "12626:16:6"
										}
									],
									"name": "stopVoting",
									"nameLocation": "12594:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12604:2:6"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12643:0:6"
									},
									"scope": 1699,
									"src": "12585:96:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1700,
							"src": "980:11703:6",
							"usedErrors": [
								773,
								775,
								778,
								780,
								782,
								784,
								786,
								788,
								791,
								794,
								796,
								798,
								800
							]
						}
					],
					"src": "39:12645:6"
				},
				"id": 6
			}
		}
	}
}