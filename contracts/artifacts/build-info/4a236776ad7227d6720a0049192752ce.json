{
	"id": "4a236776ad7227d6720a0049192752ce",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Whitelist.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract Whitelist {\n    using SafeMath for uint256;\n    uint256 public privateSaleUsers;\n\n    uint256 public privateSaleAmount;\n    uint256 internal constant _phase1 = 73395000 * 1e18;\n    uint256 internal constant _phase2 = 3820562 * 1e18; // daily limit\n\n    uint256 public startPrivateSale;\n\n    struct WhitelistStruct {\n        uint256 lockedAmount;\n        uint256 amount;\n        bool isPhase1Claimed;\n        uint256 latestClaimDay;\n    }\n\n    // beneficiary of tokens after they are released\n    mapping(address => WhitelistStruct) private _beneficiary;\n\n    address internal _owner;\n\n    constructor() {\n        privateSaleAmount = 1467900000 * 1e18;\n        _owner = msg.sender;\n    }\n\n    /* ------------------------------------------ modifier ------------------------------------------ */\n    function _onlyTalax() internal view {\n        require(msg.sender == _owner, \"Not authorized\");\n    }\n\n    modifier onlyTalax() {\n        _onlyTalax();\n        _;\n    }\n\n    /* ---------------------------------------------- - --------------------------------------------- */\n\n    function changeTalaxAddress(address talax) external onlyTalax {\n        _owner = talax;\n    }\n\n    function getOwner() public view returns(address){\n        return _owner;\n    }\n\n    function beneficiary(address user)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            bool,\n            uint256\n        )\n    {\n        WhitelistStruct memory benef = _beneficiary[user];\n        return (\n            benef.lockedAmount,\n            benef.amount,\n            benef.isPhase1Claimed,\n            benef.latestClaimDay\n        );\n    }\n\n    function initiateWhitelist() external onlyTalax {\n        startPrivateSale = block.timestamp;\n    }\n\n    function hasWhitelist(address user)\n        external\n        view\n        returns (WhitelistStruct memory)\n    {\n        return _beneficiary[user];\n    }\n\n    /**\n     *  @dev \t\tMain Functions\n     *  @return \tClaimable amount from Locked Wallet\n     */\n    function _calculateClaimableAmount(address user)\n        internal\n        returns (uint256)\n    {\n        uint256 claimable;\n\n        uint256 lockDuration = (block.timestamp - startPrivateSale) / 1 days;\n\n        //Phase 1 of locked wallet release - monthly\n        if (lockDuration < 16 * 30) {\n            if (_beneficiary[user].isPhase1Claimed == false) {\n                claimable = claimable.add(\n                    SafeMath.div(\n                        SafeMath.mul(_phase1, _beneficiary[user].lockedAmount),\n                        privateSaleAmount\n                    )\n                );\n                _beneficiary[user].isPhase1Claimed = true;\n            }\n            _beneficiary[user].latestClaimDay = 15 * 30;\n        }\n        //Phase 2 of locked wallet release - daily\n        else if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {\n            if (_beneficiary[user].isPhase1Claimed == false) {\n                claimable = claimable.add(\n                    SafeMath.div(\n                        SafeMath.mul(_phase1, _beneficiary[user].lockedAmount),\n                        privateSaleAmount\n                    )\n                );\n                _beneficiary[user].isPhase1Claimed = true;\n            }\n\n            uint256 sinceLatestClaim = lockDuration -\n                _beneficiary[user].latestClaimDay;\n            claimable =\n                sinceLatestClaim *\n                claimable.add(\n                    SafeMath.div(\n                        SafeMath.mul(_phase2, _beneficiary[user].lockedAmount),\n                        privateSaleAmount\n                    )\n                );\n            _beneficiary[user].latestClaimDay = lockDuration;\n        }\n\n        require(claimable != 0, \"Nothing to claim yet\");\n        return claimable;\n    }\n\n    function addBeneficiary(address user, uint256 amount)\n        external\n        onlyTalax\n    {\n        require(amount <= privateSaleAmount, \"Insufficient Total Balance\");\n        require(_beneficiary[user].amount == 0, \"Cannot add Registered User\");\n\n        _beneficiary[user].lockedAmount = amount;\n        _beneficiary[user].amount = amount;\n        _beneficiary[user].isPhase1Claimed = false;\n        _beneficiary[user].latestClaimDay = 1;\n\n        privateSaleUsers += 1;\n        privateSaleAmount -= amount;\n    }\n\n    function deleteBeneficiary(address user)\n        external\n        onlyTalax\n        returns (uint256)\n    {\n        require(_beneficiary[user].amount != 0, \"User not Registered\");\n        privateSaleUsers -= 1;\n        privateSaleAmount += _beneficiary[user].amount;\n        uint256 ex_amount = _beneficiary[user].amount;\n\n        delete _beneficiary[user];\n        return ex_amount;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function releaseClaimable(address user)\n        external\n        onlyTalax\n        returns (uint256)\n    {\n        require(_beneficiary[user].amount > 0, \"No Tokens Left\");\n\n        uint256 claimableLockedAmount = _calculateClaimableAmount(user);\n\n        require(claimableLockedAmount > 0, \"No Tokens to Release for Now\");\n\n        _beneficiary[user].amount = SafeMath.sub(\n            _beneficiary[user].amount,\n            claimableLockedAmount\n        );\n\n        return claimableLockedAmount;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Whitelist.sol": {
				"Whitelist": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addBeneficiary",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "deleteBeneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "hasWhitelist",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "lockedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isPhase1Claimed",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "latestClaimDay",
											"type": "uint256"
										}
									],
									"internalType": "struct Whitelist.WhitelistStruct",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Whitelist.sol\":123:5458  contract Whitelist {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Whitelist.sol\":721:818  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Whitelist.sol\":765:782  1467900000 * 1e18 */\n  0x04be37ea7317415c45800000\n    /* \"contracts/Whitelist.sol\":745:762  privateSaleAmount */\n  0x01\n    /* \"contracts/Whitelist.sol\":745:782  privateSaleAmount = 1467900000 * 1e18 */\n  sstore\n    /* \"contracts/Whitelist.sol\":792:798  _owner */\n  0x04\n    /* \"contracts/Whitelist.sol\":792:811  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Whitelist.sol\":801:811  msg.sender */\n  caller\n    /* \"contracts/Whitelist.sol\":792:811  _owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Whitelist.sol\":123:5458  contract Whitelist {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Whitelist.sol\":123:5458  contract Whitelist {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x81008568\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8cdb7e8b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8cdb7e8b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x96074e70\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xefdd8796\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x81008568\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8b2b423a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x338dbf59\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x338dbf59\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x549dee0b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7d3bca76\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x5171f4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1d77b00b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Whitelist.sol\":4953:5456  function releaseClaimable(address user)... */\n    tag_3:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":552:577   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":540:542   */\n      0x20\n        /* \"#utility.yul\":525:543   */\n      add\n        /* \"contracts/Whitelist.sol\":4953:5456  function releaseClaimable(address user)... */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Whitelist.sol\":1208:1301  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_4:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/Whitelist.sol\":385:416  uint256 public startPrivateSale */\n    tag_5:\n      tag_17\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Whitelist.sol\":180:211  uint256 public privateSaleUsers */\n    tag_6:\n      tag_17\n      sload(0x00)\n      dup2\n      jump\n        /* \"contracts/Whitelist.sol\":4477:4866  function deleteBeneficiary(address user)... */\n    tag_7:\n      tag_17\n      tag_33\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":1391:1788  function beneficiary(address user)... */\n    tag_8:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":1609:1627  _beneficiary[user] */\n      and\n        /* \"contracts/Whitelist.sol\":1486:1493  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":1609:1627  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":1609:1621  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":1609:1627  _beneficiary[user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":1578:1627  WhitelistStruct memory benef = _beneficiary[user] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap4\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      swap6\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      swap2\n      swap1\n      swap4\n      add\n      sload\n      0x60\n      swap1\n      swap4\n      add\n      dup4\n      swap1\n      mstore\n      swap4\n      swap1\n      swap3\n      swap2\n      swap1\n        /* \"contracts/Whitelist.sol\":1391:1788  function beneficiary(address user)... */\n      jump\n    tag_36:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":813:838   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":869:871   */\n      0x20\n        /* \"#utility.yul\":854:872   */\n      dup6\n      add\n        /* \"#utility.yul\":847:881   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":924:938   */\n      swap1\n      iszero\n        /* \"#utility.yul\":917:939   */\n      iszero\n        /* \"#utility.yul\":897:915   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":890:940   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":971:973   */\n      0x60\n        /* \"#utility.yul\":956:974   */\n      dup3\n      add\n        /* \"#utility.yul\":949:983   */\n      mstore\n        /* \"#utility.yul\":800:803   */\n      0x80\n        /* \"#utility.yul\":785:804   */\n      add\n        /* \"contracts/Whitelist.sol\":1391:1788  function beneficiary(address user)... */\n      tag_21\n        /* \"#utility.yul\":588:989   */\n      jump\n        /* \"contracts/Whitelist.sol\":1307:1385  function getOwner() public view returns(address){... */\n    tag_9:\n        /* \"contracts/Whitelist.sol\":1372:1378  _owner */\n      sload(0x04)\n        /* \"contracts/Whitelist.sol\":1307:1385  function getOwner() public view returns(address){... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":1372:1378  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1140:1214   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1128:1130   */\n      0x20\n        /* \"#utility.yul\":1113:1131   */\n      add\n        /* \"contracts/Whitelist.sol\":1307:1385  function getOwner() public view returns(address){... */\n      tag_21\n        /* \"#utility.yul\":994:1220   */\n      jump\n        /* \"contracts/Whitelist.sol\":218:250  uint256 public privateSaleAmount */\n    tag_10:\n      tag_17\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/Whitelist.sol\":1899:2052  function hasWhitelist(address user)... */\n    tag_11:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n        /* \"#utility.yul\":1454:1467   */\n      dup2\n      mload\n        /* \"#utility.yul\":1436:1468   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1524:1528   */\n      0x20\n        /* \"#utility.yul\":1512:1529   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1506:1530   */\n      mload\n        /* \"#utility.yul\":1484:1504   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1477:1531   */\n      mstore\n        /* \"#utility.yul\":1601:1605   */\n      0x40\n        /* \"#utility.yul\":1589:1606   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1583:1607   */\n      mload\n        /* \"#utility.yul\":1576:1608   */\n      iszero\n        /* \"#utility.yul\":1569:1609   */\n      iszero\n        /* \"#utility.yul\":1547:1567   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1540:1610   */\n      mstore\n        /* \"#utility.yul\":1666:1670   */\n      0x60\n        /* \"#utility.yul\":1654:1671   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":1648:1672   */\n      mload\n        /* \"#utility.yul\":1626:1646   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1619:1673   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1423:1426   */\n      0x80\n        /* \"#utility.yul\":1408:1427   */\n      add\n      swap1\n        /* \"#utility.yul\":1225:1679   */\n      jump\n        /* \"contracts/Whitelist.sol\":3953:4471  function addBeneficiary(address user, uint256 amount)... */\n    tag_12:\n      tag_23\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":1794:1893  function initiateWhitelist() external onlyTalax {... */\n    tag_13:\n      tag_23\n      tag_58\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":4953:5456  function releaseClaimable(address user)... */\n    tag_20:\n        /* \"contracts/Whitelist.sol\":5045:5052  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":1066:1078  _onlyTalax() */\n      tag_60\n        /* \"contracts/Whitelist.sol\":1066:1076  _onlyTalax */\n      tag_61\n        /* \"contracts/Whitelist.sol\":1066:1078  _onlyTalax() */\n      jump\t// in\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":5076:5094  _beneficiary[user] */\n      dup3\n      and\n        /* \"contracts/Whitelist.sol\":5104:5105  0 */\n      0x00\n        /* \"contracts/Whitelist.sol\":5076:5094  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":5076:5088  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":5076:5094  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":5076:5101  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":5068:5124  require(_beneficiary[user].amount > 0, \"No Tokens Left\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2145:2147   */\n      0x20\n        /* \"contracts/Whitelist.sol\":5068:5124  require(_beneficiary[user].amount > 0, \"No Tokens Left\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2127:2148   */\n      mstore\n        /* \"#utility.yul\":2184:2186   */\n      0x0e\n        /* \"#utility.yul\":2164:2182   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2157:2187   */\n      mstore\n        /* \"#utility.yul\":2223:2239   */\n      0x4e6f20546f6b656e73204c656674000000000000000000000000000000000000\n        /* \"#utility.yul\":2203:2221   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2196:2240   */\n      mstore\n        /* \"#utility.yul\":2257:2275   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":5068:5124  require(_beneficiary[user].amount > 0, \"No Tokens Left\") */\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/Whitelist.sol\":5135:5164  uint256 claimableLockedAmount */\n      0x00\n        /* \"contracts/Whitelist.sol\":5167:5198  _calculateClaimableAmount(user) */\n      tag_66\n        /* \"contracts/Whitelist.sol\":5193:5197  user */\n      dup4\n        /* \"contracts/Whitelist.sol\":5167:5192  _calculateClaimableAmount */\n      tag_67\n        /* \"contracts/Whitelist.sol\":5167:5198  _calculateClaimableAmount(user) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/Whitelist.sol\":5135:5198  uint256 claimableLockedAmount = _calculateClaimableAmount(user) */\n      swap1\n      pop\n        /* \"contracts/Whitelist.sol\":5241:5242  0 */\n      0x00\n        /* \"contracts/Whitelist.sol\":5217:5238  claimableLockedAmount */\n      dup2\n        /* \"contracts/Whitelist.sol\":5217:5242  claimableLockedAmount > 0 */\n      gt\n        /* \"contracts/Whitelist.sol\":5209:5275  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2488:2490   */\n      0x20\n        /* \"contracts/Whitelist.sol\":5209:5275  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2470:2491   */\n      mstore\n        /* \"#utility.yul\":2527:2529   */\n      0x1c\n        /* \"#utility.yul\":2507:2525   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2500:2530   */\n      mstore\n        /* \"#utility.yul\":2566:2596   */\n      0x4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f7700000000\n        /* \"#utility.yul\":2546:2564   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2539:2597   */\n      mstore\n        /* \"#utility.yul\":2614:2632   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":5209:5275  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n      tag_64\n        /* \"#utility.yul\":2286:2638   */\n      jump\n        /* \"contracts/Whitelist.sol\":5209:5275  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":5340:5358  _beneficiary[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":5340:5352  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":5340:5358  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":5340:5365  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":5314:5410  SafeMath.sub(... */\n      tag_71\n      swap1\n        /* \"contracts/Whitelist.sol\":5379:5400  claimableLockedAmount */\n      dup3\n        /* \"contracts/Whitelist.sol\":5314:5326  SafeMath.sub */\n      tag_72\n        /* \"contracts/Whitelist.sol\":5314:5410  SafeMath.sub(... */\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":5286:5304  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":5286:5298  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":5286:5304  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":5286:5311  _beneficiary[user].amount */\n      0x01\n      add\n        /* \"contracts/Whitelist.sol\":5286:5410  _beneficiary[user].amount = SafeMath.sub(... */\n      sstore\n        /* \"contracts/Whitelist.sol\":5428:5449  claimableLockedAmount */\n      swap1\n      pop\n        /* \"contracts/Whitelist.sol\":1088:1089  _ */\n    tag_62:\n        /* \"contracts/Whitelist.sol\":4953:5456  function releaseClaimable(address user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":1208:1301  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_25:\n        /* \"contracts/Whitelist.sol\":1066:1078  _onlyTalax() */\n      tag_74\n        /* \"contracts/Whitelist.sol\":1066:1076  _onlyTalax */\n      tag_61\n        /* \"contracts/Whitelist.sol\":1066:1078  _onlyTalax() */\n      jump\t// in\n    tag_74:\n        /* \"contracts/Whitelist.sol\":1280:1286  _owner */\n      0x04\n        /* \"contracts/Whitelist.sol\":1280:1294  _owner = talax */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":1208:1301  function changeTalaxAddress(address talax) external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":4477:4866  function deleteBeneficiary(address user)... */\n    tag_34:\n        /* \"contracts/Whitelist.sol\":4570:4577  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":1066:1078  _onlyTalax() */\n      tag_77\n        /* \"contracts/Whitelist.sol\":1066:1076  _onlyTalax */\n      tag_61\n        /* \"contracts/Whitelist.sol\":1066:1078  _onlyTalax() */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4601:4619  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4601:4613  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4601:4619  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":4601:4626  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":4593:4655  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2845:2847   */\n      0x20\n        /* \"contracts/Whitelist.sol\":4593:4655  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2827:2848   */\n      mstore\n        /* \"#utility.yul\":2884:2886   */\n      0x13\n        /* \"#utility.yul\":2864:2882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2857:2887   */\n      mstore\n        /* \"#utility.yul\":2923:2944   */\n      0x55736572206e6f74205265676973746572656400000000000000000000000000\n        /* \"#utility.yul\":2903:2921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2896:2945   */\n      mstore\n        /* \"#utility.yul\":2962:2980   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":4593:4655  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n      tag_64\n        /* \"#utility.yul\":2643:2986   */\n      jump\n        /* \"contracts/Whitelist.sol\":4593:4655  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n    tag_79:\n        /* \"contracts/Whitelist.sol\":4685:4686  1 */\n      0x01\n        /* \"contracts/Whitelist.sol\":4665:4681  privateSaleUsers */\n      0x00\n      dup1\n        /* \"contracts/Whitelist.sol\":4665:4686  privateSaleUsers -= 1 */\n      dup3\n      dup3\n      sload\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4717:4735  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4717:4729  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4717:4735  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Whitelist.sol\":4717:4742  _beneficiary[user].amount */\n      0x01\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":4696:4742  privateSaleAmount += _beneficiary[user].amount */\n      dup2\n      sload\n        /* \"contracts/Whitelist.sol\":4717:4742  _beneficiary[user].amount */\n      swap1\n      swap3\n        /* \"contracts/Whitelist.sol\":4717:4735  _beneficiary[user] */\n      swap1\n        /* \"contracts/Whitelist.sol\":4696:4742  privateSaleAmount += _beneficiary[user].amount */\n      tag_84\n      swap1\n        /* \"contracts/Whitelist.sol\":4717:4742  _beneficiary[user].amount */\n      dup5\n      swap1\n        /* \"contracts/Whitelist.sol\":4696:4742  privateSaleAmount += _beneficiary[user].amount */\n      tag_85\n      jump\t// in\n    tag_84:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4772:4790  _beneficiary[user] */\n      and\n        /* \"contracts/Whitelist.sol\":4752:4769  uint256 ex_amount */\n      0x00\n        /* \"contracts/Whitelist.sol\":4772:4790  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4772:4784  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4772:4790  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Whitelist.sol\":4772:4797  _beneficiary[user].amount */\n      0x01\n      dup2\n      add\n      dup1\n      sload\n        /* \"contracts/Whitelist.sol\":4808:4833  delete _beneficiary[user] */\n      dup5\n      dup4\n      sstore\n      swap1\n      dup5\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      swap2\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Whitelist.sol\":4772:4797  _beneficiary[user].amount */\n      swap1\n        /* \"contracts/Whitelist.sol\":4477:4866  function deleteBeneficiary(address user)... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":1899:2052  function hasWhitelist(address user)... */\n    tag_50:\n        /* \"contracts/Whitelist.sol\":1982:2004  WhitelistStruct memory */\n      tag_88\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_88:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2027:2045  _beneficiary[user] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2027:2039  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2027:2045  _beneficiary[user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2020:2045  return _beneficiary[user] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/Whitelist.sol\":1899:2052  function hasWhitelist(address user)... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":3953:4471  function addBeneficiary(address user, uint256 amount)... */\n    tag_56:\n        /* \"contracts/Whitelist.sol\":1066:1078  _onlyTalax() */\n      tag_92\n        /* \"contracts/Whitelist.sol\":1066:1076  _onlyTalax */\n      tag_61\n        /* \"contracts/Whitelist.sol\":1066:1078  _onlyTalax() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/Whitelist.sol\":4074:4091  privateSaleAmount */\n      sload(0x01)\n        /* \"contracts/Whitelist.sol\":4064:4070  amount */\n      dup2\n        /* \"contracts/Whitelist.sol\":4064:4091  amount <= privateSaleAmount */\n      gt\n      iszero\n        /* \"contracts/Whitelist.sol\":4056:4122  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3645:3647   */\n      0x20\n        /* \"contracts/Whitelist.sol\":4056:4122  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3627:3648   */\n      mstore\n        /* \"#utility.yul\":3684:3686   */\n      0x1a\n        /* \"#utility.yul\":3664:3682   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3657:3687   */\n      mstore\n        /* \"#utility.yul\":3723:3751   */\n      0x496e73756666696369656e7420546f74616c2042616c616e6365000000000000\n        /* \"#utility.yul\":3703:3721   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3696:3752   */\n      mstore\n        /* \"#utility.yul\":3769:3787   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":4056:4122  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n      tag_64\n        /* \"#utility.yul\":3443:3793   */\n      jump\n        /* \"contracts/Whitelist.sol\":4056:4122  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4140:4158  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4140:4152  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4140:4158  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":4140:4165  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":4140:4170  _beneficiary[user].amount == 0 */\n      iszero\n        /* \"contracts/Whitelist.sol\":4132:4201  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4000:4002   */\n      0x20\n        /* \"contracts/Whitelist.sol\":4132:4201  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3982:4003   */\n      mstore\n        /* \"#utility.yul\":4039:4041   */\n      0x1a\n        /* \"#utility.yul\":4019:4037   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4012:4042   */\n      mstore\n        /* \"#utility.yul\":4078:4106   */\n      0x43616e6e6f742061646420526567697374657265642055736572000000000000\n        /* \"#utility.yul\":4058:4076   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4051:4107   */\n      mstore\n        /* \"#utility.yul\":4124:4142   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":4132:4201  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n      tag_64\n        /* \"#utility.yul\":3798:4148   */\n      jump\n        /* \"contracts/Whitelist.sol\":4132:4201  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4212:4230  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4212:4224  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4212:4230  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Whitelist.sol\":4212:4252  _beneficiary[user].lockedAmount = amount */\n      dup4\n      dup2\n      sstore\n        /* \"contracts/Whitelist.sol\":4262:4287  _beneficiary[user].amount */\n      0x01\n      dup1\n      dup3\n      add\n        /* \"contracts/Whitelist.sol\":4262:4296  _beneficiary[user].amount = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":4306:4340  _beneficiary[user].isPhase1Claimed */\n      0x02\n      dup3\n      add\n        /* \"contracts/Whitelist.sol\":4306:4348  _beneficiary[user].isPhase1Claimed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":4358:4391  _beneficiary[user].latestClaimDay */\n      swap2\n      add\n        /* \"contracts/Whitelist.sol\":4358:4395  _beneficiary[user].latestClaimDay = 1 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":4406:4427  privateSaleUsers += 1 */\n      dup2\n      sload\n        /* \"contracts/Whitelist.sol\":4262:4287  _beneficiary[user].amount */\n      swap1\n      swap2\n        /* \"contracts/Whitelist.sol\":4212:4230  _beneficiary[user] */\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Whitelist.sol\":4406:4427  privateSaleUsers += 1 */\n      tag_100\n      swap1\n        /* \"contracts/Whitelist.sol\":4262:4287  _beneficiary[user].amount */\n      dup5\n      swap1\n        /* \"contracts/Whitelist.sol\":4406:4427  privateSaleUsers += 1 */\n      tag_85\n      jump\t// in\n    tag_100:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Whitelist.sol\":4458:4464  amount */\n      dup1\n        /* \"contracts/Whitelist.sol\":4437:4454  privateSaleAmount */\n      0x01\n      0x00\n        /* \"contracts/Whitelist.sol\":4437:4464  privateSaleAmount -= amount */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_101:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Whitelist.sol\":3953:4471  function addBeneficiary(address user, uint256 amount)... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":1794:1893  function initiateWhitelist() external onlyTalax {... */\n    tag_58:\n        /* \"contracts/Whitelist.sol\":1066:1078  _onlyTalax() */\n      tag_103\n        /* \"contracts/Whitelist.sol\":1066:1076  _onlyTalax */\n      tag_61\n        /* \"contracts/Whitelist.sol\":1066:1078  _onlyTalax() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/Whitelist.sol\":1871:1886  block.timestamp */\n      timestamp\n        /* \"contracts/Whitelist.sol\":1852:1868  startPrivateSale */\n      0x02\n        /* \"contracts/Whitelist.sol\":1852:1886  startPrivateSale = block.timestamp */\n      sstore\n        /* \"contracts/Whitelist.sol\":1794:1893  function initiateWhitelist() external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":929:1029  function _onlyTalax() internal view {... */\n    tag_61:\n        /* \"contracts/Whitelist.sol\":997:1003  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Whitelist.sol\":983:993  msg.sender */\n      caller\n        /* \"contracts/Whitelist.sol\":983:1003  msg.sender == _owner */\n      eq\n        /* \"contracts/Whitelist.sol\":975:1022  require(msg.sender == _owner, \"Not authorized\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4355:4357   */\n      0x20\n        /* \"contracts/Whitelist.sol\":975:1022  require(msg.sender == _owner, \"Not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4337:4358   */\n      mstore\n        /* \"#utility.yul\":4394:4396   */\n      0x0e\n        /* \"#utility.yul\":4374:4392   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4367:4397   */\n      mstore\n        /* \"#utility.yul\":4433:4449   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":4413:4431   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4406:4450   */\n      mstore\n        /* \"#utility.yul\":4467:4485   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":975:1022  require(msg.sender == _owner, \"Not authorized\") */\n      tag_64\n        /* \"#utility.yul\":4153:4491   */\n      jump\n        /* \"contracts/Whitelist.sol\":975:1022  require(msg.sender == _owner, \"Not authorized\") */\n    tag_106:\n        /* \"contracts/Whitelist.sol\":929:1029  function _onlyTalax() internal view {... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":2157:3947  function _calculateClaimableAmount(address user)... */\n    tag_67:\n        /* \"contracts/Whitelist.sol\":2240:2247  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":2263:2280  uint256 claimable */\n      dup1\n        /* \"contracts/Whitelist.sol\":2291:2311  uint256 lockDuration */\n      0x00\n        /* \"contracts/Whitelist.sol\":2353:2359  1 days */\n      0x015180\n        /* \"contracts/Whitelist.sol\":2333:2349  startPrivateSale */\n      sload(0x02)\n        /* \"contracts/Whitelist.sol\":2315:2330  block.timestamp */\n      timestamp\n        /* \"contracts/Whitelist.sol\":2315:2349  block.timestamp - startPrivateSale */\n      tag_110\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_110:\n        /* \"contracts/Whitelist.sol\":2314:2359  (block.timestamp - startPrivateSale) / 1 days */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"contracts/Whitelist.sol\":2291:2359  uint256 lockDuration = (block.timestamp - startPrivateSale) / 1 days */\n      swap1\n      pop\n        /* \"contracts/Whitelist.sol\":2442:2449  16 * 30 */\n      0x01e0\n        /* \"contracts/Whitelist.sol\":2427:2439  lockDuration */\n      dup2\n        /* \"contracts/Whitelist.sol\":2427:2449  lockDuration < 16 * 30 */\n      lt\n        /* \"contracts/Whitelist.sol\":2423:3857  if (lockDuration < 16 * 30) {... */\n      iszero\n      tag_113\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2469:2487  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2469:2481  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2469:2487  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2469:2503  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Whitelist.sol\":2465:2828  if (_beneficiary[user].isPhase1Claimed == false) {... */\n      tag_114\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2639:2657  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2639:2651  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2639:2657  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2639:2670  _beneficiary[user].lockedAmount */\n      sload\n        /* \"contracts/Whitelist.sol\":2544:2754  claimable.add(... */\n      tag_115\n      swap1\n        /* \"contracts/Whitelist.sol\":2579:2736  SafeMath.div(... */\n      tag_116\n      swap1\n        /* \"contracts/Whitelist.sol\":2617:2671  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      tag_117\n      swap1\n        /* \"contracts/Whitelist.sol\":292:307  73395000 * 1e18 */\n      0x3cb5feec27901169e00000\n      swap1\n        /* \"contracts/Whitelist.sol\":2617:2629  SafeMath.mul */\n      tag_118\n        /* \"contracts/Whitelist.sol\":2617:2671  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Whitelist.sol\":2697:2714  privateSaleAmount */\n      sload(0x01)\n        /* \"contracts/Whitelist.sol\":2579:2591  SafeMath.div */\n      tag_119\n        /* \"contracts/Whitelist.sol\":2579:2736  SafeMath.div(... */\n      jump\t// in\n    tag_116:\n        /* \"contracts/Whitelist.sol\":2544:2553  claimable */\n      dup4\n      swap1\n        /* \"contracts/Whitelist.sol\":2544:2557  claimable.add */\n      tag_120\n        /* \"contracts/Whitelist.sol\":2544:2754  claimable.add(... */\n      jump\t// in\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2772:2790  _beneficiary[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2772:2784  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2772:2790  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2772:2806  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n        /* \"contracts/Whitelist.sol\":2772:2813  _beneficiary[user].isPhase1Claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Whitelist.sol\":2809:2813  true */\n      0x01\n        /* \"contracts/Whitelist.sol\":2772:2813  _beneficiary[user].isPhase1Claimed = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":2532:2754  claimable = claimable.add(... */\n      swap2\n      pop\n        /* \"contracts/Whitelist.sol\":2465:2828  if (_beneficiary[user].isPhase1Claimed == false) {... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2841:2859  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2841:2853  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2841:2859  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Whitelist.sol\":2877:2884  15 * 30 */\n      0x01c2\n        /* \"contracts/Whitelist.sol\":2841:2874  _beneficiary[user].latestClaimDay */\n      swap2\n      add\n        /* \"contracts/Whitelist.sol\":2841:2884  _beneficiary[user].latestClaimDay = 15 * 30 */\n      sstore\n        /* \"contracts/Whitelist.sol\":2423:3857  if (lockDuration < 16 * 30) {... */\n      jump(tag_123)\n    tag_113:\n        /* \"contracts/Whitelist.sol\":2980:2987  16 * 30 */\n      0x01e0\n        /* \"contracts/Whitelist.sol\":2964:2976  lockDuration */\n      dup2\n        /* \"contracts/Whitelist.sol\":2964:2987  lockDuration >= 16 * 30 */\n      lt\n      iszero\n        /* \"contracts/Whitelist.sol\":2964:3013  lockDuration >= 16 * 30 && lockDuration < 28 * 30 */\n      dup1\n      iszero\n      tag_122\n      jumpi\n      pop\n        /* \"contracts/Whitelist.sol\":3006:3013  28 * 30 */\n      0x0348\n        /* \"contracts/Whitelist.sol\":2991:3003  lockDuration */\n      dup2\n        /* \"contracts/Whitelist.sol\":2991:3013  lockDuration < 28 * 30 */\n      lt\n        /* \"contracts/Whitelist.sol\":2964:3013  lockDuration >= 16 * 30 && lockDuration < 28 * 30 */\n    tag_122:\n        /* \"contracts/Whitelist.sol\":2960:3857  if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {... */\n      iszero\n      tag_123\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3033:3051  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3033:3045  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3033:3051  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3033:3067  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Whitelist.sol\":3029:3392  if (_beneficiary[user].isPhase1Claimed == false) {... */\n      tag_124\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3203:3221  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3203:3215  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3203:3221  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3203:3234  _beneficiary[user].lockedAmount */\n      sload\n        /* \"contracts/Whitelist.sol\":3108:3318  claimable.add(... */\n      tag_125\n      swap1\n        /* \"contracts/Whitelist.sol\":3143:3300  SafeMath.div(... */\n      tag_116\n      swap1\n        /* \"contracts/Whitelist.sol\":3181:3235  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      tag_117\n      swap1\n        /* \"contracts/Whitelist.sol\":292:307  73395000 * 1e18 */\n      0x3cb5feec27901169e00000\n      swap1\n        /* \"contracts/Whitelist.sol\":3181:3193  SafeMath.mul */\n      tag_118\n        /* \"contracts/Whitelist.sol\":3181:3235  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":3108:3318  claimable.add(... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3336:3354  _beneficiary[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3336:3348  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3336:3354  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3336:3370  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n        /* \"contracts/Whitelist.sol\":3336:3377  _beneficiary[user].isPhase1Claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Whitelist.sol\":3373:3377  true */\n      0x01\n        /* \"contracts/Whitelist.sol\":3336:3377  _beneficiary[user].isPhase1Claimed = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":3096:3318  claimable = claimable.add(... */\n      swap2\n      pop\n        /* \"contracts/Whitelist.sol\":3029:3392  if (_beneficiary[user].isPhase1Claimed == false) {... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3464:3482  _beneficiary[user] */\n      dup5\n      and\n        /* \"contracts/Whitelist.sol\":3406:3430  uint256 sinceLatestClaim */\n      0x00\n        /* \"contracts/Whitelist.sol\":3464:3482  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3464:3476  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3464:3482  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Whitelist.sol\":3464:3497  _beneficiary[user].latestClaimDay */\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":3433:3497  lockDuration -... */\n      tag_128\n      swap1\n        /* \"contracts/Whitelist.sol\":3433:3445  lockDuration */\n      dup4\n        /* \"contracts/Whitelist.sol\":3433:3497  lockDuration -... */\n      tag_83\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3669:3687  _beneficiary[user] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3669:3681  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3669:3687  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3669:3700  _beneficiary[user].lockedAmount */\n      sload\n        /* \"contracts/Whitelist.sol\":3406:3497  uint256 sinceLatestClaim = lockDuration -... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Whitelist.sol\":3574:3784  claimable.add(... */\n      tag_129\n      swap1\n        /* \"contracts/Whitelist.sol\":3609:3766  SafeMath.div(... */\n      tag_130\n      swap1\n        /* \"contracts/Whitelist.sol\":3647:3701  SafeMath.mul(_phase2, _beneficiary[user].lockedAmount) */\n      tag_117\n      swap1\n        /* \"contracts/Whitelist.sol\":349:363  3820562 * 1e18 */\n      0x03290914be1afb75080000\n      swap1\n        /* \"contracts/Whitelist.sol\":3647:3659  SafeMath.mul */\n      tag_118\n        /* \"contracts/Whitelist.sol\":3647:3701  SafeMath.mul(_phase2, _beneficiary[user].lockedAmount) */\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":3609:3766  SafeMath.div(... */\n    tag_130:\n        /* \"contracts/Whitelist.sol\":3574:3583  claimable */\n      dup5\n      swap1\n        /* \"contracts/Whitelist.sol\":3574:3587  claimable.add */\n      tag_120\n        /* \"contracts/Whitelist.sol\":3574:3784  claimable.add(... */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Whitelist.sol\":3539:3784  sinceLatestClaim *... */\n      tag_132\n      swap1\n        /* \"contracts/Whitelist.sol\":3539:3555  sinceLatestClaim */\n      dup3\n        /* \"contracts/Whitelist.sol\":3539:3784  sinceLatestClaim *... */\n      tag_133\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3798:3816  _beneficiary[user] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3798:3810  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3798:3816  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Whitelist.sol\":3798:3831  _beneficiary[user].latestClaimDay */\n      add\n        /* \"contracts/Whitelist.sol\":3798:3846  _beneficiary[user].latestClaimDay = lockDuration */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":3511:3784  claimable =... */\n      swap3\n      pop\n      pop\n        /* \"contracts/Whitelist.sol\":2960:3857  if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {... */\n    tag_123:\n        /* \"contracts/Whitelist.sol\":3875:3889  claimable != 0 */\n      dup2\n        /* \"contracts/Whitelist.sol\":3867:3914  require(claimable != 0, \"Nothing to claim yet\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5150:5152   */\n      0x20\n        /* \"contracts/Whitelist.sol\":3867:3914  require(claimable != 0, \"Nothing to claim yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5132:5153   */\n      mstore\n        /* \"#utility.yul\":5189:5191   */\n      0x14\n        /* \"#utility.yul\":5169:5187   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5162:5192   */\n      mstore\n        /* \"#utility.yul\":5228:5250   */\n      0x4e6f7468696e6720746f20636c61696d20796574000000000000000000000000\n        /* \"#utility.yul\":5208:5226   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5201:5251   */\n      mstore\n        /* \"#utility.yul\":5268:5286   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":3867:3914  require(claimable != 0, \"Nothing to claim yet\") */\n      tag_64\n        /* \"#utility.yul\":4948:5292   */\n      jump\n        /* \"contracts/Whitelist.sol\":3867:3914  require(claimable != 0, \"Nothing to claim yet\") */\n    tag_134:\n      pop\n        /* \"contracts/Whitelist.sol\":3931:3940  claimable */\n      swap3\n        /* \"contracts/Whitelist.sol\":2157:3947  function _calculateClaimableAmount(address user)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_83\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_133\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_112\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_85\n      jump\t// in\n        /* \"#utility.yul\":14:210   */\n    tag_145:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":215:401   */\n    tag_19:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_151:\n        /* \"#utility.yul\":366:395   */\n      tag_138\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_145\n      jump\t// in\n        /* \"#utility.yul\":1684:1938   */\n    tag_55:\n        /* \"#utility.yul\":1752:1758   */\n      0x00\n        /* \"#utility.yul\":1760:1766   */\n      dup1\n        /* \"#utility.yul\":1813:1815   */\n      0x40\n        /* \"#utility.yul\":1801:1810   */\n      dup4\n        /* \"#utility.yul\":1792:1799   */\n      dup6\n        /* \"#utility.yul\":1788:1811   */\n      sub\n        /* \"#utility.yul\":1784:1816   */\n      slt\n        /* \"#utility.yul\":1781:1833   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":1829:1830   */\n      0x00\n        /* \"#utility.yul\":1826:1827   */\n      dup1\n        /* \"#utility.yul\":1819:1831   */\n      revert\n        /* \"#utility.yul\":1781:1833   */\n    tag_158:\n        /* \"#utility.yul\":1852:1881   */\n      tag_159\n        /* \"#utility.yul\":1871:1880   */\n      dup4\n        /* \"#utility.yul\":1852:1881   */\n      tag_145\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1842:1881   */\n      swap5\n        /* \"#utility.yul\":1928:1930   */\n      0x20\n        /* \"#utility.yul\":1913:1931   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1900:1932   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1684:1938   */\n      jump\t// out\n        /* \"#utility.yul\":2991:3175   */\n    tag_146:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3040:3041   */\n      0x00\n        /* \"#utility.yul\":3033:3121   */\n      mstore\n        /* \"#utility.yul\":3140:3144   */\n      0x11\n        /* \"#utility.yul\":3137:3138   */\n      0x04\n        /* \"#utility.yul\":3130:3145   */\n      mstore\n        /* \"#utility.yul\":3164:3168   */\n      0x24\n        /* \"#utility.yul\":3161:3162   */\n      0x00\n        /* \"#utility.yul\":3154:3169   */\n      revert\n        /* \"#utility.yul\":3180:3305   */\n    tag_83:\n        /* \"#utility.yul\":3220:3224   */\n      0x00\n        /* \"#utility.yul\":3248:3249   */\n      dup3\n        /* \"#utility.yul\":3245:3246   */\n      dup3\n        /* \"#utility.yul\":3242:3250   */\n      lt\n        /* \"#utility.yul\":3239:3273   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":3253:3271   */\n      tag_166\n      tag_146\n      jump\t// in\n    tag_166:\n      pop\n        /* \"#utility.yul\":3290:3299   */\n      sub\n      swap1\n        /* \"#utility.yul\":3180:3305   */\n      jump\t// out\n        /* \"#utility.yul\":3310:3438   */\n    tag_85:\n        /* \"#utility.yul\":3350:3353   */\n      0x00\n        /* \"#utility.yul\":3381:3382   */\n      dup3\n        /* \"#utility.yul\":3377:3383   */\n      not\n        /* \"#utility.yul\":3374:3375   */\n      dup3\n        /* \"#utility.yul\":3371:3384   */\n      gt\n        /* \"#utility.yul\":3368:3407   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":3387:3405   */\n      tag_169\n      tag_146\n      jump\t// in\n    tag_169:\n      pop\n        /* \"#utility.yul\":3423:3432   */\n      add\n      swap1\n        /* \"#utility.yul\":3310:3438   */\n      jump\t// out\n        /* \"#utility.yul\":4496:4770   */\n    tag_112:\n        /* \"#utility.yul\":4536:4537   */\n      0x00\n        /* \"#utility.yul\":4562:4563   */\n      dup3\n        /* \"#utility.yul\":4552:4741   */\n      tag_174\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4594:4595   */\n      0x00\n        /* \"#utility.yul\":4587:4675   */\n      mstore\n        /* \"#utility.yul\":4698:4702   */\n      0x12\n        /* \"#utility.yul\":4695:4696   */\n      0x04\n        /* \"#utility.yul\":4688:4703   */\n      mstore\n        /* \"#utility.yul\":4726:4730   */\n      0x24\n        /* \"#utility.yul\":4723:4724   */\n      0x00\n        /* \"#utility.yul\":4716:4731   */\n      revert\n        /* \"#utility.yul\":4552:4741   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":4755:4764   */\n      div\n      swap1\n        /* \"#utility.yul\":4496:4770   */\n      jump\t// out\n        /* \"#utility.yul\":4775:4943   */\n    tag_133:\n        /* \"#utility.yul\":4815:4822   */\n      0x00\n        /* \"#utility.yul\":4881:4882   */\n      dup2\n        /* \"#utility.yul\":4877:4878   */\n      0x00\n        /* \"#utility.yul\":4873:4879   */\n      not\n        /* \"#utility.yul\":4869:4883   */\n      div\n        /* \"#utility.yul\":4866:4867   */\n      dup4\n        /* \"#utility.yul\":4863:4884   */\n      gt\n        /* \"#utility.yul\":4858:4859   */\n      dup3\n        /* \"#utility.yul\":4851:4860   */\n      iszero\n        /* \"#utility.yul\":4844:4861   */\n      iszero\n        /* \"#utility.yul\":4840:4885   */\n      and\n        /* \"#utility.yul\":4837:4908   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":4888:4906   */\n      tag_177\n      tag_146\n      jump\t// in\n    tag_177:\n      pop\n        /* \"#utility.yul\":4928:4937   */\n      mul\n      swap1\n        /* \"#utility.yul\":4775:4943   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e7197829f3e9b523222b85a478354d38c59ef90ef69f7dc07ba68e902579315864736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_364": {
									"entryPoint": null,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506b04be37ea7317415c45800000600155600480546001600160a01b03191633179055610a62806100426000396000f3fe608060405234801561001057600080fd5b50600436106100c85760003560e01c806381008568116100815780638cdb7e8b1161005b5780638cdb7e8b146101dc57806396074e7014610224578063efdd87961461023757600080fd5b8063810085681461012d578063893d20e8146101b85780638b2b423a146101d357600080fd5b8063338dbf59116100b2578063338dbf5914610108578063549dee0b146101115780637d3bca761461011a57600080fd5b80625171f4146100cd5780631d77b00b146100f3575b600080fd5b6100e06100db366004610961565b61023f565b6040519081526020015b60405180910390f35b610106610101366004610961565b61035d565b005b6100e060025481565b6100e060005481565b6100e0610128366004610961565b61039f565b61019261013b366004610961565b6001600160a01b0316600090815260036020818152604092839020835160808101855281548082526001830154938201849052600283015460ff161515958201869052919093015460609093018390529390929190565b6040805194855260208501939093529015159183019190915260608201526080016100ea565b6004546040516001600160a01b0390911681526020016100ea565b6100e060015481565b6101ef6101ea366004610961565b610497565b6040516100ea919081518152602080830151908201526040808301511515908201526060918201519181019190915260800190565b61010661023236600461097c565b610514565b610106610641565b600061024961064f565b6001600160a01b0382166000908152600360205260409020600101546102b65760405162461bcd60e51b815260206004820152600e60248201527f4e6f20546f6b656e73204c65667400000000000000000000000000000000000060448201526064015b60405180910390fd5b60006102c1836106ab565b9050600081116103135760405162461bcd60e51b815260206004820152601c60248201527f4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f770000000060448201526064016102ad565b6001600160a01b0383166000908152600360205260409020600101546103399082610913565b6001600160a01b03841660009081526003602052604090206001015590505b919050565b61036561064f565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006103a961064f565b6001600160a01b0382166000908152600360205260409020600101546104115760405162461bcd60e51b815260206004820152601360248201527f55736572206e6f7420526567697374657265640000000000000000000000000060448201526064016102ad565b600160008082825461042391906109bc565b90915550506001600160a01b038216600090815260036020526040812060019081015481549092906104569084906109d3565b9091555050506001600160a01b0316600090815260036020819052604082206001810180548483559084905560028201805460ff1916905591019190915590565b6104c460405180608001604052806000815260200160008152602001600015158152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160808101855281548152600182015492810192909252600281015460ff16151593820193909352910154606082015290565b61051c61064f565b60015481111561056e5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420546f74616c2042616c616e636500000000000060448201526064016102ad565b6001600160a01b038216600090815260036020526040902060010154156105d75760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74206164642052656769737465726564205573657200000000000060448201526064016102ad565b6001600160a01b03821660009081526003602081905260408220838155600180820185905560028201805460ff1916905591018190558154909190819061061f9084906109d3565b92505081905550806001600082825461063891906109bc565b90915550505050565b61064961064f565b42600255565b6004546001600160a01b031633146106a95760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a656400000000000000000000000000000000000060448201526064016102ad565b565b600080600062015180600254426106c291906109bc565b6106cc91906109eb565b90506101e0811015610790576001600160a01b03841660009081526003602052604090206002015460ff1661076a576001600160a01b0384166000908152600360205260409020546107419061073a90610732906a3cb5feec27901169e0000090610926565b600154610932565b839061093e565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260409091206101c29101556108bf565b6101e081101580156107a3575061034881105b156108bf576001600160a01b03841660009081526003602052604090206002015460ff1661082b576001600160a01b0384166000908152600360205260409020546108029061073a90610732906a3cb5feec27901169e0000090610926565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260408220015461085190836109bc565b6001600160a01b0386166000908152600360205260409020549091506108929061088b90610732906a03290914be1afb7508000090610926565b849061093e565b61089c9082610a0d565b6001600160a01b0386166000908152600360208190526040909120018390559250505b8161090c5760405162461bcd60e51b815260206004820152601460248201527f4e6f7468696e6720746f20636c61696d2079657400000000000000000000000060448201526064016102ad565b5092915050565b600061091f82846109bc565b9392505050565b600061091f8284610a0d565b600061091f82846109eb565b600061091f82846109d3565b80356001600160a01b038116811461035857600080fd5b60006020828403121561097357600080fd5b61091f8261094a565b6000806040838503121561098f57600080fd5b6109988361094a565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156109ce576109ce6109a6565b500390565b600082198211156109e6576109e66109a6565b500190565b600082610a0857634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610a2757610a276109a6565b50029056fea2646970667358221220e7197829f3e9b523222b85a478354d38c59ef90ef69f7dc07ba68e902579315864736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH12 0x4BE37EA7317415C45800000 PUSH1 0x1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xA62 DUP1 PUSH2 0x42 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81008568 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0x8CDB7E8B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8CDB7E8B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x96074E70 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xEFDD8796 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81008568 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x8B2B423A EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x338DBF59 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x549DEE0B EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x7D3BCA76 EQ PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x5171F4 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0 PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE0 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST PUSH2 0x192 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP6 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x60 SWAP1 SWAP4 ADD DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xEA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEA JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E73204C656674000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C1 DUP4 PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E7320746F2052656C6561736520666F72204E6F7700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x339 SWAP1 DUP3 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x365 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x411 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F74205265676973746572656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP2 SLOAD SWAP1 SWAP3 SWAP1 PUSH2 0x456 SWAP1 DUP5 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP5 DUP4 SSTORE SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x4C4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420546F74616C2042616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742061646420526567697374657265642055736572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD DUP2 SWAP1 SSTORE DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x61F SWAP1 DUP5 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x649 PUSH2 0x64F JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x15180 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP PUSH2 0x1E0 DUP2 LT ISZERO PUSH2 0x790 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x76A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x741 SWAP1 PUSH2 0x73A SWAP1 PUSH2 0x732 SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x932 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x1C2 SWAP2 ADD SSTORE PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x1E0 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x7A3 JUMPI POP PUSH2 0x348 DUP2 LT JUMPDEST ISZERO PUSH2 0x8BF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x82B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x802 SWAP1 PUSH2 0x73A SWAP1 PUSH2 0x732 SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH2 0x851 SWAP1 DUP4 PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x892 SWAP1 PUSH2 0x88B SWAP1 PUSH2 0x732 SWAP1 PUSH11 0x3290914BE1AFB75080000 SWAP1 PUSH2 0x926 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x89C SWAP1 DUP3 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD DUP4 SWAP1 SSTORE SWAP3 POP POP JUMPDEST DUP2 PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20636C61696D20796574000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91F DUP3 DUP5 PUSH2 0x9BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91F DUP3 DUP5 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91F DUP3 DUP5 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91F DUP3 DUP5 PUSH2 0x9D3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x973 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91F DUP3 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x998 DUP4 PUSH2 0x94A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9CE JUMPI PUSH2 0x9CE PUSH2 0x9A6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0x9A6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA08 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA27 JUMPI PUSH2 0xA27 PUSH2 0x9A6 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 NOT PUSH25 0x29F3E9B523222B85A478354D38C59EF90EF69F7DC07BA68E90 0x25 PUSH26 0x315864736F6C634300080B003300000000000000000000000000 ",
							"sourceMap": "123:5335:1:-:0;;;721:97;;;;;;;;;-1:-1:-1;765:17:1;745;:37;792:6;:19;;-1:-1:-1;;;;;;792:19:1;801:10;792:19;;;123:5335;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateClaimableAmount_620": {
									"entryPoint": 1707,
									"id": 620,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_onlyTalax_376": {
									"entryPoint": 1615,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addBeneficiary_683": {
									"entryPoint": 1300,
									"id": 683,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 2366,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@beneficiary_434": {
									"entryPoint": null,
									"id": 434,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@changeTalaxAddress_395": {
									"entryPoint": 861,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deleteBeneficiary_728": {
									"entryPoint": 927,
									"id": 728,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 2354,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_403": {
									"entryPoint": null,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasWhitelist_458": {
									"entryPoint": 1175,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initiateWhitelist_445": {
									"entryPoint": 1601,
									"id": 445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_205": {
									"entryPoint": 2342,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@privateSaleAmount_321": {
									"entryPoint": null,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleUsers_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseClaimable_778": {
									"entryPoint": 575,
									"id": 778,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startPrivateSale_333": {
									"entryPoint": null,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 2323,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_WhitelistStruct_$342_memory_ptr__to_t_struct$_WhitelistStruct_$342_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5294:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:2"
															},
															"nodeType": "YulIf",
															"src": "111:93:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "14:196:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:2"
															},
															"nodeType": "YulIf",
															"src": "295:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:2",
														"type": ""
													}
												],
												"src": "215:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "507:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "517:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "529:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "517:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "559:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "570:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "487:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "498:4:2",
														"type": ""
													}
												],
												"src": "406:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:222:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "777:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "800:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "777:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "820:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "831:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "813:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "813:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "858:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "869:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "854:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "854:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "874:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "901:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "912:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "897:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "897:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "931:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "924:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "924:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "917:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "917:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "890:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "890:50:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "960:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "971:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:18:2"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "949:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "949:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "949:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "712:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "723:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "731:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "739:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "747:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "758:4:2",
														"type": ""
													}
												],
												"src": "588:401:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1095:125:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1105:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1117:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1128:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1113:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1105:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1147:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1162:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1170:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1158:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1158:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1140:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1140:74:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1064:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1075:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1086:4:2",
														"type": ""
													}
												],
												"src": "994:226:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1390:289:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1400:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1412:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1423:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1408:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1408:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1400:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1460:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1454:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1436:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1436:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1436:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1488:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1499:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1484:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1484:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1516:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1524:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1512:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1512:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1506:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1506:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1477:54:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1551:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1562:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1547:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1547:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value0",
																										"nodeType": "YulIdentifier",
																										"src": "1593:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1601:4:2",
																										"type": "",
																										"value": "0x40"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1589:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1589:17:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "1583:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1583:24:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1576:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1576:32:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1569:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1569:40:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1540:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1540:70:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1540:70:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1630:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1641:4:2",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1626:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1626:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1658:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1666:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1654:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1654:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1648:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1619:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1619:54:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_WhitelistStruct_$342_memory_ptr__to_t_struct$_WhitelistStruct_$342_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1359:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1370:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1381:4:2",
														"type": ""
													}
												],
												"src": "1225:454:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1771:167:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1817:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1826:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1829:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1819:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1819:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1819:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1792:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1801:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1788:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1788:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1813:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1784:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:32:2"
															},
															"nodeType": "YulIf",
															"src": "1781:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1842:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1871:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1852:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1890:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1917:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1928:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1913:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1913:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1900:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1900:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1890:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1729:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1740:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1752:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1760:6:2",
														"type": ""
													}
												],
												"src": "1684:254:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2117:164:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2134:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2145:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2127:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2168:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2179:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2164:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2164:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2184:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2157:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2157:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2207:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2218:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2203:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2203:18:2"
																	},
																	{
																		"hexValue": "4e6f20546f6b656e73204c656674",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2223:16:2",
																		"type": "",
																		"value": "No Tokens Left"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2196:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2196:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2196:44:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2261:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2272:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2257:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2249:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2094:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2108:4:2",
														"type": ""
													}
												],
												"src": "1943:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:178:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2477:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2511:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2522:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2507:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2507:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2527:2:2",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2500:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2500:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2500:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2550:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2561:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2546:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2546:18:2"
																	},
																	{
																		"hexValue": "4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2566:30:2",
																		"type": "",
																		"value": "No Tokens to Release for Now"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2539:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2539:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2539:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2606:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2618:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2629:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2614:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2614:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2606:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2437:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2451:4:2",
														"type": ""
													}
												],
												"src": "2286:352:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2817:169:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2834:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2845:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2827:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2827:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2868:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2879:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2864:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2864:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2884:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2857:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2857:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2907:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2918:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2903:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2903:18:2"
																	},
																	{
																		"hexValue": "55736572206e6f742052656769737465726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2923:21:2",
																		"type": "",
																		"value": "User not Registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2896:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2896:49:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2954:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2966:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2977:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2962:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2954:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2794:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2808:4:2",
														"type": ""
													}
												],
												"src": "2643:343:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3023:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3040:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3033:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3137:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3140:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3130:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3161:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3164:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3154:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3154:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2991:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3229:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3251:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3253:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3253:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3253:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3245:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3248:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3242:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3242:8:2"
															},
															"nodeType": "YulIf",
															"src": "3239:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3282:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3294:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3297:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3290:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3282:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3211:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3214:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3220:4:2",
														"type": ""
													}
												],
												"src": "3180:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3358:80:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3385:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3387:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3387:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3387:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3374:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3381:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3377:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3371:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:13:2"
															},
															"nodeType": "YulIf",
															"src": "3368:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3416:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3427:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3430:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3423:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3416:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3341:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3344:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3350:3:2",
														"type": ""
													}
												],
												"src": "3310:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3617:176:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3634:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3668:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3679:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3664:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3664:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3684:2:2",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3657:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3657:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3707:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3718:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3703:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3703:18:2"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420546f74616c2042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3723:28:2",
																		"type": "",
																		"value": "Insufficient Total Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3696:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3761:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3773:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3784:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3769:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3769:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3761:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3594:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3608:4:2",
														"type": ""
													}
												],
												"src": "3443:350:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3972:176:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3989:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4000:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3982:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3982:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4023:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4034:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4019:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4039:2:2",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4012:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4012:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4012:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4062:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4073:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4058:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4058:18:2"
																	},
																	{
																		"hexValue": "43616e6e6f742061646420526567697374657265642055736572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4078:28:2",
																		"type": "",
																		"value": "Cannot add Registered User"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4051:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4051:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4116:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4128:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4124:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4124:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4116:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3949:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3963:4:2",
														"type": ""
													}
												],
												"src": "3798:350:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4327:164:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4344:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4355:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4337:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4337:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4337:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4378:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4389:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4374:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4374:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4394:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4367:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4367:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4367:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4417:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4428:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4413:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4413:18:2"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4433:16:2",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4406:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4406:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4406:44:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4459:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4471:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4482:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4467:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4467:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4459:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4304:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4318:4:2",
														"type": ""
													}
												],
												"src": "4153:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4542:228:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4573:168:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4594:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4597:77:2",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4587:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4587:88:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4587:88:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4695:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4698:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4688:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4688:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4688:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4723:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4726:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4716:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4716:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4716:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4562:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4555:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4555:9:2"
															},
															"nodeType": "YulIf",
															"src": "4552:189:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4750:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4759:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4762:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4750:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4527:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4530:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4536:1:2",
														"type": ""
													}
												],
												"src": "4496:274:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4827:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4886:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4888:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4888:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4888:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4858:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4851:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4851:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4844:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4844:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4866:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4877:1:2",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4873:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4873:6:2"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4881:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4869:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4869:14:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4863:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4863:21:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4840:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:45:2"
															},
															"nodeType": "YulIf",
															"src": "4837:71:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4917:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4932:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4935:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4928:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4928:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4917:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4806:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4809:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4815:7:2",
														"type": ""
													}
												],
												"src": "4775:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5122:170:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5139:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5150:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5132:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5132:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5132:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5173:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5184:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5169:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5169:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5162:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5162:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5162:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5212:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5223:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5208:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5208:18:2"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d20796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5228:22:2",
																		"type": "",
																		"value": "Nothing to claim yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5201:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5201:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5260:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5272:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5283:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5268:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5260:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5099:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5113:4:2",
														"type": ""
													}
												],
												"src": "4948:344:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_struct$_WhitelistStruct_$342_memory_ptr__to_t_struct$_WhitelistStruct_$342_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, 0x40)))))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No Tokens Left\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"No Tokens to Release for Now\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"User not Registered\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Insufficient Total Balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Cannot add Registered User\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Nothing to claim yet\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c85760003560e01c806381008568116100815780638cdb7e8b1161005b5780638cdb7e8b146101dc57806396074e7014610224578063efdd87961461023757600080fd5b8063810085681461012d578063893d20e8146101b85780638b2b423a146101d357600080fd5b8063338dbf59116100b2578063338dbf5914610108578063549dee0b146101115780637d3bca761461011a57600080fd5b80625171f4146100cd5780631d77b00b146100f3575b600080fd5b6100e06100db366004610961565b61023f565b6040519081526020015b60405180910390f35b610106610101366004610961565b61035d565b005b6100e060025481565b6100e060005481565b6100e0610128366004610961565b61039f565b61019261013b366004610961565b6001600160a01b0316600090815260036020818152604092839020835160808101855281548082526001830154938201849052600283015460ff161515958201869052919093015460609093018390529390929190565b6040805194855260208501939093529015159183019190915260608201526080016100ea565b6004546040516001600160a01b0390911681526020016100ea565b6100e060015481565b6101ef6101ea366004610961565b610497565b6040516100ea919081518152602080830151908201526040808301511515908201526060918201519181019190915260800190565b61010661023236600461097c565b610514565b610106610641565b600061024961064f565b6001600160a01b0382166000908152600360205260409020600101546102b65760405162461bcd60e51b815260206004820152600e60248201527f4e6f20546f6b656e73204c65667400000000000000000000000000000000000060448201526064015b60405180910390fd5b60006102c1836106ab565b9050600081116103135760405162461bcd60e51b815260206004820152601c60248201527f4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f770000000060448201526064016102ad565b6001600160a01b0383166000908152600360205260409020600101546103399082610913565b6001600160a01b03841660009081526003602052604090206001015590505b919050565b61036561064f565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006103a961064f565b6001600160a01b0382166000908152600360205260409020600101546104115760405162461bcd60e51b815260206004820152601360248201527f55736572206e6f7420526567697374657265640000000000000000000000000060448201526064016102ad565b600160008082825461042391906109bc565b90915550506001600160a01b038216600090815260036020526040812060019081015481549092906104569084906109d3565b9091555050506001600160a01b0316600090815260036020819052604082206001810180548483559084905560028201805460ff1916905591019190915590565b6104c460405180608001604052806000815260200160008152602001600015158152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160808101855281548152600182015492810192909252600281015460ff16151593820193909352910154606082015290565b61051c61064f565b60015481111561056e5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420546f74616c2042616c616e636500000000000060448201526064016102ad565b6001600160a01b038216600090815260036020526040902060010154156105d75760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74206164642052656769737465726564205573657200000000000060448201526064016102ad565b6001600160a01b03821660009081526003602081905260408220838155600180820185905560028201805460ff1916905591018190558154909190819061061f9084906109d3565b92505081905550806001600082825461063891906109bc565b90915550505050565b61064961064f565b42600255565b6004546001600160a01b031633146106a95760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a656400000000000000000000000000000000000060448201526064016102ad565b565b600080600062015180600254426106c291906109bc565b6106cc91906109eb565b90506101e0811015610790576001600160a01b03841660009081526003602052604090206002015460ff1661076a576001600160a01b0384166000908152600360205260409020546107419061073a90610732906a3cb5feec27901169e0000090610926565b600154610932565b839061093e565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260409091206101c29101556108bf565b6101e081101580156107a3575061034881105b156108bf576001600160a01b03841660009081526003602052604090206002015460ff1661082b576001600160a01b0384166000908152600360205260409020546108029061073a90610732906a3cb5feec27901169e0000090610926565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260408220015461085190836109bc565b6001600160a01b0386166000908152600360205260409020549091506108929061088b90610732906a03290914be1afb7508000090610926565b849061093e565b61089c9082610a0d565b6001600160a01b0386166000908152600360208190526040909120018390559250505b8161090c5760405162461bcd60e51b815260206004820152601460248201527f4e6f7468696e6720746f20636c61696d2079657400000000000000000000000060448201526064016102ad565b5092915050565b600061091f82846109bc565b9392505050565b600061091f8284610a0d565b600061091f82846109eb565b600061091f82846109d3565b80356001600160a01b038116811461035857600080fd5b60006020828403121561097357600080fd5b61091f8261094a565b6000806040838503121561098f57600080fd5b6109988361094a565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156109ce576109ce6109a6565b500390565b600082198211156109e6576109e66109a6565b500190565b600082610a0857634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610a2757610a276109a6565b50029056fea2646970667358221220e7197829f3e9b523222b85a478354d38c59ef90ef69f7dc07ba68e902579315864736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81008568 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0x8CDB7E8B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8CDB7E8B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x96074E70 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xEFDD8796 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81008568 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x8B2B423A EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x338DBF59 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x549DEE0B EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x7D3BCA76 EQ PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x5171F4 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0 PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE0 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST PUSH2 0x192 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP6 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x60 SWAP1 SWAP4 ADD DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xEA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEA JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E73204C656674000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C1 DUP4 PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E7320746F2052656C6561736520666F72204E6F7700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x339 SWAP1 DUP3 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x365 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x411 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F74205265676973746572656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP2 SLOAD SWAP1 SWAP3 SWAP1 PUSH2 0x456 SWAP1 DUP5 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP5 DUP4 SSTORE SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x4C4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420546F74616C2042616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742061646420526567697374657265642055736572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD DUP2 SWAP1 SSTORE DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x61F SWAP1 DUP5 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x649 PUSH2 0x64F JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x15180 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP PUSH2 0x1E0 DUP2 LT ISZERO PUSH2 0x790 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x76A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x741 SWAP1 PUSH2 0x73A SWAP1 PUSH2 0x732 SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x932 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x1C2 SWAP2 ADD SSTORE PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x1E0 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x7A3 JUMPI POP PUSH2 0x348 DUP2 LT JUMPDEST ISZERO PUSH2 0x8BF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x82B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x802 SWAP1 PUSH2 0x73A SWAP1 PUSH2 0x732 SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH2 0x851 SWAP1 DUP4 PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x892 SWAP1 PUSH2 0x88B SWAP1 PUSH2 0x732 SWAP1 PUSH11 0x3290914BE1AFB75080000 SWAP1 PUSH2 0x926 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x89C SWAP1 DUP3 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD DUP4 SWAP1 SSTORE SWAP3 POP POP JUMPDEST DUP2 PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20636C61696D20796574000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AD JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91F DUP3 DUP5 PUSH2 0x9BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91F DUP3 DUP5 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91F DUP3 DUP5 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91F DUP3 DUP5 PUSH2 0x9D3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x973 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91F DUP3 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x998 DUP4 PUSH2 0x94A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9CE JUMPI PUSH2 0x9CE PUSH2 0x9A6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0x9A6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA08 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA27 JUMPI PUSH2 0xA27 PUSH2 0x9A6 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 NOT PUSH25 0x29F3E9B523222B85A478354D38C59EF90EF69F7DC07BA68E90 0x25 PUSH26 0x315864736F6C634300080B003300000000000000000000000000 ",
							"sourceMap": "123:5335:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4953:503;;;;;;:::i;:::-;;:::i;:::-;;;552:25:2;;;540:2;525:18;4953:503:1;;;;;;;;1208:93;;;;;;:::i;:::-;;:::i;:::-;;385:31;;;;;;180;;;;;;4477:389;;;;;;:::i;:::-;;:::i;1391:397::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1609:18:1;1486:7;1609:18;;;:12;:18;;;;;;;;;1578:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:397;;;;;813:25:2;;;869:2;854:18;;847:34;;;;924:14;;917:22;897:18;;;890:50;;;;971:2;956:18;;949:34;800:3;785:19;1391:397:1;588:401:2;1307:78:1;1372:6;;1307:78;;-1:-1:-1;;;;;1372:6:1;;;1140:74:2;;1128:2;1113:18;1307:78:1;994:226:2;218:32:1;;;;;;1899:153;;;;;;:::i;:::-;;:::i;:::-;;;;;;1454:13:2;;1436:32;;1524:4;1512:17;;;1506:24;1484:20;;;1477:54;1601:4;1589:17;;;1583:24;1576:32;1569:40;1547:20;;;1540:70;1666:4;1654:17;;;1648:24;1626:20;;;1619:54;;;;1423:3;1408:19;;1225:454;3953:518:1;;;;;;:::i;:::-;;:::i;1794:99::-;;;:::i;4953:503::-;5045:7;1066:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:18:1;::::1;5104:1;5076:18:::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;5068:56:::1;;;::::0;-1:-1:-1;;;5068:56:1;;2145:2:2;5068:56:1::1;::::0;::::1;2127:21:2::0;2184:2;2164:18;;;2157:30;2223:16;2203:18;;;2196:44;2257:18;;5068:56:1::1;;;;;;;;;5135:29;5167:31;5193:4;5167:25;:31::i;:::-;5135:63;;5241:1;5217:21;:25;5209:66;;;::::0;-1:-1:-1;;;5209:66:1;;2488:2:2;5209:66:1::1;::::0;::::1;2470:21:2::0;2527:2;2507:18;;;2500:30;2566;2546:18;;;2539:58;2614:18;;5209:66:1::1;2286:352:2::0;5209:66:1::1;-1:-1:-1::0;;;;;5340:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;5314:96:::1;::::0;5379:21;5314:12:::1;:96::i;:::-;-1:-1:-1::0;;;;;5286:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;:124:::0;5428:21;-1:-1:-1;1088:1:1::1;4953:503:::0;;;:::o;1208:93::-;1066:12;:10;:12::i;:::-;1280:6:::1;:14:::0;;;::::1;-1:-1:-1::0;;;;;1280:14:1;;;::::1;::::0;;;::::1;::::0;;1208:93::o;4477:389::-;4570:7;1066:12;:10;:12::i;:::-;-1:-1:-1;;;;;4601:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;4593:62:::1;;;::::0;-1:-1:-1;;;4593:62:1;;2845:2:2;4593:62:1::1;::::0;::::1;2827:21:2::0;2884:2;2864:18;;;2857:30;2923:21;2903:18;;;2896:49;2962:18;;4593:62:1::1;2643:343:2::0;4593:62:1::1;4685:1;4665:16;::::0;:21:::1;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4717:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;::::0;;::::1;::::0;4696:46;;4717:25;;:18;4696:46:::1;::::0;4717:25;;4696:46:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;;4772:18:1::1;4752:17;4772:18:::0;;;:12:::1;:18;::::0;;;;;;:25:::1;::::0;::::1;::::0;;4808;;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;4808:25:1::1;::::0;;;::::1;::::0;;;;4772;4477:389::o;1899:153::-;1982:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1982:22:1;-1:-1:-1;;;;;;2027:18:1;;;;;:12;:18;;;;;;;;;2020:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1899:153::o;3953:518::-;1066:12;:10;:12::i;:::-;4074:17:::1;;4064:6;:27;;4056:66;;;::::0;-1:-1:-1;;;4056:66:1;;3645:2:2;4056:66:1::1;::::0;::::1;3627:21:2::0;3684:2;3664:18;;;3657:30;3723:28;3703:18;;;3696:56;3769:18;;4056:66:1::1;3443:350:2::0;4056:66:1::1;-1:-1:-1::0;;;;;4140:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;:30;4132:69:::1;;;::::0;-1:-1:-1;;;4132:69:1;;4000:2:2;4132:69:1::1;::::0;::::1;3982:21:2::0;4039:2;4019:18;;;4012:30;4078:28;4058:18;;;4051:56;4124:18;;4132:69:1::1;3798:350:2::0;4132:69:1::1;-1:-1:-1::0;;;;;4212:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;;;:40;;;4262:25:::1;::::0;;::::1;:34:::0;;;4306::::1;::::0;::::1;:42:::0;;-1:-1:-1;;4306:42:1::1;::::0;;4358:33;::::1;:37:::0;;;4406:21;;4262:25;;4212:18;;;4406:21:::1;::::0;4262:25;;4406:21:::1;:::i;:::-;;;;;;;;4458:6;4437:17;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;3953:518:1:o;1794:99::-;1066:12;:10;:12::i;:::-;1871:15:::1;1852:16;:34:::0;1794:99::o;929:100::-;997:6;;-1:-1:-1;;;;;997:6:1;983:10;:20;975:47;;;;-1:-1:-1;;;975:47:1;;4355:2:2;975:47:1;;;4337:21:2;4394:2;4374:18;;;4367:30;4433:16;4413:18;;;4406:44;4467:18;;975:47:1;4153:338:2;975:47:1;929:100::o;2157:1790::-;2240:7;2263:17;2291:20;2353:6;2333:16;;2315:15;:34;;;;:::i;:::-;2314:45;;;;:::i;:::-;2291:68;;2442:7;2427:12;:22;2423:1434;;;-1:-1:-1;;;;;2469:18:1;;;;;;:12;:18;;;;;:34;;;;;2465:363;;-1:-1:-1;;;;;2639:18:1;;;;;;:12;:18;;;;;:31;2544:210;;2579:157;;2617:54;;292:15;;2617:12;:54::i;:::-;2697:17;;2579:12;:157::i;:::-;2544:9;;:13;:210::i;:::-;-1:-1:-1;;;;;2772:18:1;;;;;;:12;:18;;;;;:34;;:41;;-1:-1:-1;;2772:41:1;2809:4;2772:41;;;2532:222;-1:-1:-1;2465:363:1;-1:-1:-1;;;;;2841:18:1;;;;;;:12;:18;;;;;;;;2877:7;2841:33;;:43;2423:1434;;;2980:7;2964:12;:23;;:49;;;;;3006:7;2991:12;:22;2964:49;2960:897;;;-1:-1:-1;;;;;3033:18:1;;;;;;:12;:18;;;;;:34;;;;;3029:363;;-1:-1:-1;;;;;3203:18:1;;;;;;:12;:18;;;;;:31;3108:210;;3143:157;;3181:54;;292:15;;3181:12;:54::i;3108:210::-;-1:-1:-1;;;;;3336:18:1;;;;;;:12;:18;;;;;:34;;:41;;-1:-1:-1;;3336:41:1;3373:4;3336:41;;;3096:222;-1:-1:-1;3029:363:1;-1:-1:-1;;;;;3464:18:1;;3406:24;3464:18;;;:12;:18;;;;;;;:33;;3433:64;;:12;:64;:::i;:::-;-1:-1:-1;;;;;3669:18:1;;;;;;:12;:18;;;;;:31;3406:91;;-1:-1:-1;3574:210:1;;3609:157;;3647:54;;349:14;;3647:12;:54::i;3609:157::-;3574:9;;:13;:210::i;:::-;3539:245;;:16;:245;:::i;:::-;-1:-1:-1;;;;;3798:18:1;;;;;;:12;:18;;;;;;;;:33;:48;;;3511:273;-1:-1:-1;;2960:897:1;3875:14;3867:47;;;;-1:-1:-1;;;3867:47:1;;5150:2:2;3867:47:1;;;5132:21:2;5189:2;5169:18;;;5162:30;5228:22;5208:18;;;5201:50;5268:18;;3867:47:1;4948:344:2;3867:47:1;-1:-1:-1;3931:9:1;2157:1790;-1:-1:-1;;2157:1790:1:o;3108:96:0:-;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:0:o;3451:::-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;14:196:2:-;82:20;;-1:-1:-1;;;;;131:54:2;;121:65;;111:93;;200:1;197;190:12;215:186;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;1684:254::-;1752:6;1760;1813:2;1801:9;1792:7;1788:23;1784:32;1781:52;;;1829:1;1826;1819:12;1781:52;1852:29;1871:9;1852:29;:::i;:::-;1842:39;1928:2;1913:18;;;;1900:32;;-1:-1:-1;;;1684:254:2:o;2991:184::-;-1:-1:-1;;;3040:1:2;3033:88;3140:4;3137:1;3130:15;3164:4;3161:1;3154:15;3180:125;3220:4;3248:1;3245;3242:8;3239:34;;;3253:18;;:::i;:::-;-1:-1:-1;3290:9:2;;3180:125::o;3310:128::-;3350:3;3381:1;3377:6;3374:1;3371:13;3368:39;;;3387:18;;:::i;:::-;-1:-1:-1;3423:9:2;;3310:128::o;4496:274::-;4536:1;4562;4552:189;;-1:-1:-1;;;4594:1:2;4587:88;4698:4;4695:1;4688:15;4726:4;4723:1;4716:15;4552:189;-1:-1:-1;4755:9:2;;4496:274::o;4775:168::-;4815:7;4881:1;4877;4873:6;4869:14;4866:1;4863:21;4858:1;4851:9;4844:17;4840:45;4837:71;;;4888:18;;:::i;:::-;-1:-1:-1;4928:9:2;;4775:168::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "531600",
								"executionCost": "46909",
								"totalCost": "578509"
							},
							"external": {
								"addBeneficiary(address,uint256)": "146128",
								"beneficiary(address)": "9103",
								"changeTalaxAddress(address)": "26766",
								"deleteBeneficiary(address)": "97045",
								"getOwner()": "2346",
								"hasWhitelist(address)": "9247",
								"initiateWhitelist()": "24479",
								"privateSaleAmount()": "2351",
								"privateSaleUsers()": "2329",
								"releaseClaimable(address)": "infinite",
								"startPrivateSale()": "2307"
							},
							"internal": {
								"_calculateClaimableAmount(address)": "infinite",
								"_onlyTalax()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 123,
									"end": 5458,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 123,
									"end": 5458,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 123,
									"end": 5458,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 721,
									"end": 818,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 721,
									"end": 818,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 721,
									"end": 818,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 721,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 721,
									"end": 818,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 721,
									"end": 818,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 721,
									"end": 818,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 721,
									"end": 818,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 721,
									"end": 818,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 721,
									"end": 818,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 765,
									"end": 782,
									"name": "PUSH",
									"source": 1,
									"value": "4BE37EA7317415C45800000"
								},
								{
									"begin": 745,
									"end": 762,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 745,
									"end": 782,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 792,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 792,
									"end": 811,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 792,
									"end": 811,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 792,
									"end": 811,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 801,
									"end": 811,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 792,
									"end": 811,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 792,
									"end": 811,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 792,
									"end": 811,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5458,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 5458,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5458,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 5458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5458,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5458,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7197829f3e9b523222b85a478354d38c59ef90ef69f7dc07ba68e902579315864736f6c634300080b0033",
									".code": [
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "81008568"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "8CDB7E8B"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "8CDB7E8B"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "96074E70"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "EFDD8796"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "81008568"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "893D20E8"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "8B2B423A"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "338DBF59"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "338DBF59"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "549DEE0B"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "7D3BCA76"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "5171F4"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "1D77B00B"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 552,
											"end": 577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 577,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 385,
											"end": 416,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 385,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 385,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 416,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 385,
											"end": 416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 385,
											"end": 416,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 180,
											"end": 211,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 180,
											"end": 211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 180,
											"end": 211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 180,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 180,
											"end": 211,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 813,
											"end": 838,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 869,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 872,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 854,
											"end": 872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 847,
											"end": 881,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 847,
											"end": 881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 881,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 847,
											"end": 881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 924,
											"end": 938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 924,
											"end": 938,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 917,
											"end": 939,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 897,
											"end": 915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 915,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 897,
											"end": 915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 940,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 956,
											"end": 974,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 800,
											"end": 803,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 785,
											"end": 804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 588,
											"end": 989,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1385,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1307,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 994,
											"end": 1220,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 250,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 218,
											"end": 250,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 218,
											"end": 250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 218,
											"end": 250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 250,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1468,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1468,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 1529,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1529,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1606,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1569,
											"end": 1609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1654,
											"end": 1671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1671,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1673,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1673,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1408,
											"end": 1427,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1679,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1794,
											"end": 1893,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1794,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1794,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1794,
											"end": 1893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1066,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5101,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5101,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2187,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F20546F6B656E73204C656674000000000000000000000000000000000000"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5193,
											"end": 5197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5167,
											"end": 5198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5167,
											"end": 5198,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5167,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5217,
											"end": 5238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2491,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2529,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F20546F6B656E7320746F2052656C6561736520666F72204E6F7700000000"
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2632,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2614,
											"end": 2632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2286,
											"end": 2638,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5209,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5352,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5314,
											"end": 5410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5314,
											"end": 5410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5314,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5314,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5298,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5304,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5311,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5286,
											"end": 5311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5410,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5456,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1066,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1301,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1066,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4613,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4626,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4601,
											"end": 4626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4626,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2848,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2886,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2864,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2864,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "55736572206E6F74205265676973746572656400000000000000000000000000"
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2643,
											"end": 2986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4593,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4686,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4665,
											"end": 4681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4686,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4742,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4784,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4797,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4772,
											"end": 4797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4477,
											"end": 4866,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2052,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1066,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4091,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4074,
											"end": 4091,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4091,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3686,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3687,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3751,
											"name": "PUSH",
											"source": 2,
											"value": "496E73756666696369656E7420546F74616C2042616C616E6365000000000000"
										},
										{
											"begin": 3703,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3703,
											"end": 3721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 3752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3443,
											"end": 3793,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4056,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4152,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4140,
											"end": 4165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4170,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4002,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4003,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4041,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4012,
											"end": 4042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4078,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "43616E6E6F742061646420526567697374657265642055736572000000000000"
										},
										{
											"begin": 4058,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4058,
											"end": 4076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4058,
											"end": 4076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3798,
											"end": 4148,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4132,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4224,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4252,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4287,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4262,
											"end": 4287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4296,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4296,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4340,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4306,
											"end": 4340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4348,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4306,
											"end": 4348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4348,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4454,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4437,
											"end": 4454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3953,
											"end": 4471,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1794,
											"end": 1893,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1794,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1066,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1886,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1852,
											"end": 1886,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1893,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 983,
											"end": 993,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4396,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 4413,
											"end": 4431,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4413,
											"end": 4431,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4413,
											"end": 4431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4450,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4153,
											"end": 4491,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 975,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2157,
											"end": 3947,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2157,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "15180"
										},
										{
											"begin": 2333,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2333,
											"end": 2349,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2330,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2315,
											"end": 2349,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2315,
											"end": 2349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2349,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2315,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2314,
											"end": 2359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2314,
											"end": 2359,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2314,
											"end": 2359,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2314,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2449,
											"name": "PUSH",
											"source": 1,
											"value": "1E0"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2449,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 3857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2423,
											"end": 3857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2503,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2469,
											"end": 2503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2503,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2503,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2469,
											"end": 2503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2465,
											"end": 2828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2544,
											"end": 2754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2579,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2617,
											"end": 2671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "3CB5FEEC27901169E00000"
										},
										{
											"begin": 292,
											"end": 307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2617,
											"end": 2671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 2671,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2617,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2714,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2697,
											"end": 2714,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2579,
											"end": 2736,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2579,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2579,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2544,
											"end": 2754,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2544,
											"end": 2754,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2544,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2784,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2772,
											"end": 2813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2772,
											"end": 2813,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2813,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2465,
											"end": 2828,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2465,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2853,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2884,
											"name": "PUSH",
											"source": 1,
											"value": "1C2"
										},
										{
											"begin": 2841,
											"end": 2874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2884,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2423,
											"end": 3857,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 3857,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2423,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 2987,
											"name": "PUSH",
											"source": 1,
											"value": "1E0"
										},
										{
											"begin": 2964,
											"end": 2976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2987,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2987,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3013,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2964,
											"end": 3013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3013,
											"name": "PUSH",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3013,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3013,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2964,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 3857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2960,
											"end": 3857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3033,
											"end": 3067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3033,
											"end": 3067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3029,
											"end": 3392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3215,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3108,
											"end": 3318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3143,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3181,
											"end": 3235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "3CB5FEEC27901169E00000"
										},
										{
											"begin": 292,
											"end": 307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3181,
											"end": 3235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3108,
											"end": 3318,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3108,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3336,
											"end": 3377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3373,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3336,
											"end": 3377,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3377,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3029,
											"end": 3392,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3029,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3476,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3497,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3433,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3445,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3433,
											"end": 3497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3433,
											"end": 3497,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3433,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3700,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3574,
											"end": 3784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3609,
											"end": 3766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3647,
											"end": 3701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 349,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "3290914BE1AFB75080000"
										},
										{
											"begin": 349,
											"end": 363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3647,
											"end": 3701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3766,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3609,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3574,
											"end": 3784,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3574,
											"end": 3784,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3574,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3539,
											"end": 3784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3539,
											"end": 3784,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3539,
											"end": 3784,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3539,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3846,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3784,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2960,
											"end": 3857,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2960,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5152,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 5153,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 5169,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5169,
											"end": 5187,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5169,
											"end": 5187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5192,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7468696E6720746F20636C61696D20796574000000000000000000000000"
										},
										{
											"begin": 5208,
											"end": 5226,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5208,
											"end": 5226,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5201,
											"end": 5251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4948,
											"end": 5292,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3867,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3931,
											"end": 3940,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 3947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 3947,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1938,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1684,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1799,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1811,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1816,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1833,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1781,
											"end": 1833,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1833,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1781,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1871,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1881,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1930,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1932,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1932,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1938,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2991,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2991,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3040,
											"end": 3041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3144,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3137,
											"end": 3138,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3130,
											"end": 3145,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3305,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3180,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3245,
											"end": 3246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3250,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3273,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3239,
											"end": 3273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3290,
											"end": 3299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3290,
											"end": 3299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3305,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3310,
											"end": 3438,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3310,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3382,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3377,
											"end": 3383,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3375,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3384,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3407,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3368,
											"end": 3407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3387,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3387,
											"end": 3405,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3405,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3387,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3438,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4496,
											"end": 4770,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4496,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4536,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4552,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4552,
											"end": 4741,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4594,
											"end": 4595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4698,
											"end": 4702,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4695,
											"end": 4696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4688,
											"end": 4703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4731,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4552,
											"end": 4741,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4552,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4755,
											"end": 4764,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4755,
											"end": 4764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4496,
											"end": 4770,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4775,
											"end": 4943,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4775,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4815,
											"end": 4822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 4878,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4879,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4883,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4867,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4884,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4858,
											"end": 4859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4840,
											"end": 4885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4908,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4837,
											"end": 4908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4928,
											"end": 4937,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4928,
											"end": 4937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4775,
											"end": 4943,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addBeneficiary(address,uint256)": "96074e70",
							"beneficiary(address)": "81008568",
							"changeTalaxAddress(address)": "1d77b00b",
							"deleteBeneficiary(address)": "7d3bca76",
							"getOwner()": "893d20e8",
							"hasWhitelist(address)": "8cdb7e8b",
							"initiateWhitelist()": "efdd8796",
							"privateSaleAmount()": "8b2b423a",
							"privateSaleUsers()": "549dee0b",
							"releaseClaimable(address)": "005171f4",
							"startPrivateSale()": "338dbf59"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"deleteBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasWhitelist\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPhase1Claimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"latestClaimDay\",\"type\":\"uint256\"}],\"internalType\":\"struct Whitelist.WhitelistStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"releaseClaimable(address)\":{\"notice\":\"Transfers tokens held by timelock to beneficiary.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Whitelist.sol\":{\"keccak256\":\"0x28915498a00857b00657a9129c334f58d3d92517704bc1361b5b5c6f64052dd9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a77124737b101cc99f8c2cfed9620fbd7ba2cbd1635382ced036fbab312de2e2\",\"dweb:/ipfs/QmQ2MB5U6smmWNJP1Z9jW8WRtKkvogtvzK2zVkZRznfX2m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "privateSaleUsers",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 321,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "privateSaleAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 333,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "startPrivateSale",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 347,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "_beneficiary",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(WhitelistStruct)342_storage)"
							},
							{
								"astId": 349,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "_owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(WhitelistStruct)342_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Whitelist.WhitelistStruct)",
								"numberOfBytes": "32",
								"value": "t_struct(WhitelistStruct)342_storage"
							},
							"t_struct(WhitelistStruct)342_storage": {
								"encoding": "inplace",
								"label": "struct Whitelist.WhitelistStruct",
								"members": [
									{
										"astId": 335,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "lockedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 337,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 339,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "isPhase1Claimed",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 341,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "latestClaimDay",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"releaseClaimable(address)": {
								"notice": "Transfers tokens held by timelock to beneficiary."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Whitelist.sol": {
				"ast": {
					"absolutePath": "contracts/Whitelist.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"Whitelist": [
							779
						]
					},
					"id": 780,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 312,
							"src": "64:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Whitelist",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "Whitelist",
							"nameLocation": "132:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "154:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "148:27:1",
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "167:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "549dee0b",
									"id": 319,
									"mutability": "mutable",
									"name": "privateSaleUsers",
									"nameLocation": "195:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "180:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "180:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b2b423a",
									"id": 321,
									"mutability": "mutable",
									"name": "privateSaleAmount",
									"nameLocation": "233:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "218:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 320,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "218:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 326,
									"mutability": "constant",
									"name": "_phase1",
									"nameLocation": "282:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "256:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 322,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "256:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_73395000000000000000000000_by_1",
											"typeString": "int_const 73395000000000000000000000"
										},
										"id": 325,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3733333935303030",
											"id": 323,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "292:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_73395000_by_1",
												"typeString": "int_const 73395000"
											},
											"value": "73395000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 324,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "303:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "292:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_73395000000000000000000000_by_1",
											"typeString": "int_const 73395000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 331,
									"mutability": "constant",
									"name": "_phase2",
									"nameLocation": "339:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "313:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_3820562000000000000000000_by_1",
											"typeString": "int_const 3820562000000000000000000"
										},
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33383230353632",
											"id": 328,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "349:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3820562_by_1",
												"typeString": "int_const 3820562"
											},
											"value": "3820562"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 329,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "359:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "349:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3820562000000000000000000_by_1",
											"typeString": "int_const 3820562000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "338dbf59",
									"id": 333,
									"mutability": "mutable",
									"name": "startPrivateSale",
									"nameLocation": "400:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "385:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 332,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Whitelist.WhitelistStruct",
									"id": 342,
									"members": [
										{
											"constant": false,
											"id": 335,
											"mutability": "mutable",
											"name": "lockedAmount",
											"nameLocation": "464:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 342,
											"src": "456:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 334,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "456:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 337,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "494:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 342,
											"src": "486:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 336,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "486:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 339,
											"mutability": "mutable",
											"name": "isPhase1Claimed",
											"nameLocation": "515:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 342,
											"src": "510:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 338,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "510:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 341,
											"mutability": "mutable",
											"name": "latestClaimDay",
											"nameLocation": "548:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 342,
											"src": "540:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 340,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "540:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WhitelistStruct",
									"nameLocation": "430:15:1",
									"nodeType": "StructDefinition",
									"scope": 779,
									"src": "423:146:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 347,
									"mutability": "mutable",
									"name": "_beneficiary",
									"nameLocation": "672:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "628:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
										"typeString": "mapping(address => struct Whitelist.WhitelistStruct)"
									},
									"typeName": {
										"id": 346,
										"keyType": {
											"id": 343,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "636:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "628:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
											"typeString": "mapping(address => struct Whitelist.WhitelistStruct)"
										},
										"valueType": {
											"id": 345,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 344,
												"name": "WhitelistStruct",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "647:15:1"
											},
											"referencedDeclaration": 342,
											"src": "647:15:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage_ptr",
												"typeString": "struct Whitelist.WhitelistStruct"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "708:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "691:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 348,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "691:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "735:83:1",
										"statements": [
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 352,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "745:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_1467900000000000000000000000_by_1",
															"typeString": "int_const 1467900000000000000000000000"
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31343637393030303030",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "765:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1467900000_by_1",
																"typeString": "int_const 1467900000"
															},
															"value": "1467900000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "778:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "765:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1467900000000000000000000000_by_1",
															"typeString": "int_const 1467900000000000000000000000"
														}
													},
													"src": "745:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "745:37:1"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 358,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "792:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 359,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "801:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "801:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "792:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "792:19:1"
											}
										]
									},
									"id": 364,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "732:2:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "735:0:1"
									},
									"scope": 779,
									"src": "721:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "965:64:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 368,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "983:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "983:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 370,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "997:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "983:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1005:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "975:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "975:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "975:47:1"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyTalax",
									"nameLocation": "938:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:2:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "965:0:1"
									},
									"scope": 779,
									"src": "929:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "1056:40:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 378,
														"name": "_onlyTalax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1066:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1066:12:1"
											},
											{
												"id": 381,
												"nodeType": "PlaceholderStatement",
												"src": "1088:1:1"
											}
										]
									},
									"id": 383,
									"name": "onlyTalax",
									"nameLocation": "1044:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:2:1"
									},
									"src": "1035:61:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1270:31:1",
										"statements": [
											{
												"expression": {
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 390,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1280:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 391,
														"name": "talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "1289:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1280:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "1280:14:1"
											}
										]
									},
									"functionSelector": "1d77b00b",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 387,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "1260:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1260:9:1"
										}
									],
									"name": "changeTalaxAddress",
									"nameLocation": "1217:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1244:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1236:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1235:15:1"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1270:0:1"
									},
									"scope": 779,
									"src": "1208:93:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "1355:30:1",
										"statements": [
											{
												"expression": {
													"id": 400,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "1372:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 399,
												"id": 401,
												"nodeType": "Return",
												"src": "1365:13:1"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1316:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:2:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1347:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1347:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1346:9:1"
									},
									"scope": 779,
									"src": "1307:78:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "1568:220:1",
										"statements": [
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "benef",
														"nameLocation": "1601:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "1578:28:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
															"typeString": "struct Whitelist.WhitelistStruct"
														},
														"typeName": {
															"id": 417,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 416,
																"name": "WhitelistStruct",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 342,
																"src": "1578:15:1"
															},
															"referencedDeclaration": 342,
															"src": "1578:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage_ptr",
																"typeString": "struct Whitelist.WhitelistStruct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"baseExpression": {
														"id": 419,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "1609:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
															"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
														}
													},
													"id": 421,
													"indexExpression": {
														"id": 420,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1622:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1609:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
														"typeString": "struct Whitelist.WhitelistStruct storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1578:49:1"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 423,
																"name": "benef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1658:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lockedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 335,
															"src": "1658:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 425,
																"name": "benef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1690:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 337,
															"src": "1690:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 427,
																"name": "benef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1716:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isPhase1Claimed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 339,
															"src": "1716:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 429,
																"name": "benef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1751:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "latestClaimDay",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 341,
															"src": "1751:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 431,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1644:137:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,bool,uint256)"
													}
												},
												"functionReturnParameters": 415,
												"id": 432,
												"nodeType": "Return",
												"src": "1637:144:1"
											}
										]
									},
									"functionSelector": "81008568",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1400:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1411:14:1"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1486:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1507:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1528:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1528:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1546:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:91:1"
									},
									"scope": 779,
									"src": "1391:397:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1842:51:1",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "startPrivateSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "1852:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 440,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1871:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1871:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1852:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "1852:34:1"
											}
										]
									},
									"functionSelector": "efdd8796",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 437,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 436,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "1832:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1832:9:1"
										}
									],
									"name": "initiateWhitelist",
									"nameLocation": "1803:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1820:2:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1842:0:1"
									},
									"scope": 779,
									"src": "1794:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2010:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 453,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2027:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
															"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
														}
													},
													"id": 455,
													"indexExpression": {
														"id": 454,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "2040:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2027:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
														"typeString": "struct Whitelist.WhitelistStruct storage ref"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2020:25:1"
											}
										]
									},
									"functionSelector": "8cdb7e8b",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasWhitelist",
									"nameLocation": "1908:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1929:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1921:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:14:1"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1982:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
													"typeString": "struct Whitelist.WhitelistStruct"
												},
												"typeName": {
													"id": 450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 449,
														"name": "WhitelistStruct",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 342,
														"src": "1982:15:1"
													},
													"referencedDeclaration": 342,
													"src": "1982:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage_ptr",
														"typeString": "struct Whitelist.WhitelistStruct"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:24:1"
									},
									"scope": 779,
									"src": "1899:153:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "2253:1694:1",
										"statements": [
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "claimable",
														"nameLocation": "2271:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "2263:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2263:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"nodeType": "VariableDeclarationStatement",
												"src": "2263:17:1"
											},
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "lockDuration",
														"nameLocation": "2299:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "2291:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2291:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 471,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2315:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2315:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 473,
																	"name": "startPrivateSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "2333:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2315:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 475,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2314:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2353:6:1",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "2314:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2291:68:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "lockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "2427:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_480_by_1",
															"typeString": "int_const 480"
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3136",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2442:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3330",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2447:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"src": "2442:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_480_by_1",
															"typeString": "int_const 480"
														}
													},
													"src": "2427:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 527,
																"name": "lockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "2964:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_480_by_1",
																	"typeString": "int_const 480"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2980:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2985:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "2980:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_480_by_1",
																	"typeString": "int_const 480"
																}
															},
															"src": "2964:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "lockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "2991:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_840_by_1",
																	"typeString": "int_const 840"
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3238",
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3006:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	},
																	"value": "28"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3011:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "3006:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_840_by_1",
																	"typeString": "int_const 840"
																}
															},
															"src": "2991:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2964:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 608,
													"nodeType": "IfStatement",
													"src": "2960:897:1",
													"trueBody": {
														"id": 607,
														"nodeType": "Block",
														"src": "3015:842:1",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 538,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "3033:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																					"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																				}
																			},
																			"id": 540,
																			"indexExpression": {
																				"id": 539,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 461,
																				"src": "3046:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3033:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																				"typeString": "struct Whitelist.WhitelistStruct storage ref"
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "isPhase1Claimed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 339,
																		"src": "3033:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3071:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "3033:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 570,
																"nodeType": "IfStatement",
																"src": "3029:363:1",
																"trueBody": {
																	"id": 569,
																	"nodeType": "Block",
																	"src": "3078:314:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 544,
																					"name": "claimable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 467,
																					"src": "3096:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"id": 551,
																											"name": "_phase1",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 326,
																											"src": "3194:7:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										{
																											"expression": {
																												"baseExpression": {
																													"id": 552,
																													"name": "_beneficiary",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 347,
																													"src": "3203:12:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																														"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																													}
																												},
																												"id": 554,
																												"indexExpression": {
																													"id": 553,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 461,
																													"src": "3216:4:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "3203:18:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																													"typeString": "struct Whitelist.WhitelistStruct storage ref"
																												}
																											},
																											"id": 555,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "lockedAmount",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 335,
																											"src": "3203:31:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 549,
																											"name": "SafeMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 311,
																											"src": "3181:8:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																												"typeString": "type(library SafeMath)"
																											}
																										},
																										"id": 550,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 205,
																										"src": "3181:12:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 556,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3181:54:1",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 557,
																									"name": "privateSaleAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 321,
																									"src": "3261:17:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 547,
																									"name": "SafeMath",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 311,
																									"src": "3143:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																										"typeString": "type(library SafeMath)"
																									}
																								},
																								"id": 548,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 220,
																								"src": "3143:12:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 558,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3143:157:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 545,
																							"name": "claimable",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 467,
																							"src": "3108:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 546,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 175,
																						"src": "3108:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 559,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3108:210:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3096:222:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 561,
																			"nodeType": "ExpressionStatement",
																			"src": "3096:222:1"
																		},
																		{
																			"expression": {
																				"id": 567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 562,
																							"name": "_beneficiary",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 347,
																							"src": "3336:12:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																								"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																							}
																						},
																						"id": 564,
																						"indexExpression": {
																							"id": 563,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 461,
																							"src": "3349:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3336:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																							"typeString": "struct Whitelist.WhitelistStruct storage ref"
																						}
																					},
																					"id": 565,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "isPhase1Claimed",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 339,
																					"src": "3336:34:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "74727565",
																					"id": 566,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3373:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"src": "3336:41:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 568,
																			"nodeType": "ExpressionStatement",
																			"src": "3336:41:1"
																		}
																	]
																}
															},
															{
																"assignments": [
																	572
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 572,
																		"mutability": "mutable",
																		"name": "sinceLatestClaim",
																		"nameLocation": "3414:16:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 607,
																		"src": "3406:24:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 571,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3406:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 579,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 573,
																		"name": "lockDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "3433:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 574,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "3464:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																					"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																				}
																			},
																			"id": 576,
																			"indexExpression": {
																				"id": 575,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 461,
																				"src": "3477:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3464:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																				"typeString": "struct Whitelist.WhitelistStruct storage ref"
																			}
																		},
																		"id": 577,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestClaimDay",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 341,
																		"src": "3464:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3433:64:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3406:91:1"
															},
															{
																"expression": {
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 580,
																		"name": "claimable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "3511:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 581,
																			"name": "sinceLatestClaim",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "3539:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 588,
																									"name": "_phase2",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 331,
																									"src": "3660:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"expression": {
																										"baseExpression": {
																											"id": 589,
																											"name": "_beneficiary",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 347,
																											"src": "3669:12:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																												"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																											}
																										},
																										"id": 591,
																										"indexExpression": {
																											"id": 590,
																											"name": "user",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 461,
																											"src": "3682:4:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "3669:18:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																											"typeString": "struct Whitelist.WhitelistStruct storage ref"
																										}
																									},
																									"id": 592,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "lockedAmount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 335,
																									"src": "3669:31:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 586,
																									"name": "SafeMath",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 311,
																									"src": "3647:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																										"typeString": "type(library SafeMath)"
																									}
																								},
																								"id": 587,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 205,
																								"src": "3647:12:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 593,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3647:54:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 594,
																							"name": "privateSaleAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 321,
																							"src": "3727:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 584,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 311,
																							"src": "3609:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 585,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "div",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 220,
																						"src": "3609:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3609:157:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 582,
																					"name": "claimable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 467,
																					"src": "3574:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 175,
																				"src": "3574:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3574:210:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3539:245:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3511:273:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 599,
																"nodeType": "ExpressionStatement",
																"src": "3511:273:1"
															},
															{
																"expression": {
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 600,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "3798:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																					"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																				}
																			},
																			"id": 602,
																			"indexExpression": {
																				"id": 601,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 461,
																				"src": "3811:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3798:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																				"typeString": "struct Whitelist.WhitelistStruct storage ref"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "latestClaimDay",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 341,
																		"src": "3798:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 604,
																		"name": "lockDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "3834:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3798:48:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 606,
																"nodeType": "ExpressionStatement",
																"src": "3798:48:1"
															}
														]
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "2423:1434:1",
												"trueBody": {
													"id": 526,
													"nodeType": "Block",
													"src": "2451:444:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 484,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "2469:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																				"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																			}
																		},
																		"id": 486,
																		"indexExpression": {
																			"id": 485,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 461,
																			"src": "2482:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2469:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																			"typeString": "struct Whitelist.WhitelistStruct storage ref"
																		}
																	},
																	"id": 487,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isPhase1Claimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 339,
																	"src": "2469:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2507:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2469:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 516,
															"nodeType": "IfStatement",
															"src": "2465:363:1",
															"trueBody": {
																"id": 515,
																"nodeType": "Block",
																"src": "2514:314:1",
																"statements": [
																	{
																		"expression": {
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 490,
																				"name": "claimable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 467,
																				"src": "2532:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 497,
																										"name": "_phase1",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 326,
																										"src": "2630:7:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"expression": {
																											"baseExpression": {
																												"id": 498,
																												"name": "_beneficiary",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 347,
																												"src": "2639:12:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																													"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																												}
																											},
																											"id": 500,
																											"indexExpression": {
																												"id": 499,
																												"name": "user",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 461,
																												"src": "2652:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "2639:18:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																												"typeString": "struct Whitelist.WhitelistStruct storage ref"
																											}
																										},
																										"id": 501,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "lockedAmount",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 335,
																										"src": "2639:31:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 495,
																										"name": "SafeMath",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 311,
																										"src": "2617:8:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																											"typeString": "type(library SafeMath)"
																										}
																									},
																									"id": 496,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 205,
																									"src": "2617:12:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 502,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2617:54:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 503,
																								"name": "privateSaleAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 321,
																								"src": "2697:17:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 493,
																								"name": "SafeMath",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 311,
																								"src": "2579:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																									"typeString": "type(library SafeMath)"
																								}
																							},
																							"id": 494,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 220,
																							"src": "2579:12:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 504,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2579:157:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 491,
																						"name": "claimable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 467,
																						"src": "2544:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 492,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 175,
																					"src": "2544:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2544:210:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2532:222:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 507,
																		"nodeType": "ExpressionStatement",
																		"src": "2532:222:1"
																	},
																	{
																		"expression": {
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 508,
																						"name": "_beneficiary",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 347,
																						"src": "2772:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																							"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																						}
																					},
																					"id": 510,
																					"indexExpression": {
																						"id": 509,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 461,
																						"src": "2785:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2772:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																						"typeString": "struct Whitelist.WhitelistStruct storage ref"
																					}
																				},
																				"id": 511,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "isPhase1Claimed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 339,
																				"src": "2772:34:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2809:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "2772:41:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 514,
																		"nodeType": "ExpressionStatement",
																		"src": "2772:41:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 517,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "2841:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																				"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																			}
																		},
																		"id": 519,
																		"indexExpression": {
																			"id": 518,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 461,
																			"src": "2854:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2841:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																			"typeString": "struct Whitelist.WhitelistStruct storage ref"
																		}
																	},
																	"id": 520,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "latestClaimDay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 341,
																	"src": "2841:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_rational_450_by_1",
																		"typeString": "int_const 450"
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3135",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2877:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3330",
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2882:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		"value": "30"
																	},
																	"src": "2877:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_450_by_1",
																		"typeString": "int_const 450"
																	}
																},
																"src": "2841:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 525,
															"nodeType": "ExpressionStatement",
															"src": "2841:43:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 611,
																"name": "claimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "3875:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3888:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3875:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d20796574",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3891:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9",
																"typeString": "literal_string \"Nothing to claim yet\""
															},
															"value": "Nothing to claim yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9",
																"typeString": "literal_string \"Nothing to claim yet\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3867:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3867:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "3867:47:1"
											},
											{
												"expression": {
													"id": 617,
													"name": "claimable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 467,
													"src": "3931:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 465,
												"id": 618,
												"nodeType": "Return",
												"src": "3924:16:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2058:94:1",
										"text": "  @dev \t\tMain Functions\n  @return \tClaimable amount from Locked Wallet"
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateClaimableAmount",
									"nameLocation": "2166:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2200:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2192:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2191:14:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 779,
									"src": "2157:1790:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "4046:425:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 630,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "4064:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 631,
																"name": "privateSaleAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4074:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4064:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420546f74616c2042616c616e6365",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4093:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35",
																"typeString": "literal_string \"Insufficient Total Balance\""
															},
															"value": "Insufficient Total Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35",
																"typeString": "literal_string \"Insufficient Total Balance\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4056:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4056:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "4056:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 637,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "4140:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 639,
																	"indexExpression": {
																		"id": 638,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "4153:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4140:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 337,
																"src": "4140:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4169:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4140:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742061646420526567697374657265642055736572",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4172:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a",
																"typeString": "literal_string \"Cannot add Registered User\""
															},
															"value": "Cannot add Registered User"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a",
																"typeString": "literal_string \"Cannot add Registered User\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4132:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4132:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "4132:69:1"
											},
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 646,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4212:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 648,
															"indexExpression": {
																"id": 647,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "4225:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4212:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "4212:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 650,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "4246:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4212:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "4212:40:1"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 653,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4262:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 655,
															"indexExpression": {
																"id": 654,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "4275:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4262:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "4262:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 657,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "4290:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4262:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "4262:34:1"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 660,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4306:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 662,
															"indexExpression": {
																"id": 661,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "4319:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4306:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "isPhase1Claimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 339,
														"src": "4306:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4343:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4306:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "4306:42:1"
											},
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 667,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4358:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 669,
															"indexExpression": {
																"id": 668,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "4371:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4358:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "latestClaimDay",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "4358:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4394:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4358:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "4358:37:1"
											},
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 674,
														"name": "privateSaleUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "4406:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4426:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4406:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4406:21:1"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 678,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "4437:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 679,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "4458:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4437:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "4437:27:1"
											}
										]
									},
									"functionSelector": "96074e70",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 627,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 626,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "4032:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4032:9:1"
										}
									],
									"name": "addBeneficiary",
									"nameLocation": "3962:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3985:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "3977:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3999:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "3991:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3976:30:1"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4046:0:1"
									},
									"scope": 779,
									"src": "3953:518:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "4583:283:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 693,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "4601:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 695,
																	"indexExpression": {
																		"id": 694,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "4614:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4601:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 337,
																"src": "4601:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4630:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4601:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f742052656769737465726564",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4633:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7",
																"typeString": "literal_string \"User not Registered\""
															},
															"value": "User not Registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7",
																"typeString": "literal_string \"User not Registered\""
															}
														],
														"id": 692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4593:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4593:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "4593:62:1"
											},
											{
												"expression": {
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 702,
														"name": "privateSaleUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "4665:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4685:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4665:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "4665:21:1"
											},
											{
												"expression": {
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 706,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "4696:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 707,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4717:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 709,
															"indexExpression": {
																"id": 708,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "4730:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4717:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "4717:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4696:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "4696:46:1"
											},
											{
												"assignments": [
													714
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "ex_amount",
														"nameLocation": "4760:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "4752:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4752:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 719,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 715,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4772:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 716,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "4785:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4772:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
															"typeString": "struct Whitelist.WhitelistStruct storage ref"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 337,
													"src": "4772:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4752:45:1"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4808:25:1",
													"subExpression": {
														"baseExpression": {
															"id": 720,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4815:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
															}
														},
														"id": 722,
														"indexExpression": {
															"id": 721,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "4828:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4815:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
															"typeString": "struct Whitelist.WhitelistStruct storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "4808:25:1"
											},
											{
												"expression": {
													"id": 725,
													"name": "ex_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 714,
													"src": "4850:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 691,
												"id": 726,
												"nodeType": "Return",
												"src": "4843:16:1"
											}
										]
									},
									"functionSelector": "7d3bca76",
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 688,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 687,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "4543:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4543:9:1"
										}
									],
									"name": "deleteBeneficiary",
									"nameLocation": "4486:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4512:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "4504:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4503:14:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "4570:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4570:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4569:9:1"
									},
									"scope": 779,
									"src": "4477:389:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "5058:398:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 739,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "5076:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 741,
																	"indexExpression": {
																		"id": 740,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "5089:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 337,
																"src": "5076:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5104:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5076:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20546f6b656e73204c656674",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5107:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17",
																"typeString": "literal_string \"No Tokens Left\""
															},
															"value": "No Tokens Left"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17",
																"typeString": "literal_string \"No Tokens Left\""
															}
														],
														"id": 738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5068:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5068:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "5068:56:1"
											},
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "claimableLockedAmount",
														"nameLocation": "5143:21:1",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "5135:29:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 748,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5135:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"arguments": [
														{
															"id": 751,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "5193:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 750,
														"name": "_calculateClaimableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "5167:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5167:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5135:63:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 755,
																"name": "claimableLockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "5217:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5241:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5217:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f77",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5244:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f",
																"typeString": "literal_string \"No Tokens to Release for Now\""
															},
															"value": "No Tokens to Release for Now"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f",
																"typeString": "literal_string \"No Tokens to Release for Now\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5209:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5209:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "5209:66:1"
											},
											{
												"expression": {
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 761,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "5286:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 763,
															"indexExpression": {
																"id": 762,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "5299:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5286:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "5286:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 767,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "5340:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 769,
																	"indexExpression": {
																		"id": 768,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "5353:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5340:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 337,
																"src": "5340:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 771,
																"name": "claimableLockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "5379:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 765,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5314:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "5314:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5314:96:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5286:124:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "5286:124:1"
											},
											{
												"expression": {
													"id": 775,
													"name": "claimableLockedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 749,
													"src": "5428:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 737,
												"id": 776,
												"nodeType": "Return",
												"src": "5421:28:1"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "4872:76:1",
										"text": " @notice Transfers tokens held by timelock to beneficiary."
									},
									"functionSelector": "005171f4",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 733,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "5018:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5018:9:1"
										}
									],
									"name": "releaseClaimable",
									"nameLocation": "4962:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4987:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4979:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:14:1"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5045:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:1"
									},
									"scope": 779,
									"src": "4953:503:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 780,
							"src": "123:5335:1",
							"usedErrors": []
						}
					],
					"src": "39:5420:1"
				},
				"id": 1
			}
		}
	}
}