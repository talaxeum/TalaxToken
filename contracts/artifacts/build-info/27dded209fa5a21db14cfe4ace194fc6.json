{
	"id": "27dded209fa5a21db14cfe4ace194fc6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WhiteList.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"./Interfaces.sol\";\n\n/**\n * @notice Error handling message for Modifier\n */\nerror Function__notAuthorized();\n\n/**\n * @notice Error handling message for Main Function\n */\nerror MainFunction__insufficientBalance();\n\ncontract Whitelist {\n    uint256 public privateSaleUsers;\n\n    uint256 public privateSaleAmount;\n    uint256 internal constant _phase1 = 73395000 * 1e18;\n    uint256 internal constant _phase2 = 3820562 * 1e18; // daily limit\n\n    uint256 public startPrivateSale;\n\n    // beneficiary of tokens after they are released\n    mapping(address => WhitelistStruct) private _beneficiary;\n\n    address public _talax;\n    address public _owner;\n\n    constructor() {\n        privateSaleAmount = 1467900000 * 1e18;\n        _talax = msg.sender;\n        _owner = msg.sender;\n    }\n\n    /* ------------------------------------------ modifier ------------------------------------------ */\n    function _onlyTalax() internal view {\n        // require(msg.sender == _talax, \"Not authorized\");\n        if (msg.sender != _talax) {\n            revert Function__notAuthorized();\n        }\n    }\n\n    modifier onlyTalax() {\n        _onlyTalax();\n        _;\n    }\n\n    /* ---------------------------------------------- - --------------------------------------------- */\n\n    function changeTalaxAddress(address talax) external onlyTalax {\n        _talax = talax;\n    }\n\n    function beneficiary(address user)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            bool,\n            uint256\n        )\n    {\n        WhitelistStruct memory beneficiary_ = _beneficiary[user];\n        return (\n            beneficiary_.lockedAmount,\n            beneficiary_.amount,\n            beneficiary_.isPhase1Claimed,\n            beneficiary_.latestClaimDay\n        );\n    }\n\n    function initiateWhitelist() external onlyTalax {\n        startPrivateSale = block.timestamp;\n    }\n\n    function hasWhitelist(address user)\n        external\n        view\n        returns (WhitelistStruct memory)\n    {\n        return _beneficiary[user];\n    }\n\n    /**\n     *  @dev \t\tMain Functions\n     *  @return \tClaimable amount from Locked Wallet\n     */\n    function _calculateClaimableAmount(address user)\n        internal\n        returns (uint256)\n    {\n        uint256 claimable;\n\n        uint256 lockDuration = (block.timestamp - startPrivateSale) / 1 days;\n\n        //Phase 1 of locked wallet release - monthly\n        if (lockDuration < 16 * 30) {\n            if (_beneficiary[user].isPhase1Claimed == false) {\n                _beneficiary[user].isPhase1Claimed = true;\n                _beneficiary[user].latestClaimDay = 15 * 30;\n                claimable =\n                    claimable +\n                    ((_phase1 * _beneficiary[user].lockedAmount) /\n                        privateSaleAmount);\n            }\n        }\n        //Phase 2 of locked wallet release - daily\n        else if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {\n            if (_beneficiary[user].isPhase1Claimed == false) {\n                _beneficiary[user].isPhase1Claimed = true;\n                claimable =\n                    claimable +\n                    ((_phase1 * _beneficiary[user].lockedAmount) /\n                        privateSaleAmount);\n            }\n\n            uint256 sinceLatestClaim = lockDuration -\n                _beneficiary[user].latestClaimDay;\n            _beneficiary[user].latestClaimDay = lockDuration;\n            claimable =\n                sinceLatestClaim *\n                (claimable +\n                    ((_phase2 * _beneficiary[user].lockedAmount) /\n                        privateSaleAmount));\n        } else {\n            return 0;\n        }\n\n        return claimable;\n    }\n\n    function addBeneficiary(address user, uint256 amount) external onlyTalax {\n        // require(amount <= privateSaleAmount, \"Insufficient Total Balance\");\n        if (amount > privateSaleAmount) {\n            revert MainFunction__insufficientBalance();\n        }\n\n        if (_beneficiary[user].amount > 0) {\n            _beneficiary[user].lockedAmount = amount;\n            _beneficiary[user].amount = amount;\n            _beneficiary[user].isPhase1Claimed = false;\n            _beneficiary[user].latestClaimDay = 1;\n\n            privateSaleUsers += 1;\n            privateSaleAmount -= amount;\n        }\n    }\n\n    function deleteBeneficiary(address user)\n        external\n        onlyTalax\n        returns (uint256)\n    {\n        if (_beneficiary[user].amount > 0) {\n            privateSaleUsers -= 1;\n            privateSaleAmount += _beneficiary[user].amount;\n            uint256 ex_amount = _beneficiary[user].amount;\n\n            delete _beneficiary[user];\n            return ex_amount;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function releaseClaimable(address user)\n        external\n        onlyTalax\n        returns (uint256)\n    {\n        if (_beneficiary[user].amount > 0) {\n            uint256 claimableLockedAmount = _calculateClaimableAmount(user);\n\n            if (claimableLockedAmount > 0) {\n                _beneficiary[user].amount =\n                    _beneficiary[user].amount -\n                    claimableLockedAmount;\n\n                return claimableLockedAmount;\n            } else {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n    }\n}\n"
			},
			"contracts/Interfaces.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nstruct WhitelistStruct {\n    uint256 lockedAmount;\n    uint256 amount;\n    bool isPhase1Claimed;\n    uint256 latestClaimDay;\n}\n\nstruct Beneficiary {\n    address user;\n    uint256 amount;\n}\n\ninterface IStakable {\n    function stakingPenaltyRate() external view returns (uint256);\n\n    function airdropRate() external view returns (uint256);\n\n    function airdropSince() external view returns (uint256);\n\n    function totalVoters() external view returns (uint256);\n\n    function getVoters(address user) external view returns (bool, bool); // votingRight and voted\n\n    function votedUsers(uint256 id) external view returns (uint256);\n\n    function startAirdrop() external;\n\n    function changeTalaxAddress(address talax) external;\n\n    function stake(\n        address user,\n        uint256 amount,\n        uint256 stakePeriod,\n        uint256 rewardRate\n    ) external;\n\n    function changePenaltyFee(uint256 amount) external;\n\n    function changeAirdropPercentage(uint256 amount) external;\n\n    function withdrawStake(address user) external returns (uint256, uint256);\n\n    function claimAirdrop(address user) external returns (uint256);\n\n    function startVoting() external;\n\n    function getVotingResult() external view returns (bool);\n\n    function stopVoting() external;\n}\n\ninterface IWhitelist {\n    function privateSaleUsers() external view returns (uint256);\n\n    function privateSaleAmount() external view returns (uint256);\n\n    function startPrivateSale() external view returns (uint256);\n\n    function changeTalaxAddress(address talax) external;\n\n    function beneficiary(address user)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            bool,\n            uint256\n        ); // lockedAmount, amount, isPhase1Claimed, latestClaimDay\n\n    function initiateWhitelist() external;\n\n    function addBeneficiary(address user, uint256 amount) external;\n\n    function deleteBeneficiary(address user) external returns (uint256);\n\n    function releaseClaimable(address user) external returns (uint256);\n}\n\ninterface ILockable {\n    function beneficiary() external view returns (address);\n\n    function changeTalaxAddress(address talax) external;\n\n    function startLockedWallet() external view returns (uint256);\n\n    function initiateLockedWallet() external;\n\n    function releaseClaimable(uint256[51] memory amount)\n        external\n        returns (uint256);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Interfaces.sol": {
				"ILockable": {
					"abi": [
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateLockedWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[51]",
									"name": "amount",
									"type": "uint256[51]"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startLockedWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"changeTalaxAddress(address)": "1d77b00b",
							"initiateLockedWallet()": "c8cca41e",
							"releaseClaimable(uint256[51])": "0a95606e",
							"startLockedWallet()": "b580aa9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateLockedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[51]\",\"name\":\"amount\",\"type\":\"uint256[51]\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startLockedWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"ILockable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x43e967de7a19c9271e351e91cc2d49831947ab238942a097122799a7b1b21ea2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://555a1f6667d327504a50e1880db254d0c62e239942abf495e0e7ef5ee7af06e4\",\"dweb:/ipfs/QmbqGVTBbkHcoJukQtcLKRCL8J1YAQMjmiLANG6Sztx9y6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStakable": {
					"abi": [
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeAirdropPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changePenaltyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimAirdrop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getVoters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVotingResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakePeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"changeAirdropPercentage(uint256)": "d5dbdf1b",
							"changePenaltyFee(uint256)": "8c63f97f",
							"changeTalaxAddress(address)": "1d77b00b",
							"claimAirdrop(address)": "65f8c6c5",
							"getVoters(address)": "2d15cc04",
							"getVotingResult()": "671d2b75",
							"stake(address,uint256,uint256,uint256)": "f93d4f8a",
							"stakingPenaltyRate()": "cb79c2e1",
							"startAirdrop()": "d2a569c3",
							"startVoting()": "1ec6b60a",
							"stopVoting()": "fab2f86b",
							"totalVoters()": "5f5300ff",
							"votedUsers(uint256)": "a143a5f2",
							"withdrawStake(address)": "c23a5cea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changePenaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVoters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"IStakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x43e967de7a19c9271e351e91cc2d49831947ab238942a097122799a7b1b21ea2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://555a1f6667d327504a50e1880db254d0c62e239942abf495e0e7ef5ee7af06e4\",\"dweb:/ipfs/QmbqGVTBbkHcoJukQtcLKRCL8J1YAQMjmiLANG6Sztx9y6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWhitelist": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addBeneficiary",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "deleteBeneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addBeneficiary(address,uint256)": "96074e70",
							"beneficiary(address)": "81008568",
							"changeTalaxAddress(address)": "1d77b00b",
							"deleteBeneficiary(address)": "7d3bca76",
							"initiateWhitelist()": "efdd8796",
							"privateSaleAmount()": "8b2b423a",
							"privateSaleUsers()": "549dee0b",
							"releaseClaimable(address)": "005171f4",
							"startPrivateSale()": "338dbf59"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"deleteBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"IWhitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x43e967de7a19c9271e351e91cc2d49831947ab238942a097122799a7b1b21ea2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://555a1f6667d327504a50e1880db254d0c62e239942abf495e0e7ef5ee7af06e4\",\"dweb:/ipfs/QmbqGVTBbkHcoJukQtcLKRCL8J1YAQMjmiLANG6Sztx9y6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WhiteList.sol": {
				"Whitelist": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Function__notAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MainFunction__insufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_talax",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addBeneficiary",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "deleteBeneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "hasWhitelist",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "lockedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isPhase1Claimed",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "latestClaimDay",
											"type": "uint256"
										}
									],
									"internalType": "struct WhitelistStruct",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WhiteList.sol\":285:5499  contract Whitelist {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/WhiteList.sol\":724:850  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/WhiteList.sol\":768:785  1467900000 * 1e18 */\n  0x04be37ea7317415c45800000\n    /* \"contracts/WhiteList.sol\":748:765  privateSaleAmount */\n  0x01\n    /* \"contracts/WhiteList.sol\":748:785  privateSaleAmount = 1467900000 * 1e18 */\n  sstore\n    /* \"contracts/WhiteList.sol\":795:801  _talax */\n  0x04\n    /* \"contracts/WhiteList.sol\":795:814  _talax = msg.sender */\n  dup1\n  sload\n    /* \"contracts/WhiteList.sol\":804:814  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/WhiteList.sol\":795:814  _talax = msg.sender */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/WhiteList.sol\":824:830  _owner */\n  0x05\n    /* \"contracts/WhiteList.sol\":824:843  _owner = msg.sender */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/WhiteList.sol\":285:5499  contract Whitelist {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WhiteList.sol\":285:5499  contract Whitelist {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x81008568\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x81008568\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8b2b423a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8cdb7e8b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x96074e70\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb2bdfa7b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xefdd8796\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x5171f4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1d77b00b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x338dbf59\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x549dee0b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5f348b4e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7d3bca76\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/WhiteList.sol\":4925:5497  function releaseClaimable(address user)... */\n    tag_3:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/WhiteList.sol\":4925:5497  function releaseClaimable(address user)... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WhiteList.sol\":1335:1428  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/WhiteList.sol\":515:546  uint256 public startPrivateSale */\n    tag_5:\n      tag_16\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/WhiteList.sol\":310:341  uint256 public privateSaleUsers */\n    tag_6:\n      tag_16\n      sload(0x00)\n      dup2\n      jump\n        /* \"contracts/WhiteList.sol\":669:690  address public _talax */\n    tag_7:\n      sload(0x04)\n      tag_31\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":729:761   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":711:762   */\n      dup2\n      mstore\n        /* \"#utility.yul\":699:701   */\n      0x20\n        /* \"#utility.yul\":684:702   */\n      add\n        /* \"contracts/WhiteList.sol\":669:690  address public _talax */\n      tag_20\n        /* \"#utility.yul\":565:768   */\n      jump\n        /* \"contracts/WhiteList.sol\":4407:4838  function deleteBeneficiary(address user)... */\n    tag_8:\n      tag_16\n      tag_36\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n        /* \"contracts/WhiteList.sol\":1434:1866  function beneficiary(address user)... */\n    tag_9:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":1659:1677  _beneficiary[user] */\n      and\n        /* \"contracts/WhiteList.sol\":1529:1536  uint256 */\n      0x00\n        /* \"contracts/WhiteList.sol\":1659:1677  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":1659:1671  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":1659:1677  _beneficiary[user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/WhiteList.sol\":1621:1677  WhitelistStruct memory beneficiary_ = _beneficiary[user] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap4\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      swap6\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      swap2\n      swap1\n      swap4\n      add\n      sload\n      0x60\n      swap1\n      swap4\n      add\n      dup4\n      swap1\n      mstore\n      swap4\n      swap1\n      swap3\n      swap2\n      swap1\n        /* \"contracts/WhiteList.sol\":1434:1866  function beneficiary(address user)... */\n      jump\n    tag_39:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":998:1023   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":1054:1056   */\n      0x20\n        /* \"#utility.yul\":1039:1057   */\n      dup6\n      add\n        /* \"#utility.yul\":1032:1066   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":1109:1123   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1102:1124   */\n      iszero\n        /* \"#utility.yul\":1082:1100   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1075:1125   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1156:1158   */\n      0x60\n        /* \"#utility.yul\":1141:1159   */\n      dup3\n      add\n        /* \"#utility.yul\":1134:1168   */\n      mstore\n        /* \"#utility.yul\":985:988   */\n      0x80\n        /* \"#utility.yul\":970:989   */\n      add\n        /* \"contracts/WhiteList.sol\":1434:1866  function beneficiary(address user)... */\n      tag_20\n        /* \"#utility.yul\":773:1174   */\n      jump\n        /* \"contracts/WhiteList.sol\":348:380  uint256 public privateSaleAmount */\n    tag_10:\n      tag_16\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/WhiteList.sol\":1977:2130  function hasWhitelist(address user)... */\n    tag_11:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n        /* \"#utility.yul\":1406:1419   */\n      dup2\n      mload\n        /* \"#utility.yul\":1388:1420   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1476:1480   */\n      0x20\n        /* \"#utility.yul\":1464:1481   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1458:1482   */\n      mload\n        /* \"#utility.yul\":1436:1456   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1429:1483   */\n      mstore\n        /* \"#utility.yul\":1553:1557   */\n      0x40\n        /* \"#utility.yul\":1541:1558   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1535:1559   */\n      mload\n        /* \"#utility.yul\":1528:1560   */\n      iszero\n        /* \"#utility.yul\":1521:1561   */\n      iszero\n        /* \"#utility.yul\":1499:1519   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1492:1562   */\n      mstore\n        /* \"#utility.yul\":1618:1622   */\n      0x60\n        /* \"#utility.yul\":1606:1623   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":1600:1624   */\n      mload\n        /* \"#utility.yul\":1578:1598   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1571:1625   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1375:1378   */\n      0x80\n        /* \"#utility.yul\":1360:1379   */\n      add\n      swap1\n        /* \"#utility.yul\":1179:1631   */\n      jump\n        /* \"contracts/WhiteList.sol\":3792:4401  function addBeneficiary(address user, uint256 amount) external onlyTalax {... */\n    tag_12:\n      tag_22\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"contracts/WhiteList.sol\":696:717  address public _owner */\n    tag_13:\n      sload(0x05)\n      tag_31\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/WhiteList.sol\":1872:1971  function initiateWhitelist() external onlyTalax {... */\n    tag_14:\n      tag_22\n      tag_60\n      jump\t// in\n        /* \"contracts/WhiteList.sol\":4925:5497  function releaseClaimable(address user)... */\n    tag_19:\n        /* \"contracts/WhiteList.sol\":5017:5024  uint256 */\n      0x00\n        /* \"contracts/WhiteList.sol\":1193:1205  _onlyTalax() */\n      tag_62\n        /* \"contracts/WhiteList.sol\":1193:1203  _onlyTalax */\n      tag_63\n        /* \"contracts/WhiteList.sol\":1193:1205  _onlyTalax() */\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":5044:5062  _beneficiary[user] */\n      dup3\n      and\n        /* \"contracts/WhiteList.sol\":5072:5073  0 */\n      0x00\n        /* \"contracts/WhiteList.sol\":5044:5062  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":5044:5056  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":5044:5062  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WhiteList.sol\":5044:5069  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/WhiteList.sol\":5044:5073  _beneficiary[user].amount > 0 */\n      iszero\n        /* \"contracts/WhiteList.sol\":5040:5491  if (_beneficiary[user].amount > 0) {... */\n      tag_65\n      jumpi\n        /* \"contracts/WhiteList.sol\":5089:5118  uint256 claimableLockedAmount */\n      0x00\n        /* \"contracts/WhiteList.sol\":5121:5152  _calculateClaimableAmount(user) */\n      tag_66\n        /* \"contracts/WhiteList.sol\":5147:5151  user */\n      dup4\n        /* \"contracts/WhiteList.sol\":5121:5146  _calculateClaimableAmount */\n      tag_67\n        /* \"contracts/WhiteList.sol\":5121:5152  _calculateClaimableAmount(user) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/WhiteList.sol\":5089:5152  uint256 claimableLockedAmount = _calculateClaimableAmount(user) */\n      swap1\n      pop\n        /* \"contracts/WhiteList.sol\":5171:5196  claimableLockedAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/WhiteList.sol\":5167:5442  if (claimableLockedAmount > 0) {... */\n      tag_68\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":5264:5282  _beneficiary[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":5264:5276  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":5264:5282  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WhiteList.sol\":5264:5289  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/WhiteList.sol\":5264:5333  _beneficiary[user].amount -... */\n      tag_69\n      swap1\n        /* \"contracts/WhiteList.sol\":5312:5333  claimableLockedAmount */\n      dup3\n      swap1\n        /* \"contracts/WhiteList.sol\":5264:5333  _beneficiary[user].amount -... */\n      tag_70\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":5216:5234  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":5216:5228  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":5216:5234  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WhiteList.sol\":5216:5241  _beneficiary[user].amount */\n      0x01\n      add\n        /* \"contracts/WhiteList.sol\":5216:5333  _beneficiary[user].amount =... */\n      sstore\n        /* \"contracts/WhiteList.sol\":5359:5380  claimableLockedAmount */\n      swap1\n      pop\n        /* \"contracts/WhiteList.sol\":4925:5497  function releaseClaimable(address user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/WhiteList.sol\":5167:5442  if (claimableLockedAmount > 0) {... */\n    tag_68:\n      pop\n        /* \"contracts/WhiteList.sol\":5426:5427  0 */\n      0x00\n      swap3\n        /* \"contracts/WhiteList.sol\":4925:5497  function releaseClaimable(address user)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WhiteList.sol\":5040:5491  if (_beneficiary[user].amount > 0) {... */\n    tag_65:\n      pop\n        /* \"contracts/WhiteList.sol\":5479:5480  0 */\n      0x00\n        /* \"contracts/WhiteList.sol\":5040:5491  if (_beneficiary[user].amount > 0) {... */\n    tag_72:\n        /* \"contracts/WhiteList.sol\":4925:5497  function releaseClaimable(address user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/WhiteList.sol\":1335:1428  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_24:\n        /* \"contracts/WhiteList.sol\":1193:1205  _onlyTalax() */\n      tag_74\n        /* \"contracts/WhiteList.sol\":1193:1203  _onlyTalax */\n      tag_63\n        /* \"contracts/WhiteList.sol\":1193:1205  _onlyTalax() */\n      jump\t// in\n    tag_74:\n        /* \"contracts/WhiteList.sol\":1407:1413  _talax */\n      0x04\n        /* \"contracts/WhiteList.sol\":1407:1421  _talax = talax */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/WhiteList.sol\":1335:1428  function changeTalaxAddress(address talax) external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/WhiteList.sol\":4407:4838  function deleteBeneficiary(address user)... */\n    tag_37:\n        /* \"contracts/WhiteList.sol\":4500:4507  uint256 */\n      0x00\n        /* \"contracts/WhiteList.sol\":1193:1205  _onlyTalax() */\n      tag_77\n        /* \"contracts/WhiteList.sol\":1193:1203  _onlyTalax */\n      tag_63\n        /* \"contracts/WhiteList.sol\":1193:1205  _onlyTalax() */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":4527:4545  _beneficiary[user] */\n      dup3\n      and\n        /* \"contracts/WhiteList.sol\":4555:4556  0 */\n      0x00\n        /* \"contracts/WhiteList.sol\":4527:4545  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":4527:4539  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":4527:4545  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WhiteList.sol\":4527:4552  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/WhiteList.sol\":4527:4556  _beneficiary[user].amount > 0 */\n      iszero\n        /* \"contracts/WhiteList.sol\":4523:4832  if (_beneficiary[user].amount > 0) {... */\n      tag_65\n      jumpi\n        /* \"contracts/WhiteList.sol\":4592:4593  1 */\n      0x01\n        /* \"contracts/WhiteList.sol\":4572:4588  privateSaleUsers */\n      0x00\n      dup1\n        /* \"contracts/WhiteList.sol\":4572:4593  privateSaleUsers -= 1 */\n      dup3\n      dup3\n      sload\n      tag_80\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_80:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":4628:4646  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":4628:4640  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":4628:4646  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/WhiteList.sol\":4628:4653  _beneficiary[user].amount */\n      0x01\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/WhiteList.sol\":4607:4653  privateSaleAmount += _beneficiary[user].amount */\n      dup2\n      sload\n        /* \"contracts/WhiteList.sol\":4628:4653  _beneficiary[user].amount */\n      swap1\n      swap3\n        /* \"contracts/WhiteList.sol\":4628:4646  _beneficiary[user] */\n      swap1\n        /* \"contracts/WhiteList.sol\":4607:4653  privateSaleAmount += _beneficiary[user].amount */\n      tag_81\n      swap1\n        /* \"contracts/WhiteList.sol\":4628:4653  _beneficiary[user].amount */\n      dup5\n      swap1\n        /* \"contracts/WhiteList.sol\":4607:4653  privateSaleAmount += _beneficiary[user].amount */\n      tag_82\n      jump\t// in\n    tag_81:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":4687:4705  _beneficiary[user] */\n      and\n        /* \"contracts/WhiteList.sol\":4667:4684  uint256 ex_amount */\n      0x00\n        /* \"contracts/WhiteList.sol\":4687:4705  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":4687:4699  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":4687:4705  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/WhiteList.sol\":4687:4712  _beneficiary[user].amount */\n      0x01\n      dup2\n      add\n      dup1\n      sload\n        /* \"contracts/WhiteList.sol\":4727:4752  delete _beneficiary[user] */\n      dup5\n      dup4\n      sstore\n      swap1\n      dup5\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      swap2\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/WhiteList.sol\":4687:4712  _beneficiary[user].amount */\n      swap1\n        /* \"contracts/WhiteList.sol\":4925:5497  function releaseClaimable(address user)... */\n      jump\t// out\n        /* \"contracts/WhiteList.sol\":1977:2130  function hasWhitelist(address user)... */\n    tag_49:\n        /* \"contracts/WhiteList.sol\":2060:2082  WhitelistStruct memory */\n      tag_85\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_85:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":2105:2123  _beneficiary[user] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":2105:2117  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":2105:2123  _beneficiary[user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/WhiteList.sol\":2098:2123  return _beneficiary[user] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/WhiteList.sol\":1977:2130  function hasWhitelist(address user)... */\n      jump\t// out\n        /* \"contracts/WhiteList.sol\":3792:4401  function addBeneficiary(address user, uint256 amount) external onlyTalax {... */\n    tag_55:\n        /* \"contracts/WhiteList.sol\":1193:1205  _onlyTalax() */\n      tag_89\n        /* \"contracts/WhiteList.sol\":1193:1203  _onlyTalax */\n      tag_63\n        /* \"contracts/WhiteList.sol\":1193:1205  _onlyTalax() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/WhiteList.sol\":3967:3984  privateSaleAmount */\n      sload(0x01)\n        /* \"contracts/WhiteList.sol\":3958:3964  amount */\n      dup2\n        /* \"contracts/WhiteList.sol\":3958:3984  amount > privateSaleAmount */\n      gt\n        /* \"contracts/WhiteList.sol\":3954:4053  if (amount > privateSaleAmount) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/WhiteList.sol\":4007:4042  MainFunction__insufficientBalance() */\n      mload(0x40)\n      shl(0xe2, 0x0653d037)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/WhiteList.sol\":3954:4053  if (amount > privateSaleAmount) {... */\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":4067:4085  _beneficiary[user] */\n      dup3\n      and\n        /* \"contracts/WhiteList.sol\":4095:4096  0 */\n      0x00\n        /* \"contracts/WhiteList.sol\":4067:4085  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":4067:4079  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":4067:4085  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WhiteList.sol\":4067:4092  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/WhiteList.sol\":4067:4096  _beneficiary[user].amount > 0 */\n      iszero\n        /* \"contracts/WhiteList.sol\":4063:4395  if (_beneficiary[user].amount > 0) {... */\n      tag_92\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":4112:4130  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":4112:4124  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":4112:4130  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/WhiteList.sol\":4112:4152  _beneficiary[user].lockedAmount = amount */\n      dup4\n      dup2\n      sstore\n        /* \"contracts/WhiteList.sol\":4166:4191  _beneficiary[user].amount */\n      0x01\n      dup1\n      dup3\n      add\n        /* \"contracts/WhiteList.sol\":4166:4200  _beneficiary[user].amount = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/WhiteList.sol\":4214:4248  _beneficiary[user].isPhase1Claimed */\n      0x02\n      dup3\n      add\n        /* \"contracts/WhiteList.sol\":4214:4256  _beneficiary[user].isPhase1Claimed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/WhiteList.sol\":4270:4303  _beneficiary[user].latestClaimDay */\n      swap2\n      add\n        /* \"contracts/WhiteList.sol\":4270:4307  _beneficiary[user].latestClaimDay = 1 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/WhiteList.sol\":4322:4343  privateSaleUsers += 1 */\n      dup2\n      sload\n        /* \"contracts/WhiteList.sol\":4166:4191  _beneficiary[user].amount */\n      swap1\n      swap2\n        /* \"contracts/WhiteList.sol\":4112:4130  _beneficiary[user] */\n      swap1\n      dup2\n      swap1\n        /* \"contracts/WhiteList.sol\":4322:4343  privateSaleUsers += 1 */\n      tag_93\n      swap1\n        /* \"contracts/WhiteList.sol\":4166:4191  _beneficiary[user].amount */\n      dup5\n      swap1\n        /* \"contracts/WhiteList.sol\":4322:4343  privateSaleUsers += 1 */\n      tag_82\n      jump\t// in\n    tag_93:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WhiteList.sol\":4378:4384  amount */\n      dup1\n        /* \"contracts/WhiteList.sol\":4357:4374  privateSaleAmount */\n      0x01\n      0x00\n        /* \"contracts/WhiteList.sol\":4357:4384  privateSaleAmount -= amount */\n      dup3\n      dup3\n      sload\n      tag_94\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_94:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/WhiteList.sol\":4063:4395  if (_beneficiary[user].amount > 0) {... */\n    tag_92:\n        /* \"contracts/WhiteList.sol\":3792:4401  function addBeneficiary(address user, uint256 amount) external onlyTalax {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WhiteList.sol\":1872:1971  function initiateWhitelist() external onlyTalax {... */\n    tag_60:\n        /* \"contracts/WhiteList.sol\":1193:1205  _onlyTalax() */\n      tag_96\n        /* \"contracts/WhiteList.sol\":1193:1203  _onlyTalax */\n      tag_63\n        /* \"contracts/WhiteList.sol\":1193:1205  _onlyTalax() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/WhiteList.sol\":1949:1964  block.timestamp */\n      timestamp\n        /* \"contracts/WhiteList.sol\":1930:1946  startPrivateSale */\n      0x02\n        /* \"contracts/WhiteList.sol\":1930:1964  startPrivateSale = block.timestamp */\n      sstore\n        /* \"contracts/WhiteList.sol\":1872:1971  function initiateWhitelist() external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/WhiteList.sol\":961:1156  function _onlyTalax() internal view {... */\n    tag_63:\n        /* \"contracts/WhiteList.sol\":1085:1091  _talax */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/WhiteList.sol\":1071:1081  msg.sender */\n      caller\n        /* \"contracts/WhiteList.sol\":1071:1091  msg.sender != _talax */\n      eq\n        /* \"contracts/WhiteList.sol\":1067:1150  if (msg.sender != _talax) {... */\n      tag_99\n      jumpi\n        /* \"contracts/WhiteList.sol\":1114:1139  Function__notAuthorized() */\n      mload(0x40)\n      shl(0xe1, 0x15a678a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/WhiteList.sol\":1067:1150  if (msg.sender != _talax) {... */\n    tag_99:\n        /* \"contracts/WhiteList.sol\":961:1156  function _onlyTalax() internal view {... */\n      jump\t// out\n        /* \"contracts/WhiteList.sol\":2235:3786  function _calculateClaimableAmount(address user)... */\n    tag_67:\n        /* \"contracts/WhiteList.sol\":2318:2325  uint256 */\n      0x00\n        /* \"contracts/WhiteList.sol\":2341:2358  uint256 claimable */\n      dup1\n        /* \"contracts/WhiteList.sol\":2369:2389  uint256 lockDuration */\n      0x00\n        /* \"contracts/WhiteList.sol\":2431:2437  1 days */\n      0x015180\n        /* \"contracts/WhiteList.sol\":2411:2427  startPrivateSale */\n      sload(0x02)\n        /* \"contracts/WhiteList.sol\":2393:2408  block.timestamp */\n      timestamp\n        /* \"contracts/WhiteList.sol\":2393:2427  block.timestamp - startPrivateSale */\n      tag_101\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_101:\n        /* \"contracts/WhiteList.sol\":2392:2437  (block.timestamp - startPrivateSale) / 1 days */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"contracts/WhiteList.sol\":2369:2437  uint256 lockDuration = (block.timestamp - startPrivateSale) / 1 days */\n      swap1\n      pop\n        /* \"contracts/WhiteList.sol\":2520:2527  16 * 30 */\n      0x01e0\n        /* \"contracts/WhiteList.sol\":2505:2517  lockDuration */\n      dup2\n        /* \"contracts/WhiteList.sol\":2505:2527  lockDuration < 16 * 30 */\n      lt\n        /* \"contracts/WhiteList.sol\":2501:3753  if (lockDuration < 16 * 30) {... */\n      iszero\n      tag_104\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":2547:2565  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":2547:2559  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":2547:2565  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WhiteList.sol\":2547:2581  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/WhiteList.sol\":2543:2898  if (_beneficiary[user].isPhase1Claimed == false) {... */\n      tag_105\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":2610:2628  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":2610:2622  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":2610:2628  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/WhiteList.sol\":2610:2644  _beneficiary[user].isPhase1Claimed */\n      0x02\n      dup2\n      add\n        /* \"contracts/WhiteList.sol\":2610:2651  _beneficiary[user].isPhase1Claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/WhiteList.sol\":2647:2651  true */\n      0x01\n        /* \"contracts/WhiteList.sol\":2610:2651  _beneficiary[user].isPhase1Claimed = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/WhiteList.sol\":2705:2712  15 * 30 */\n      0x01c2\n        /* \"contracts/WhiteList.sol\":2669:2702  _beneficiary[user].latestClaimDay */\n      swap3\n      dup3\n      add\n        /* \"contracts/WhiteList.sol\":2669:2712  _beneficiary[user].latestClaimDay = 15 * 30 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/WhiteList.sol\":2865:2882  privateSaleAmount */\n      swap1\n      sload\n        /* \"contracts/WhiteList.sol\":2806:2837  _beneficiary[user].lockedAmount */\n      swap1\n      sload\n        /* \"contracts/WhiteList.sol\":2796:2837  _phase1 * _beneficiary[user].lockedAmount */\n      tag_106\n      swap1\n        /* \"contracts/WhiteList.sol\":422:437  73395000 * 1e18 */\n      0x3cb5feec27901169e00000\n        /* \"contracts/WhiteList.sol\":2796:2837  _phase1 * _beneficiary[user].lockedAmount */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"contracts/WhiteList.sol\":2795:2882  (_phase1 * _beneficiary[user].lockedAmount) /... */\n      tag_108\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_108:\n        /* \"contracts/WhiteList.sol\":2762:2883  claimable +... */\n      tag_109\n      swap1\n        /* \"contracts/WhiteList.sol\":2762:2771  claimable */\n      dup4\n        /* \"contracts/WhiteList.sol\":2762:2883  claimable +... */\n      tag_82\n      jump\t// in\n    tag_109:\n        /* \"contracts/WhiteList.sol\":2730:2883  claimable =... */\n      swap2\n      pop\n        /* \"contracts/WhiteList.sol\":2543:2898  if (_beneficiary[user].isPhase1Claimed == false) {... */\n    tag_105:\n        /* \"contracts/WhiteList.sol\":2501:3753  if (lockDuration < 16 * 30) {... */\n      jump(tag_122)\n    tag_104:\n        /* \"contracts/WhiteList.sol\":2993:3000  16 * 30 */\n      0x01e0\n        /* \"contracts/WhiteList.sol\":2977:2989  lockDuration */\n      dup2\n        /* \"contracts/WhiteList.sol\":2977:3000  lockDuration >= 16 * 30 */\n      lt\n      iszero\n        /* \"contracts/WhiteList.sol\":2977:3026  lockDuration >= 16 * 30 && lockDuration < 28 * 30 */\n      dup1\n      iszero\n      tag_111\n      jumpi\n      pop\n        /* \"contracts/WhiteList.sol\":3019:3026  28 * 30 */\n      0x0348\n        /* \"contracts/WhiteList.sol\":3004:3016  lockDuration */\n      dup2\n        /* \"contracts/WhiteList.sol\":3004:3026  lockDuration < 28 * 30 */\n      lt\n        /* \"contracts/WhiteList.sol\":2977:3026  lockDuration >= 16 * 30 && lockDuration < 28 * 30 */\n    tag_111:\n        /* \"contracts/WhiteList.sol\":2973:3753  if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {... */\n      iszero\n      tag_112\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":3046:3064  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":3046:3058  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":3046:3064  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WhiteList.sol\":3046:3080  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/WhiteList.sol\":3042:3336  if (_beneficiary[user].isPhase1Claimed == false) {... */\n      tag_113\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":3109:3127  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":3109:3121  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":3109:3127  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WhiteList.sol\":3109:3143  _beneficiary[user].isPhase1Claimed */\n      0x02\n      dup2\n      add\n        /* \"contracts/WhiteList.sol\":3109:3150  _beneficiary[user].isPhase1Claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/WhiteList.sol\":3146:3150  true */\n      0x01\n        /* \"contracts/WhiteList.sol\":3109:3150  _beneficiary[user].isPhase1Claimed = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/WhiteList.sol\":3303:3320  privateSaleAmount */\n      sload\n        /* \"contracts/WhiteList.sol\":3244:3275  _beneficiary[user].lockedAmount */\n      swap1\n      sload\n        /* \"contracts/WhiteList.sol\":3234:3275  _phase1 * _beneficiary[user].lockedAmount */\n      tag_114\n      swap1\n        /* \"contracts/WhiteList.sol\":422:437  73395000 * 1e18 */\n      0x3cb5feec27901169e00000\n        /* \"contracts/WhiteList.sol\":3234:3275  _phase1 * _beneficiary[user].lockedAmount */\n      tag_107\n      jump\t// in\n    tag_114:\n        /* \"contracts/WhiteList.sol\":3233:3320  (_phase1 * _beneficiary[user].lockedAmount) /... */\n      tag_115\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_115:\n        /* \"contracts/WhiteList.sol\":3200:3321  claimable +... */\n      tag_116\n      swap1\n        /* \"contracts/WhiteList.sol\":3200:3209  claimable */\n      dup4\n        /* \"contracts/WhiteList.sol\":3200:3321  claimable +... */\n      tag_82\n      jump\t// in\n    tag_116:\n        /* \"contracts/WhiteList.sol\":3168:3321  claimable =... */\n      swap2\n      pop\n        /* \"contracts/WhiteList.sol\":3042:3336  if (_beneficiary[user].isPhase1Claimed == false) {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":3408:3426  _beneficiary[user] */\n      dup5\n      and\n        /* \"contracts/WhiteList.sol\":3350:3374  uint256 sinceLatestClaim */\n      0x00\n        /* \"contracts/WhiteList.sol\":3408:3426  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":3408:3420  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":3408:3426  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/WhiteList.sol\":3408:3441  _beneficiary[user].latestClaimDay */\n      add\n      sload\n        /* \"contracts/WhiteList.sol\":3377:3441  lockDuration -... */\n      tag_117\n      swap1\n        /* \"contracts/WhiteList.sol\":3377:3389  lockDuration */\n      dup4\n        /* \"contracts/WhiteList.sol\":3377:3441  lockDuration -... */\n      tag_70\n      jump\t// in\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WhiteList.sol\":3455:3473  _beneficiary[user] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WhiteList.sol\":3455:3467  _beneficiary */\n      0x03\n        /* \"contracts/WhiteList.sol\":3455:3473  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/WhiteList.sol\":3455:3488  _beneficiary[user].latestClaimDay */\n      swap1\n      dup2\n      add\n        /* \"contracts/WhiteList.sol\":3455:3503  _beneficiary[user].latestClaimDay = lockDuration */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/WhiteList.sol\":3684:3701  privateSaleAmount */\n      sload(0x01)\n        /* \"contracts/WhiteList.sol\":3625:3656  _beneficiary[user].lockedAmount */\n      swap1\n      sload\n        /* \"contracts/WhiteList.sol\":3350:3441  uint256 sinceLatestClaim = lockDuration -... */\n      swap2\n      swap3\n      pop\n        /* \"contracts/WhiteList.sol\":3684:3701  privateSaleAmount */\n      swap1\n        /* \"contracts/WhiteList.sol\":3615:3656  _phase2 * _beneficiary[user].lockedAmount */\n      tag_118\n      swap1\n        /* \"contracts/WhiteList.sol\":479:493  3820562 * 1e18 */\n      0x03290914be1afb75080000\n        /* \"contracts/WhiteList.sol\":3615:3656  _phase2 * _beneficiary[user].lockedAmount */\n      tag_107\n      jump\t// in\n    tag_118:\n        /* \"contracts/WhiteList.sol\":3614:3701  (_phase2 * _beneficiary[user].lockedAmount) /... */\n      tag_119\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_119:\n        /* \"contracts/WhiteList.sol\":3581:3702  claimable +... */\n      tag_120\n      swap1\n        /* \"contracts/WhiteList.sol\":3581:3590  claimable */\n      dup5\n        /* \"contracts/WhiteList.sol\":3581:3702  claimable +... */\n      tag_82\n      jump\t// in\n    tag_120:\n        /* \"contracts/WhiteList.sol\":3545:3703  sinceLatestClaim *... */\n      tag_121\n      swap1\n        /* \"contracts/WhiteList.sol\":3545:3561  sinceLatestClaim */\n      dup3\n        /* \"contracts/WhiteList.sol\":3545:3703  sinceLatestClaim *... */\n      tag_107\n      jump\t// in\n    tag_121:\n        /* \"contracts/WhiteList.sol\":3517:3703  claimable =... */\n      swap3\n      pop\n        /* \"contracts/WhiteList.sol\":3028:3714  {... */\n      pop\n        /* \"contracts/WhiteList.sol\":2973:3753  if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {... */\n      jump(tag_122)\n    tag_112:\n      pop\n        /* \"contracts/WhiteList.sol\":3741:3742  0 */\n      0x00\n      swap4\n        /* \"contracts/WhiteList.sol\":2235:3786  function _calculateClaimableAmount(address user)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WhiteList.sol\":2973:3753  if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {... */\n    tag_122:\n      pop\n        /* \"contracts/WhiteList.sol\":3770:3779  claimable */\n      swap3\n        /* \"contracts/WhiteList.sol\":2235:3786  function _calculateClaimableAmount(address user)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_123:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:378   */\n    tag_18:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_129:\n        /* \"#utility.yul\":343:372   */\n      tag_130\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_123\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1636:1890   */\n    tag_54:\n        /* \"#utility.yul\":1704:1710   */\n      0x00\n        /* \"#utility.yul\":1712:1718   */\n      dup1\n        /* \"#utility.yul\":1765:1767   */\n      0x40\n        /* \"#utility.yul\":1753:1762   */\n      dup4\n        /* \"#utility.yul\":1744:1751   */\n      dup6\n        /* \"#utility.yul\":1740:1763   */\n      sub\n        /* \"#utility.yul\":1736:1768   */\n      slt\n        /* \"#utility.yul\":1733:1785   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1781:1782   */\n      0x00\n        /* \"#utility.yul\":1778:1779   */\n      dup1\n        /* \"#utility.yul\":1771:1783   */\n      revert\n        /* \"#utility.yul\":1733:1785   */\n    tag_136:\n        /* \"#utility.yul\":1804:1833   */\n      tag_137\n        /* \"#utility.yul\":1823:1832   */\n      dup4\n        /* \"#utility.yul\":1804:1833   */\n      tag_123\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1794:1833   */\n      swap5\n        /* \"#utility.yul\":1880:1882   */\n      0x20\n        /* \"#utility.yul\":1865:1883   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1852:1884   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1636:1890   */\n      jump\t// out\n        /* \"#utility.yul\":1895:2022   */\n    tag_124:\n        /* \"#utility.yul\":1956:1966   */\n      0x4e487b71\n        /* \"#utility.yul\":1951:1954   */\n      0xe0\n        /* \"#utility.yul\":1947:1967   */\n      shl\n        /* \"#utility.yul\":1944:1945   */\n      0x00\n        /* \"#utility.yul\":1937:1968   */\n      mstore\n        /* \"#utility.yul\":1987:1991   */\n      0x11\n        /* \"#utility.yul\":1984:1985   */\n      0x04\n        /* \"#utility.yul\":1977:1992   */\n      mstore\n        /* \"#utility.yul\":2011:2015   */\n      0x24\n        /* \"#utility.yul\":2008:2009   */\n      0x00\n        /* \"#utility.yul\":2001:2016   */\n      revert\n        /* \"#utility.yul\":2027:2152   */\n    tag_70:\n        /* \"#utility.yul\":2067:2071   */\n      0x00\n        /* \"#utility.yul\":2095:2096   */\n      dup3\n        /* \"#utility.yul\":2092:2093   */\n      dup3\n        /* \"#utility.yul\":2089:2097   */\n      lt\n        /* \"#utility.yul\":2086:2120   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":2100:2118   */\n      tag_141\n      tag_124\n      jump\t// in\n    tag_141:\n      pop\n        /* \"#utility.yul\":2137:2146   */\n      sub\n      swap1\n        /* \"#utility.yul\":2027:2152   */\n      jump\t// out\n        /* \"#utility.yul\":2157:2285   */\n    tag_82:\n        /* \"#utility.yul\":2197:2200   */\n      0x00\n        /* \"#utility.yul\":2228:2229   */\n      dup3\n        /* \"#utility.yul\":2224:2230   */\n      not\n        /* \"#utility.yul\":2221:2222   */\n      dup3\n        /* \"#utility.yul\":2218:2231   */\n      gt\n        /* \"#utility.yul\":2215:2254   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":2234:2252   */\n      tag_144\n      tag_124\n      jump\t// in\n    tag_144:\n      pop\n        /* \"#utility.yul\":2270:2279   */\n      add\n      swap1\n        /* \"#utility.yul\":2157:2285   */\n      jump\t// out\n        /* \"#utility.yul\":2290:2507   */\n    tag_103:\n        /* \"#utility.yul\":2330:2331   */\n      0x00\n        /* \"#utility.yul\":2356:2357   */\n      dup3\n        /* \"#utility.yul\":2346:2478   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":2400:2410   */\n      0x4e487b71\n        /* \"#utility.yul\":2395:2398   */\n      0xe0\n        /* \"#utility.yul\":2391:2411   */\n      shl\n        /* \"#utility.yul\":2388:2389   */\n      0x00\n        /* \"#utility.yul\":2381:2412   */\n      mstore\n        /* \"#utility.yul\":2435:2439   */\n      0x12\n        /* \"#utility.yul\":2432:2433   */\n      0x04\n        /* \"#utility.yul\":2425:2440   */\n      mstore\n        /* \"#utility.yul\":2463:2467   */\n      0x24\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2453:2468   */\n      revert\n        /* \"#utility.yul\":2346:2478   */\n    tag_146:\n      pop\n        /* \"#utility.yul\":2492:2501   */\n      div\n      swap1\n        /* \"#utility.yul\":2290:2507   */\n      jump\t// out\n        /* \"#utility.yul\":2512:2680   */\n    tag_107:\n        /* \"#utility.yul\":2552:2559   */\n      0x00\n        /* \"#utility.yul\":2618:2619   */\n      dup2\n        /* \"#utility.yul\":2614:2615   */\n      0x00\n        /* \"#utility.yul\":2610:2616   */\n      not\n        /* \"#utility.yul\":2606:2620   */\n      div\n        /* \"#utility.yul\":2603:2604   */\n      dup4\n        /* \"#utility.yul\":2600:2621   */\n      gt\n        /* \"#utility.yul\":2595:2596   */\n      dup3\n        /* \"#utility.yul\":2588:2597   */\n      iszero\n        /* \"#utility.yul\":2581:2598   */\n      iszero\n        /* \"#utility.yul\":2577:2622   */\n      and\n        /* \"#utility.yul\":2574:2645   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":2625:2643   */\n      tag_149\n      tag_124\n      jump\t// in\n    tag_149:\n      pop\n        /* \"#utility.yul\":2665:2674   */\n      mul\n      swap1\n        /* \"#utility.yul\":2512:2680   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122096fb00cacb88eae54b56484bdf09712d8e22a2802c766b8d4b4fe3604db406c964736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_248": {
									"entryPoint": null,
									"id": 248,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506b04be37ea7317415c4580000060015560048054336001600160a01b0319918216811790925560058054909116909117905561083c806100526000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063810085681161007157806381008568146101435780638b2b423a146101ce5780638cdb7e8b146101d757806396074e701461021f578063b2bdfa7b14610232578063efdd87961461024557600080fd5b80625171f4146100b85780631d77b00b146100de578063338dbf59146100f3578063549dee0b146100fc5780635f348b4e146101055780637d3bca7614610130575b600080fd5b6100cb6100c6366004610734565b61024d565b6040519081526020015b60405180910390f35b6100f16100ec366004610734565b6102e7565b005b6100cb60025481565b6100cb60005481565b600454610118906001600160a01b031681565b6040516001600160a01b0390911681526020016100d5565b6100cb61013e366004610734565b610311565b6101a8610151366004610734565b6001600160a01b0316600090815260036020818152604092839020835160808101855281548082526001830154938201849052600283015460ff161515958201869052919093015460609093018390529390929190565b6040805194855260208501939093529015159183019190915260608201526080016100d5565b6100cb60015481565b6101ea6101e5366004610734565b6103c2565b6040516100d5919081518152602080830151908201526040808301511515908201526060918201519181019190915260800190565b6100f161022d366004610756565b61043f565b600554610118906001600160a01b031681565b6100f16104f6565b6000610257610504565b6001600160a01b038216600090815260036020526040902060010154156102de57600061028383610531565b905080156102d5576001600160a01b0383166000908152600360205260409020600101546102b2908290610796565b6001600160a01b0384166000908152600360205260409020600101559050919050565b50600092915050565b5060005b919050565b6102ef610504565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600061031b610504565b6001600160a01b038216600090815260036020526040902060010154156102de57600160008082825461034e9190610796565b90915550506001600160a01b038216600090815260036020526040812060019081015481549092906103819084906107ad565b9091555050506001600160a01b0316600090815260036020819052604082206001810180548483559084905560028201805460ff1916905591019190915590565b6103ef60405180608001604052806000815260200160008152602001600015158152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160808101855281548152600182015492810192909252600281015460ff16151593820193909352910154606082015290565b610447610504565b60015481111561046a57604051630653d03760e21b815260040160405180910390fd5b6001600160a01b038216600090815260036020526040902060010154156104f2576001600160a01b03821660009081526003602081905260408220838155600180820185905560028201805460ff191690559101819055815490919081906104d39084906107ad565b9250508190555080600160008282546104ec9190610796565b90915550505b5050565b6104fe610504565b42600255565b6004546001600160a01b0316331461052f576040516315a678a960e11b815260040160405180910390fd5b565b600080600062015180600254426105489190610796565b61055291906107c5565b90506101e08110156105ed576001600160a01b03841660009081526003602052604090206002015460ff166105e8576001600160a01b038416600090815260036020819052604090912060028101805460ff191660019081179091556101c292820192909255905490546105d1906a3cb5feec27901169e000006107e7565b6105db91906107c5565b6105e590836107ad565b91505b610716565b6101e08110158015610600575061034881105b1561070c576001600160a01b03841660009081526003602052604090206002015460ff16610681576001600160a01b038416600090815260036020526040902060028101805460ff1916600190811790915554905461066a906a3cb5feec27901169e000006107e7565b61067491906107c5565b61067e90836107ad565b91505b6001600160a01b0384166000908152600360208190526040822001546106a79083610796565b6001600160a01b03861660009081526003602081905260409091209081018490556001549054919250906106e6906a03290914be1afb750800006107e7565b6106f091906107c5565b6106fa90846107ad565b61070490826107e7565b925050610716565b5060009392505050565b5092915050565b80356001600160a01b03811681146102e257600080fd5b60006020828403121561074657600080fd5b61074f8261071d565b9392505050565b6000806040838503121561076957600080fd5b6107728361071d565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156107a8576107a8610780565b500390565b600082198211156107c0576107c0610780565b500190565b6000826107e257634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561080157610801610780565b50029056fea264697066735822122096fb00cacb88eae54b56484bdf09712d8e22a2802c766b8d4b4fe3604db406c964736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH12 0x4BE37EA7317415C45800000 PUSH1 0x1 SSTORE PUSH1 0x4 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x83C DUP1 PUSH2 0x52 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81008568 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x81008568 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x8B2B423A EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x8CDB7E8B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x96074E70 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xEFDD8796 EQ PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x5171F4 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x549DEE0B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x5F348B4E EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x7D3BCA76 EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCB PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP6 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x60 SWAP1 SWAP4 ADD DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0xCB PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x756 JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x257 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 PUSH2 0x283 DUP4 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2B2 SWAP1 DUP3 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x504 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31B PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x2DE JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP2 SLOAD SWAP1 SWAP3 SWAP1 PUSH2 0x381 SWAP1 DUP5 SWAP1 PUSH2 0x7AD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP5 DUP4 SSTORE SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x3EF PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x447 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD PUSH4 0x653D037 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD DUP2 SWAP1 SSTORE DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x4D3 SWAP1 DUP5 SWAP1 PUSH2 0x7AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x504 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x15180 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E0 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x5E8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x1C2 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD SWAP1 SLOAD PUSH2 0x5D1 SWAP1 PUSH11 0x3CB5FEEC27901169E00000 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x5E5 SWAP1 DUP4 PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH2 0x1E0 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x600 JUMPI POP PUSH2 0x348 DUP2 LT JUMPDEST ISZERO PUSH2 0x70C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x681 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SLOAD SWAP1 SLOAD PUSH2 0x66A SWAP1 PUSH11 0x3CB5FEEC27901169E00000 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x67E SWAP1 DUP4 PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH2 0x6A7 SWAP1 DUP4 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x1 SLOAD SWAP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x6E6 SWAP1 PUSH11 0x3290914BE1AFB75080000 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x6FA SWAP1 DUP5 PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x704 SWAP1 DUP3 PUSH2 0x7E7 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x716 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74F DUP3 PUSH2 0x71D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x772 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x7A8 JUMPI PUSH2 0x7A8 PUSH2 0x780 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7C0 PUSH2 0x780 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x801 JUMPI PUSH2 0x801 PUSH2 0x780 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xFB STOP 0xCA 0xCB DUP9 0xEA 0xE5 0x4B JUMP BASEFEE 0x4B 0xDF MULMOD PUSH18 0x2D8E22A2802C766B8D4B4FE3604DB406C964 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
							"sourceMap": "285:5214:1:-:0;;;724:126;;;;;;;;;-1:-1:-1;768:17:1;748;:37;795:6;:19;;804:10;-1:-1:-1;;;;;;795:19:1;;;;;;;;824:6;:19;;;;;;;;;;285:5214;;;-1:-1:-1;285:5214:1;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateClaimableAmount_485": {
									"entryPoint": 1329,
									"id": 485,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_onlyTalax_261": {
									"entryPoint": 1284,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_owner_228": {
									"entryPoint": null,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_talax_226": {
									"entryPoint": null,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addBeneficiary_547": {
									"entryPoint": 1087,
									"id": 547,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@beneficiary_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@changeTalaxAddress_280": {
									"entryPoint": 743,
									"id": 280,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deleteBeneficiary_593": {
									"entryPoint": 785,
									"id": 593,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasWhitelist_335": {
									"entryPoint": 962,
									"id": 335,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initiateWhitelist_322": {
									"entryPoint": 1270,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleAmount_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleUsers_205": {
									"entryPoint": null,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseClaimable_643": {
									"entryPoint": 589,
									"id": 643,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startPrivateSale_219": {
									"entryPoint": null,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_WhitelistStruct_$10_memory_ptr__to_t_struct$_WhitelistStruct_$10_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2682:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:2"
															},
															"nodeType": "YulIf",
															"src": "111:70:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "14:173:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:2"
															},
															"nodeType": "YulIf",
															"src": "272:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:2",
														"type": ""
													}
												],
												"src": "192:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:2",
														"type": ""
													}
												],
												"src": "383:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "688:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "699:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "684:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "676:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "718:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "749:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "754:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "745:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "745:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "758:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "741:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "741:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "711:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "711:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "635:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "646:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "657:4:2",
														"type": ""
													}
												],
												"src": "565:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "952:222:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "962:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "974:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "985:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "970:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "962:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1005:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1016:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "998:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "998:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "998:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1043:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1054:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1059:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1032:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1032:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1086:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1097:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1082:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1082:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "1116:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1109:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1109:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1102:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1102:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1075:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1075:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1075:50:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1145:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1156:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1141:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1141:18:2"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1161:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1134:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "897:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "908:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "916:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "924:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "932:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "943:4:2",
														"type": ""
													}
												],
												"src": "773:401:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:289:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1352:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1364:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1352:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1395:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1406:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1406:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1388:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1388:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1440:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1451:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1436:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1436:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1468:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1476:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1464:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1464:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1458:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1458:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1429:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:54:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1503:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1514:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value0",
																										"nodeType": "YulIdentifier",
																										"src": "1545:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1553:4:2",
																										"type": "",
																										"value": "0x40"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1541:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1541:17:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "1535:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1535:24:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1528:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1528:32:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1521:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:40:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:70:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1492:70:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1582:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1593:4:2",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1578:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1578:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1610:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1618:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1606:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1606:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1600:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1600:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1571:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1571:54:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_WhitelistStruct_$10_memory_ptr__to_t_struct$_WhitelistStruct_$10_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1322:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1333:4:2",
														"type": ""
													}
												],
												"src": "1179:452:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1723:167:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1769:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1778:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1781:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1771:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1771:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1771:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1744:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1753:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1740:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1736:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:32:2"
															},
															"nodeType": "YulIf",
															"src": "1733:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1794:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1823:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1804:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1842:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1869:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1880:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1852:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1681:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1692:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1704:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1712:6:2",
														"type": ""
													}
												],
												"src": "1636:254:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1927:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1944:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1951:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1956:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1947:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1947:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1937:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1937:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1984:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1987:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1977:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2008:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2001:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1895:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2076:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2098:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2100:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2100:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2100:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2092:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2095:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2089:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2089:8:2"
															},
															"nodeType": "YulIf",
															"src": "2086:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2129:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2141:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2144:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2137:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2129:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2058:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2061:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2067:4:2",
														"type": ""
													}
												],
												"src": "2027:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2205:80:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2232:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2234:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2234:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2234:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2221:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2228:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2224:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2224:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2218:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:13:2"
															},
															"nodeType": "YulIf",
															"src": "2215:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2263:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2274:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2277:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2270:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2270:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2263:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2188:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2191:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2197:3:2",
														"type": ""
													}
												],
												"src": "2157:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2336:171:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2367:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2388:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2395:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2400:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2391:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2391:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2381:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2381:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2381:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2432:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2435:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2425:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2425:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2460:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2463:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2453:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2453:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2453:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2356:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2349:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2349:9:2"
															},
															"nodeType": "YulIf",
															"src": "2346:132:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2487:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2496:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2499:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2492:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2487:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2321:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2324:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2330:1:2",
														"type": ""
													}
												],
												"src": "2290:217:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2564:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2623:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2625:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2625:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2625:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2595:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2588:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2588:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2581:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2581:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2603:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2614:1:2",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2610:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2610:6:2"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2618:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2606:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2606:14:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2600:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2600:21:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2577:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2577:45:2"
															},
															"nodeType": "YulIf",
															"src": "2574:71:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2654:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2669:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2672:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2665:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2654:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2543:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2546:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2552:7:2",
														"type": ""
													}
												],
												"src": "2512:168:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_struct$_WhitelistStruct_$10_memory_ptr__to_t_struct$_WhitelistStruct_$10_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, 0x40)))))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b35760003560e01c8063810085681161007157806381008568146101435780638b2b423a146101ce5780638cdb7e8b146101d757806396074e701461021f578063b2bdfa7b14610232578063efdd87961461024557600080fd5b80625171f4146100b85780631d77b00b146100de578063338dbf59146100f3578063549dee0b146100fc5780635f348b4e146101055780637d3bca7614610130575b600080fd5b6100cb6100c6366004610734565b61024d565b6040519081526020015b60405180910390f35b6100f16100ec366004610734565b6102e7565b005b6100cb60025481565b6100cb60005481565b600454610118906001600160a01b031681565b6040516001600160a01b0390911681526020016100d5565b6100cb61013e366004610734565b610311565b6101a8610151366004610734565b6001600160a01b0316600090815260036020818152604092839020835160808101855281548082526001830154938201849052600283015460ff161515958201869052919093015460609093018390529390929190565b6040805194855260208501939093529015159183019190915260608201526080016100d5565b6100cb60015481565b6101ea6101e5366004610734565b6103c2565b6040516100d5919081518152602080830151908201526040808301511515908201526060918201519181019190915260800190565b6100f161022d366004610756565b61043f565b600554610118906001600160a01b031681565b6100f16104f6565b6000610257610504565b6001600160a01b038216600090815260036020526040902060010154156102de57600061028383610531565b905080156102d5576001600160a01b0383166000908152600360205260409020600101546102b2908290610796565b6001600160a01b0384166000908152600360205260409020600101559050919050565b50600092915050565b5060005b919050565b6102ef610504565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600061031b610504565b6001600160a01b038216600090815260036020526040902060010154156102de57600160008082825461034e9190610796565b90915550506001600160a01b038216600090815260036020526040812060019081015481549092906103819084906107ad565b9091555050506001600160a01b0316600090815260036020819052604082206001810180548483559084905560028201805460ff1916905591019190915590565b6103ef60405180608001604052806000815260200160008152602001600015158152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160808101855281548152600182015492810192909252600281015460ff16151593820193909352910154606082015290565b610447610504565b60015481111561046a57604051630653d03760e21b815260040160405180910390fd5b6001600160a01b038216600090815260036020526040902060010154156104f2576001600160a01b03821660009081526003602081905260408220838155600180820185905560028201805460ff191690559101819055815490919081906104d39084906107ad565b9250508190555080600160008282546104ec9190610796565b90915550505b5050565b6104fe610504565b42600255565b6004546001600160a01b0316331461052f576040516315a678a960e11b815260040160405180910390fd5b565b600080600062015180600254426105489190610796565b61055291906107c5565b90506101e08110156105ed576001600160a01b03841660009081526003602052604090206002015460ff166105e8576001600160a01b038416600090815260036020819052604090912060028101805460ff191660019081179091556101c292820192909255905490546105d1906a3cb5feec27901169e000006107e7565b6105db91906107c5565b6105e590836107ad565b91505b610716565b6101e08110158015610600575061034881105b1561070c576001600160a01b03841660009081526003602052604090206002015460ff16610681576001600160a01b038416600090815260036020526040902060028101805460ff1916600190811790915554905461066a906a3cb5feec27901169e000006107e7565b61067491906107c5565b61067e90836107ad565b91505b6001600160a01b0384166000908152600360208190526040822001546106a79083610796565b6001600160a01b03861660009081526003602081905260409091209081018490556001549054919250906106e6906a03290914be1afb750800006107e7565b6106f091906107c5565b6106fa90846107ad565b61070490826107e7565b925050610716565b5060009392505050565b5092915050565b80356001600160a01b03811681146102e257600080fd5b60006020828403121561074657600080fd5b61074f8261071d565b9392505050565b6000806040838503121561076957600080fd5b6107728361071d565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156107a8576107a8610780565b500390565b600082198211156107c0576107c0610780565b500190565b6000826107e257634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561080157610801610780565b50029056fea264697066735822122096fb00cacb88eae54b56484bdf09712d8e22a2802c766b8d4b4fe3604db406c964736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81008568 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x81008568 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x8B2B423A EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x8CDB7E8B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x96074E70 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xEFDD8796 EQ PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x5171F4 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x549DEE0B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x5F348B4E EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x7D3BCA76 EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCB PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP6 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x60 SWAP1 SWAP4 ADD DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0xCB PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x756 JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x257 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 PUSH2 0x283 DUP4 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2B2 SWAP1 DUP3 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x504 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31B PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x2DE JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP2 SLOAD SWAP1 SWAP3 SWAP1 PUSH2 0x381 SWAP1 DUP5 SWAP1 PUSH2 0x7AD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP5 DUP4 SSTORE SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x3EF PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x447 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD PUSH4 0x653D037 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD DUP2 SWAP1 SSTORE DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x4D3 SWAP1 DUP5 SWAP1 PUSH2 0x7AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x504 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x15180 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E0 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x5E8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x1C2 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD SWAP1 SLOAD PUSH2 0x5D1 SWAP1 PUSH11 0x3CB5FEEC27901169E00000 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x5E5 SWAP1 DUP4 PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH2 0x1E0 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x600 JUMPI POP PUSH2 0x348 DUP2 LT JUMPDEST ISZERO PUSH2 0x70C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x681 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SLOAD SWAP1 SLOAD PUSH2 0x66A SWAP1 PUSH11 0x3CB5FEEC27901169E00000 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x67E SWAP1 DUP4 PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH2 0x6A7 SWAP1 DUP4 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x1 SLOAD SWAP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x6E6 SWAP1 PUSH11 0x3290914BE1AFB75080000 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x6FA SWAP1 DUP5 PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x704 SWAP1 DUP3 PUSH2 0x7E7 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x716 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74F DUP3 PUSH2 0x71D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x772 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x7A8 JUMPI PUSH2 0x7A8 PUSH2 0x780 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7C0 PUSH2 0x780 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x801 JUMPI PUSH2 0x801 PUSH2 0x780 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xFB STOP 0xCA 0xCB DUP9 0xEA 0xE5 0x4B JUMP BASEFEE 0x4B 0xDF MULMOD PUSH18 0x2D8E22A2802C766B8D4B4FE3604DB406C964 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
							"sourceMap": "285:5214:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4925:572;;;;;;:::i;:::-;;:::i;:::-;;;529:25:2;;;517:2;502:18;4925:572:1;;;;;;;;1335:93;;;;;;:::i;:::-;;:::i;:::-;;515:31;;;;;;310;;;;;;669:21;;;;;-1:-1:-1;;;;;669:21:1;;;;;;-1:-1:-1;;;;;729:32:2;;;711:51;;699:2;684:18;669:21:1;565:203:2;4407:431:1;;;;;;:::i;:::-;;:::i;1434:432::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1659:18:1;1529:7;1659:18;;;:12;:18;;;;;;;;;1621:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:432;;;;;998:25:2;;;1054:2;1039:18;;1032:34;;;;1109:14;;1102:22;1082:18;;;1075:50;;;;1156:2;1141:18;;1134:34;985:3;970:19;1434:432:1;773:401:2;348:32:1;;;;;;1977:153;;;;;;:::i;:::-;;:::i;:::-;;;;;;1406:13:2;;1388:32;;1476:4;1464:17;;;1458:24;1436:20;;;1429:54;1553:4;1541:17;;;1535:24;1528:32;1521:40;1499:20;;;1492:70;1618:4;1606:17;;;1600:24;1578:20;;;1571:54;;;;1375:3;1360:19;;1179:452;3792:609:1;;;;;;:::i;:::-;;:::i;696:21::-;;;;;-1:-1:-1;;;;;696:21:1;;;1872:99;;;:::i;4925:572::-;5017:7;1193:12;:10;:12::i;:::-;-1:-1:-1;;;;;5044:18:1;::::1;5072:1;5044:18:::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;:29;5040:451:::1;;5089:29;5121:31;5147:4;5121:25;:31::i;:::-;5089:63:::0;-1:-1:-1;5171:25:1;;5167:275:::1;;-1:-1:-1::0;;;;;5264:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;:69:::1;::::0;5312:21;;5264:69:::1;:::i;:::-;-1:-1:-1::0;;;;;5216:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;:117:::0;5359:21;-1:-1:-1;4925:572:1;;;:::o;5167:275::-:1;-1:-1:-1::0;5426:1:1::1;::::0;4925:572;-1:-1:-1;;4925:572:1:o;5040:451::-:1;-1:-1:-1::0;5479:1:1::1;5040:451;4925:572:::0;;;:::o;1335:93::-;1193:12;:10;:12::i;:::-;1407:6:::1;:14:::0;;-1:-1:-1;;;;;;1407:14:1::1;-1:-1:-1::0;;;;;1407:14:1;;;::::1;::::0;;;::::1;::::0;;1335:93::o;4407:431::-;4500:7;1193:12;:10;:12::i;:::-;-1:-1:-1;;;;;4527:18:1;::::1;4555:1;4527:18:::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;:29;4523:309:::1;;4592:1;4572:16;::::0;:21:::1;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4628:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;::::0;;::::1;::::0;4607:46;;4628:25;;:18;4607:46:::1;::::0;4628:25;;4607:46:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;;4687:18:1::1;4667:17;4687:18:::0;;;:12:::1;:18;::::0;;;;;;:25:::1;::::0;::::1;::::0;;4727;;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;4727:25:1::1;::::0;;;::::1;::::0;;;;4687;4925:572::o;1977:153::-;2060:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2060:22:1;-1:-1:-1;;;;;;2105:18:1;;;;;:12;:18;;;;;;;;;2098:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1977:153::o;3792:609::-;1193:12;:10;:12::i;:::-;3967:17:::1;;3958:6;:26;3954:99;;;4007:35;;-1:-1:-1::0;;;4007:35:1::1;;;;;;;;;;;3954:99;-1:-1:-1::0;;;;;4067:18:1;::::1;4095:1;4067:18:::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;:29;4063:332:::1;;-1:-1:-1::0;;;;;4112:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;;;:40;;;4166:25:::1;::::0;;::::1;:34:::0;;;4214::::1;::::0;::::1;:42:::0;;-1:-1:-1;;4214:42:1::1;::::0;;4270:33;::::1;:37:::0;;;4322:21;;4166:25;;4112:18;;;4322:21:::1;::::0;4166:25;;4322:21:::1;:::i;:::-;;;;;;;;4378:6;4357:17;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4063:332:1::1;3792:609:::0;;:::o;1872:99::-;1193:12;:10;:12::i;:::-;1949:15:::1;1930:16;:34:::0;1872:99::o;961:195::-;1085:6;;-1:-1:-1;;;;;1085:6:1;1071:10;:20;1067:83;;1114:25;;-1:-1:-1;;;1114:25:1;;;;;;;;;;;1067:83;961:195::o;2235:1551::-;2318:7;2341:17;2369:20;2431:6;2411:16;;2393:15;:34;;;;:::i;:::-;2392:45;;;;:::i;:::-;2369:68;;2520:7;2505:12;:22;2501:1252;;;-1:-1:-1;;;;;2547:18:1;;;;;;:12;:18;;;;;:34;;;;;2543:355;;-1:-1:-1;;;;;2610:18:1;;;;;;:12;:18;;;;;;;;:34;;;:41;;-1:-1:-1;;2610:41:1;2647:4;2610:41;;;;;;2705:7;2669:33;;;:43;;;;2865:17;;2806:31;;2796:41;;422:15;2796:41;:::i;:::-;2795:87;;;;:::i;:::-;2762:121;;:9;:121;:::i;:::-;2730:153;;2543:355;2501:1252;;;2993:7;2977:12;:23;;:49;;;;;3019:7;3004:12;:22;2977:49;2973:780;;;-1:-1:-1;;;;;3046:18:1;;;;;;:12;:18;;;;;:34;;;;;3042:294;;-1:-1:-1;;;;;3109:18:1;;;;;;:12;:18;;;;;:34;;;:41;;-1:-1:-1;;3109:41:1;3146:4;3109:41;;;;;;3303:17;3244:31;;3234:41;;422:15;3234:41;:::i;:::-;3233:87;;;;:::i;:::-;3200:121;;:9;:121;:::i;:::-;3168:153;;3042:294;-1:-1:-1;;;;;3408:18:1;;3350:24;3408:18;;;:12;:18;;;;;;;:33;;3377:64;;:12;:64;:::i;:::-;-1:-1:-1;;;;;3455:18:1;;;;;;:12;:18;;;;;;;;:33;;;:48;;;3684:17;;3625:31;;3350:91;;-1:-1:-1;3684:17:1;3615:41;;479:14;3615:41;:::i;:::-;3614:87;;;;:::i;:::-;3581:121;;:9;:121;:::i;:::-;3545:158;;:16;:158;:::i;:::-;3517:186;;3028:686;2973:780;;;-1:-1:-1;3741:1:1;;2235:1551;-1:-1:-1;;;2235:1551:1:o;2973:780::-;-1:-1:-1;3770:9:1;2235:1551;-1:-1:-1;;2235:1551:1:o;14:173:2:-;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:2:o;1636:254::-;1704:6;1712;1765:2;1753:9;1744:7;1740:23;1736:32;1733:52;;;1781:1;1778;1771:12;1733:52;1804:29;1823:9;1804:29;:::i;:::-;1794:39;1880:2;1865:18;;;;1852:32;;-1:-1:-1;;;1636:254:2:o;1895:127::-;1956:10;1951:3;1947:20;1944:1;1937:31;1987:4;1984:1;1977:15;2011:4;2008:1;2001:15;2027:125;2067:4;2095:1;2092;2089:8;2086:34;;;2100:18;;:::i;:::-;-1:-1:-1;2137:9:2;;2027:125::o;2157:128::-;2197:3;2228:1;2224:6;2221:1;2218:13;2215:39;;;2234:18;;:::i;:::-;-1:-1:-1;2270:9:2;;2157:128::o;2290:217::-;2330:1;2356;2346:132;;2400:10;2395:3;2391:20;2388:1;2381:31;2435:4;2432:1;2425:15;2463:4;2460:1;2453:15;2346:132;-1:-1:-1;2492:9:2;;2290:217::o;2512:168::-;2552:7;2618:1;2614;2610:6;2606:14;2603:1;2600:21;2595:1;2588:9;2581:17;2577:45;2574:71;;;2625:18;;:::i;:::-;-1:-1:-1;2665:9:2;;2512:168::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "421600",
								"executionCost": "71035",
								"totalCost": "492635"
							},
							"external": {
								"_owner()": "2425",
								"_talax()": "2426",
								"addBeneficiary(address,uint256)": "146150",
								"beneficiary(address)": "9080",
								"changeTalaxAddress(address)": "26758",
								"deleteBeneficiary(address)": "infinite",
								"hasWhitelist(address)": "9269",
								"initiateWhitelist()": "24523",
								"privateSaleAmount()": "2306",
								"privateSaleUsers()": "2351",
								"releaseClaimable(address)": "infinite",
								"startPrivateSale()": "2329"
							},
							"internal": {
								"_calculateClaimableAmount(address)": "infinite",
								"_onlyTalax()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 285,
									"end": 5499,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 285,
									"end": 5499,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 285,
									"end": 5499,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 724,
									"end": 850,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 724,
									"end": 850,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 724,
									"end": 850,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 724,
									"end": 850,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 724,
									"end": 850,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 724,
									"end": 850,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 850,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 724,
									"end": 850,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 724,
									"end": 850,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 724,
									"end": 850,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 768,
									"end": 785,
									"name": "PUSH",
									"source": 1,
									"value": "4BE37EA7317415C45800000"
								},
								{
									"begin": 748,
									"end": 765,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 785,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 795,
									"end": 801,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 795,
									"end": 814,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 795,
									"end": 814,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 795,
									"end": 814,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 795,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 795,
									"end": 814,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 795,
									"end": 814,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 795,
									"end": 814,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 795,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 795,
									"end": 814,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 795,
									"end": 814,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 824,
									"end": 830,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 824,
									"end": 843,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 824,
									"end": 843,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 824,
									"end": 843,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 824,
									"end": 843,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 824,
									"end": 843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 824,
									"end": 843,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 824,
									"end": 843,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 824,
									"end": 843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 824,
									"end": 843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 285,
									"end": 5499,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 5499,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 285,
									"end": 5499,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 5499,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 285,
									"end": 5499,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 5499,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096fb00cacb88eae54b56484bdf09712d8e22a2802c766b8d4b4fe3604db406c964736f6c634300080b0033",
									".code": [
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "81008568"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "81008568"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "8B2B423A"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "8CDB7E8B"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "96074E70"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "B2BDFA7B"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "EFDD8796"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "5171F4"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "1D77B00B"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "338DBF59"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "549DEE0B"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "5F348B4E"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "7D3BCA76"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 5499,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 515,
											"end": 546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 310,
											"end": 341,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 310,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 310,
											"end": 341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 341,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 310,
											"end": 341,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 341,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 669,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 669,
											"end": 690,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 669,
											"end": 690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 669,
											"end": 690,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 669,
											"end": 690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 690,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 669,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 690,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 729,
											"end": 761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 729,
											"end": 761,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 729,
											"end": 761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 669,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 768,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1671,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1023,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1023,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1023,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1100,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1100,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1100,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1168,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 985,
											"end": 988,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 970,
											"end": 989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 1174,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 380,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 348,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 380,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 380,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 348,
											"end": 380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 348,
											"end": 380,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1464,
											"end": 1481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1481,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1429,
											"end": 1483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1558,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1561,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1606,
											"end": 1623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1600,
											"end": 1624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1598,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1625,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1625,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1360,
											"end": 1379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1631,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 696,
											"end": 717,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 696,
											"end": 717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 696,
											"end": 717,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 696,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 696,
											"end": 717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 696,
											"end": 717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 696,
											"end": 717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 717,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1971,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1872,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1872,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1872,
											"end": 1971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1193,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5069,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5044,
											"end": 5069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5069,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5073,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5040,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5040,
											"end": 5491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5147,
											"end": 5151,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5121,
											"end": 5152,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5121,
											"end": 5152,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5121,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5171,
											"end": 5196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5196,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5167,
											"end": 5442,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5289,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5264,
											"end": 5289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5289,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5264,
											"end": 5333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5264,
											"end": 5333,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5264,
											"end": 5333,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5264,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5333,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5167,
											"end": 5442,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5167,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5426,
											"end": 5427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5427,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5040,
											"end": 5491,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5040,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5479,
											"end": 5480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5491,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5040,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1193,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4407,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4500,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1193,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4539,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4552,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4527,
											"end": 4552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4556,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4523,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4523,
											"end": 4832,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4593,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4572,
											"end": 4588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4572,
											"end": 4588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4653,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4628,
											"end": 4653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4653,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4653,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4653,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4667,
											"end": 4684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4699,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4712,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4687,
											"end": 4712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4712,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5497,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2130,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1193,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3984,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3967,
											"end": 3984,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3958,
											"end": 3984,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3954,
											"end": 4053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3954,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3954,
											"end": 4053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "653D037"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3954,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3954,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4096,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4152,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4191,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4200,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4200,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4248,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4214,
											"end": 4248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4256,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4214,
											"end": 4256,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4256,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4307,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4191,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4374,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4357,
											"end": 4374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 4401,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1872,
											"end": 1971,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1872,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1193,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1964,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1946,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1930,
											"end": 1964,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1971,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1156,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 961,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1081,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1091,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1067,
											"end": 1150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15A678A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1150,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1067,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1156,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2235,
											"end": 3786,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "15180"
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2393,
											"end": 2427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2393,
											"end": 2427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2393,
											"end": 2427,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2393,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2527,
											"name": "PUSH",
											"source": 1,
											"value": "1E0"
										},
										{
											"begin": 2505,
											"end": 2517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2527,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 3753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2501,
											"end": 3753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2547,
											"end": 2581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2622,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2644,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2610,
											"end": 2644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2651,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2610,
											"end": 2651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2651,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2610,
											"end": 2651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2651,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2651,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "1C2"
										},
										{
											"begin": 2669,
											"end": 2702,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2712,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2882,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2837,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 437,
											"name": "PUSH",
											"source": 1,
											"value": "3CB5FEEC27901169E00000"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2762,
											"end": 2883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2762,
											"end": 2883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2762,
											"end": 2883,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2762,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2898,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2501,
											"end": 3753,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 3753,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2501,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3000,
											"name": "PUSH",
											"source": 1,
											"value": "1E0"
										},
										{
											"begin": 2977,
											"end": 2989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3000,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3000,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3026,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2973,
											"end": 3753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3058,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3042,
											"end": 3336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3143,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3109,
											"end": 3143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3150,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3150,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3109,
											"end": 3150,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3150,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3109,
											"end": 3150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3150,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3150,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3150,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3320,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3234,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 437,
											"name": "PUSH",
											"source": 1,
											"value": "3CB5FEEC27901169E00000"
										},
										{
											"begin": 3234,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3234,
											"end": 3275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3234,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3234,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3233,
											"end": 3320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3233,
											"end": 3320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3320,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3233,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3200,
											"end": 3321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3209,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3200,
											"end": 3321,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3321,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3200,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3336,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3042,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3420,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3441,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3377,
											"end": 3441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3389,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3377,
											"end": 3441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3377,
											"end": 3441,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3377,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3503,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3701,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3684,
											"end": 3701,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3656,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3441,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3684,
											"end": 3701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 479,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "3290914BE1AFB75080000"
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3614,
											"end": 3701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3614,
											"end": 3701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3614,
											"end": 3701,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3614,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3581,
											"end": 3702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3590,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3581,
											"end": 3702,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3702,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3581,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3545,
											"end": 3703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3545,
											"end": 3703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3545,
											"end": 3703,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3545,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3703,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2973,
											"end": 3753,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3753,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2973,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3741,
											"end": 3742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3742,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 3786,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2235,
											"end": 3786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2973,
											"end": 3753,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2973,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 3786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2235,
											"end": 3786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1636,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1636,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1762,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1751,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1763,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1785,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1733,
											"end": 1785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1783,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1785,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1733,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1823,
											"end": 1832,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1804,
											"end": 1833,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1804,
											"end": 1833,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1804,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1794,
											"end": 1833,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1884,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1884,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1636,
											"end": 1890,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1895,
											"end": 2022,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1895,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1966,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1968,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 1991,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1984,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2015,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2016,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2152,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2027,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2097,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2146,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2137,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2152,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2157,
											"end": 2285,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2157,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2230,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2231,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2215,
											"end": 2254,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2270,
											"end": 2279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2285,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2290,
											"end": 2507,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2290,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2357,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2346,
											"end": 2478,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 2395,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2391,
											"end": 2411,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2412,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2425,
											"end": 2440,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2468,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2478,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2346,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2507,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2512,
											"end": 2680,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2512,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2552,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2620,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2621,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2597,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2598,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2622,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2680,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_owner()": "b2bdfa7b",
							"_talax()": "5f348b4e",
							"addBeneficiary(address,uint256)": "96074e70",
							"beneficiary(address)": "81008568",
							"changeTalaxAddress(address)": "1d77b00b",
							"deleteBeneficiary(address)": "7d3bca76",
							"hasWhitelist(address)": "8cdb7e8b",
							"initiateWhitelist()": "efdd8796",
							"privateSaleAmount()": "8b2b423a",
							"privateSaleUsers()": "549dee0b",
							"releaseClaimable(address)": "005171f4",
							"startPrivateSale()": "338dbf59"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Function__notAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MainFunction__insufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_talax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"deleteBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasWhitelist\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPhase1Claimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"latestClaimDay\",\"type\":\"uint256\"}],\"internalType\":\"struct WhitelistStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"Function__notAuthorized()\":[{\"notice\":\"Error handling message for Modifier\"}],\"MainFunction__insufficientBalance()\":[{\"notice\":\"Error handling message for Main Function\"}]},\"kind\":\"user\",\"methods\":{\"releaseClaimable(address)\":{\"notice\":\"Transfers tokens held by timelock to beneficiary.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WhiteList.sol\":\"Whitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x43e967de7a19c9271e351e91cc2d49831947ab238942a097122799a7b1b21ea2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://555a1f6667d327504a50e1880db254d0c62e239942abf495e0e7ef5ee7af06e4\",\"dweb:/ipfs/QmbqGVTBbkHcoJukQtcLKRCL8J1YAQMjmiLANG6Sztx9y6\"]},\"contracts/WhiteList.sol\":{\"keccak256\":\"0x19e040850bceef1a9d7190991a91375cf18d5e919364258e623a5938b8dedfc0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e042170c9ca6dcb7c0ca344e076ed066ef0e00b9e487b8ca64b59d8e7e061cb\",\"dweb:/ipfs/QmPe5ghrAVrL4CwE1ioQZFAhtZFSiaerEP4FydVSyTCmiv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "contracts/WhiteList.sol:Whitelist",
								"label": "privateSaleUsers",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 207,
								"contract": "contracts/WhiteList.sol:Whitelist",
								"label": "privateSaleAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 219,
								"contract": "contracts/WhiteList.sol:Whitelist",
								"label": "startPrivateSale",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 224,
								"contract": "contracts/WhiteList.sol:Whitelist",
								"label": "_beneficiary",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(WhitelistStruct)10_storage)"
							},
							{
								"astId": 226,
								"contract": "contracts/WhiteList.sol:Whitelist",
								"label": "_talax",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 228,
								"contract": "contracts/WhiteList.sol:Whitelist",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(WhitelistStruct)10_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct WhitelistStruct)",
								"numberOfBytes": "32",
								"value": "t_struct(WhitelistStruct)10_storage"
							},
							"t_struct(WhitelistStruct)10_storage": {
								"encoding": "inplace",
								"label": "struct WhitelistStruct",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/WhiteList.sol:Whitelist",
										"label": "lockedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "contracts/WhiteList.sol:Whitelist",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 7,
										"contract": "contracts/WhiteList.sol:Whitelist",
										"label": "isPhase1Claimed",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 9,
										"contract": "contracts/WhiteList.sol:Whitelist",
										"label": "latestClaimDay",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"Function__notAuthorized()": [
								{
									"notice": "Error handling message for Modifier"
								}
							],
							"MainFunction__insufficientBalance()": [
								{
									"notice": "Error handling message for Main Function"
								}
							]
						},
						"kind": "user",
						"methods": {
							"releaseClaimable(address)": {
								"notice": "Transfers tokens held by timelock to beneficiary."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Interfaces.sol": {
				"ast": {
					"absolutePath": "contracts/Interfaces.sol",
					"exportedSymbols": {
						"Beneficiary": [
							15
						],
						"ILockable": [
							194
						],
						"IStakable": [
							108
						],
						"IWhitelist": [
							166
						],
						"WhitelistStruct": [
							10
						]
					},
					"id": 195,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"canonicalName": "WhitelistStruct",
							"id": 10,
							"members": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "lockedAmount",
									"nameLocation": "101:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 10,
									"src": "93:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "93:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "127:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 10,
									"src": "119:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "119:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "isPhase1Claimed",
									"nameLocation": "144:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 10,
									"src": "139:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 6,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "139:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "latestClaimDay",
									"nameLocation": "173:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 10,
									"src": "165:22:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "165:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "WhitelistStruct",
							"nameLocation": "71:15:0",
							"nodeType": "StructDefinition",
							"scope": 195,
							"src": "64:126:0",
							"visibility": "public"
						},
						{
							"canonicalName": "Beneficiary",
							"id": 15,
							"members": [
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "user",
									"nameLocation": "225:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 15,
									"src": "217:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "217:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "243:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 15,
									"src": "235:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "235:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Beneficiary",
							"nameLocation": "199:11:0",
							"nodeType": "StructDefinition",
							"scope": 195,
							"src": "192:60:0",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStakable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 108,
							"linearizedBaseContracts": [
								108
							],
							"name": "IStakable",
							"nameLocation": "264:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cb79c2e1",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakingPenaltyRate",
									"nameLocation": "289:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "333:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:9:0"
									},
									"scope": 108,
									"src": "280:62:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8891cf0d",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "airdropRate",
									"nameLocation": "357:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "368:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "394:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:9:0"
									},
									"scope": 108,
									"src": "348:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b87da76d",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "airdropSince",
									"nameLocation": "418:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "430:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "456:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:9:0"
									},
									"scope": 108,
									"src": "409:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f5300ff",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVoters",
									"nameLocation": "480:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "517:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:9:0"
									},
									"scope": 108,
									"src": "471:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d15cc04",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVoters",
									"nameLocation": "541:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "559:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:14:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "588:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "588:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "594:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:12:0"
									},
									"scope": 108,
									"src": "532:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a143a5f2",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votedUsers",
									"nameLocation": "640:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "659:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "651:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:12:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "686:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:9:0"
									},
									"scope": 108,
									"src": "631:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2a569c3",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startAirdrop",
									"nameLocation": "710:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "722:2:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:0"
									},
									"scope": 108,
									"src": "701:33:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "749:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "768:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:15:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:0"
									},
									"scope": 108,
									"src": "740:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f93d4f8a",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "807:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "830:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "stakePeriod",
												"nameLocation": "876:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "868:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "905:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "897:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:109:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:0"
									},
									"scope": 108,
									"src": "798:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8c63f97f",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changePenaltyFee",
									"nameLocation": "946:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "971:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "963:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:16:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:0"
									},
									"scope": 108,
									"src": "937:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5dbdf1b",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeAirdropPercentage",
									"nameLocation": "1003:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1035:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1027:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:16:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1051:0:0"
									},
									"scope": 108,
									"src": "994:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c23a5cea",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "1067:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1089:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1081:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:14:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1113:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1122:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:18:0"
									},
									"scope": 108,
									"src": "1058:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "65f8c6c5",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimAirdrop",
									"nameLocation": "1146:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1167:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1159:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1158:14:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1190:9:0"
									},
									"scope": 108,
									"src": "1137:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ec6b60a",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startVoting",
									"nameLocation": "1215:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1237:0:0"
									},
									"scope": 108,
									"src": "1206:32:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "671d2b75",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVotingResult",
									"nameLocation": "1253:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:2:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1294:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:6:0"
									},
									"scope": 108,
									"src": "1244:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fab2f86b",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stopVoting",
									"nameLocation": "1315:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1325:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1336:0:0"
									},
									"scope": 108,
									"src": "1306:31:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 195,
							"src": "254:1085:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWhitelist",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "IWhitelist",
							"nameLocation": "1351:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "549dee0b",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "privateSaleUsers",
									"nameLocation": "1377:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:2:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1419:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1418:9:0"
									},
									"scope": 166,
									"src": "1368:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8b2b423a",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "privateSaleAmount",
									"nameLocation": "1443:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1460:2:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1486:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:9:0"
									},
									"scope": 166,
									"src": "1434:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "338dbf59",
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startPrivateSale",
									"nameLocation": "1510:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1526:2:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1552:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1551:9:0"
									},
									"scope": 166,
									"src": "1501:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "1576:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1603:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1595:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1594:15:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:0:0"
									},
									"scope": 166,
									"src": "1567:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "81008568",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1634:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1654:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1646:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1645:14:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1720:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1741:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1762:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1762:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1780:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:91:0"
									},
									"scope": 166,
									"src": "1625:173:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "efdd8796",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initiateWhitelist",
									"nameLocation": "1870:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1887:2:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1898:0:0"
									},
									"scope": 166,
									"src": "1861:38:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "96074e70",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addBeneficiary",
									"nameLocation": "1914:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1937:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1929:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1951:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1943:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:30:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1967:0:0"
									},
									"scope": 166,
									"src": "1905:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7d3bca76",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteBeneficiary",
									"nameLocation": "1983:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2009:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2001:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2033:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:9:0"
									},
									"scope": 166,
									"src": "1974:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "005171f4",
									"id": 165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseClaimable",
									"nameLocation": "2057:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2082:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2074:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:14:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2106:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2105:9:0"
									},
									"scope": 166,
									"src": "2048:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 195,
							"src": "1341:776:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILockable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "ILockable",
							"nameLocation": "2129:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "38af3eed",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "2154:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2165:2:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:9:0"
									},
									"scope": 194,
									"src": "2145:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "2215:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "2242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "2234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2233:15:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:0"
									},
									"scope": 194,
									"src": "2206:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b580aa9e",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startLockedWallet",
									"nameLocation": "2273:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:2:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2315:9:0"
									},
									"scope": 194,
									"src": "2264:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c8cca41e",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initiateLockedWallet",
									"nameLocation": "2340:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:2:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:0:0"
									},
									"scope": 194,
									"src": "2331:41:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0a95606e",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseClaimable",
									"nameLocation": "2387:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2423:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2404:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
													"typeString": "uint256[51]"
												},
												"typeName": {
													"baseType": {
														"id": 185,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 187,
													"length": {
														"hexValue": "3531",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2412:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"nodeType": "ArrayTypeName",
													"src": "2404:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$51_storage_ptr",
														"typeString": "uint256[51]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:27:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:9:0"
									},
									"scope": 194,
									"src": "2378:96:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 195,
							"src": "2119:357:0",
							"usedErrors": []
						}
					],
					"src": "39:2438:0"
				},
				"id": 0
			},
			"contracts/WhiteList.sol": {
				"ast": {
					"absolutePath": "contracts/WhiteList.sol",
					"exportedSymbols": {
						"Beneficiary": [
							15
						],
						"Function__notAuthorized": [
							200
						],
						"ILockable": [
							194
						],
						"IStakable": [
							108
						],
						"IWhitelist": [
							166
						],
						"MainFunction__insufficientBalance": [
							203
						],
						"Whitelist": [
							644
						],
						"WhitelistStruct": [
							10
						]
					},
					"id": 645,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "contracts/Interfaces.sol",
							"file": "./Interfaces.sol",
							"id": 197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 195,
							"src": "64:26:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 198,
								"nodeType": "StructuredDocumentation",
								"src": "92:54:1",
								"text": " @notice Error handling message for Modifier"
							},
							"id": 200,
							"name": "Function__notAuthorized",
							"nameLocation": "153:23:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 199,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "176:2:1"
							},
							"src": "147:32:1"
						},
						{
							"documentation": {
								"id": 201,
								"nodeType": "StructuredDocumentation",
								"src": "181:59:1",
								"text": " @notice Error handling message for Main Function"
							},
							"id": 203,
							"name": "MainFunction__insufficientBalance",
							"nameLocation": "247:33:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 202,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "280:2:1"
							},
							"src": "241:42:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Whitelist",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 644,
							"linearizedBaseContracts": [
								644
							],
							"name": "Whitelist",
							"nameLocation": "294:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "549dee0b",
									"id": 205,
									"mutability": "mutable",
									"name": "privateSaleUsers",
									"nameLocation": "325:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "310:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b2b423a",
									"id": 207,
									"mutability": "mutable",
									"name": "privateSaleAmount",
									"nameLocation": "363:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "348:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 206,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "348:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 212,
									"mutability": "constant",
									"name": "_phase1",
									"nameLocation": "412:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "386:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "386:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_73395000000000000000000000_by_1",
											"typeString": "int_const 73395000000000000000000000"
										},
										"id": 211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3733333935303030",
											"id": 209,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "422:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_73395000_by_1",
												"typeString": "int_const 73395000"
											},
											"value": "73395000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 210,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "433:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "422:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_73395000000000000000000000_by_1",
											"typeString": "int_const 73395000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 217,
									"mutability": "constant",
									"name": "_phase2",
									"nameLocation": "469:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "443:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "443:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_3820562000000000000000000_by_1",
											"typeString": "int_const 3820562000000000000000000"
										},
										"id": 216,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33383230353632",
											"id": 214,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "479:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3820562_by_1",
												"typeString": "int_const 3820562"
											},
											"value": "3820562"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 215,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "489:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "479:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3820562000000000000000000_by_1",
											"typeString": "int_const 3820562000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "338dbf59",
									"id": 219,
									"mutability": "mutable",
									"name": "startPrivateSale",
									"nameLocation": "530:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "515:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 224,
									"mutability": "mutable",
									"name": "_beneficiary",
									"nameLocation": "650:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "606:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
										"typeString": "mapping(address => struct WhitelistStruct)"
									},
									"typeName": {
										"id": 223,
										"keyType": {
											"id": 220,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "614:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "606:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
											"typeString": "mapping(address => struct WhitelistStruct)"
										},
										"valueType": {
											"id": 222,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 221,
												"name": "WhitelistStruct",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 10,
												"src": "625:15:1"
											},
											"referencedDeclaration": 10,
											"src": "625:15:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage_ptr",
												"typeString": "struct WhitelistStruct"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "5f348b4e",
									"id": 226,
									"mutability": "mutable",
									"name": "_talax",
									"nameLocation": "684:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "669:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 225,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "669:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b2bdfa7b",
									"id": 228,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "711:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "696:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 227,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "696:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "738:112:1",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 231,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "748:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_1467900000000000000000000000_by_1",
															"typeString": "int_const 1467900000000000000000000000"
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31343637393030303030",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "768:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1467900000_by_1",
																"typeString": "int_const 1467900000"
															},
															"value": "1467900000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "781:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "768:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1467900000000000000000000000_by_1",
															"typeString": "int_const 1467900000000000000000000000"
														}
													},
													"src": "748:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "748:37:1"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 237,
														"name": "_talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "795:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 238,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "804:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "804:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "795:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "795:19:1"
											},
											{
												"expression": {
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 242,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "824:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 243,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "833:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "833:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "824:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "824:19:1"
											}
										]
									},
									"id": 248,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "735:2:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:0:1"
									},
									"scope": 644,
									"src": "724:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "997:159:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 251,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1071:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1071:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 253,
														"name": "_talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1085:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1071:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "1067:83:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "1093:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 255,
																	"name": "Function__notAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "1114:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1114:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "1107:32:1"
														}
													]
												}
											}
										]
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyTalax",
									"nameLocation": "970:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "980:2:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "997:0:1"
									},
									"scope": 644,
									"src": "961:195:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "1183:40:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_onlyTalax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1193:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1193:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "1193:12:1"
											},
											{
												"id": 266,
												"nodeType": "PlaceholderStatement",
												"src": "1215:1:1"
											}
										]
									},
									"id": 268,
									"name": "onlyTalax",
									"nameLocation": "1171:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1180:2:1"
									},
									"src": "1162:61:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "1397:31:1",
										"statements": [
											{
												"expression": {
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 275,
														"name": "_talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1407:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 276,
														"name": "talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "1416:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1407:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "1407:14:1"
											}
										]
									},
									"functionSelector": "1d77b00b",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 273,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 272,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 268,
												"src": "1387:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1387:9:1"
										}
									],
									"name": "changeTalaxAddress",
									"nameLocation": "1344:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1371:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1363:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1362:15:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1397:0:1"
									},
									"scope": 644,
									"src": "1335:93:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1611:255:1",
										"statements": [
											{
												"assignments": [
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "beneficiary_",
														"nameLocation": "1644:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "1621:35:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStruct_$10_memory_ptr",
															"typeString": "struct WhitelistStruct"
														},
														"typeName": {
															"id": 294,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 293,
																"name": "WhitelistStruct",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "1621:15:1"
															},
															"referencedDeclaration": 10,
															"src": "1621:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage_ptr",
																"typeString": "struct WhitelistStruct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"baseExpression": {
														"id": 296,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1659:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
															"typeString": "mapping(address => struct WhitelistStruct storage ref)"
														}
													},
													"id": 298,
													"indexExpression": {
														"id": 297,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "1672:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1659:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
														"typeString": "struct WhitelistStruct storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1621:56:1"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 300,
																"name": "beneficiary_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "1708:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$10_memory_ptr",
																	"typeString": "struct WhitelistStruct memory"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lockedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "1708:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 302,
																"name": "beneficiary_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "1747:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$10_memory_ptr",
																	"typeString": "struct WhitelistStruct memory"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5,
															"src": "1747:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 304,
																"name": "beneficiary_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "1780:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$10_memory_ptr",
																	"typeString": "struct WhitelistStruct memory"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isPhase1Claimed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "1780:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 306,
																"name": "beneficiary_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "1822:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$10_memory_ptr",
																	"typeString": "struct WhitelistStruct memory"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "latestClaimDay",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "1822:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 308,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1694:165:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,bool,uint256)"
													}
												},
												"functionReturnParameters": 292,
												"id": 309,
												"nodeType": "Return",
												"src": "1687:172:1"
											}
										]
									},
									"functionSelector": "81008568",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1443:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1463:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1455:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:14:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1529:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1550:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1571:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1571:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1589:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1515:91:1"
									},
									"scope": 644,
									"src": "1434:432:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "1920:51:1",
										"statements": [
											{
												"expression": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "startPrivateSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1930:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 317,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1949:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1949:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1930:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "1930:34:1"
											}
										]
									},
									"functionSelector": "efdd8796",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 268,
												"src": "1910:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1910:9:1"
										}
									],
									"name": "initiateWhitelist",
									"nameLocation": "1881:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1898:2:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:0:1"
									},
									"scope": 644,
									"src": "1872:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2088:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 330,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2105:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
															"typeString": "mapping(address => struct WhitelistStruct storage ref)"
														}
													},
													"id": 332,
													"indexExpression": {
														"id": 331,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "2118:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
														"typeString": "struct WhitelistStruct storage ref"
													}
												},
												"functionReturnParameters": 329,
												"id": 333,
												"nodeType": "Return",
												"src": "2098:25:1"
											}
										]
									},
									"functionSelector": "8cdb7e8b",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasWhitelist",
									"nameLocation": "1986:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2007:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1999:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:14:1"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2060:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_WhitelistStruct_$10_memory_ptr",
													"typeString": "struct WhitelistStruct"
												},
												"typeName": {
													"id": 327,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 326,
														"name": "WhitelistStruct",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "2060:15:1"
													},
													"referencedDeclaration": 10,
													"src": "2060:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage_ptr",
														"typeString": "struct WhitelistStruct"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:24:1"
									},
									"scope": 644,
									"src": "1977:153:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2331:1455:1",
										"statements": [
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "claimable",
														"nameLocation": "2349:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "2341:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 343,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2341:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"nodeType": "VariableDeclarationStatement",
												"src": "2341:17:1"
											},
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "lockDuration",
														"nameLocation": "2377:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "2369:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2369:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 348,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2393:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2393:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 350,
																	"name": "startPrivateSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "2411:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2393:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 352,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2392:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2431:6:1",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "2392:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2369:68:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 356,
														"name": "lockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2505:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_480_by_1",
															"typeString": "int_const 480"
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3136",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2520:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3330",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2525:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"src": "2520:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_480_by_1",
															"typeString": "int_const 480"
														}
													},
													"src": "2505:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 401,
																"name": "lockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "2977:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_480_by_1",
																	"typeString": "int_const 480"
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2993:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2998:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "2993:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_480_by_1",
																	"typeString": "int_const 480"
																}
															},
															"src": "2977:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "lockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "3004:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_840_by_1",
																	"typeString": "int_const 840"
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3238",
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3019:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	},
																	"value": "28"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3024:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "3019:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_840_by_1",
																	"typeString": "int_const 840"
																}
															},
															"src": "3004:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2977:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 479,
														"nodeType": "Block",
														"src": "3720:33:1",
														"statements": [
															{
																"expression": {
																	"hexValue": "30",
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3741:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 342,
																"id": 478,
																"nodeType": "Return",
																"src": "3734:8:1"
															}
														]
													},
													"id": 480,
													"nodeType": "IfStatement",
													"src": "2973:780:1",
													"trueBody": {
														"id": 476,
														"nodeType": "Block",
														"src": "3028:686:1",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 412,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "3046:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																					"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																				}
																			},
																			"id": 414,
																			"indexExpression": {
																				"id": 413,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 338,
																				"src": "3059:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3046:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																				"typeString": "struct WhitelistStruct storage ref"
																			}
																		},
																		"id": 415,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "isPhase1Claimed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "3046:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3084:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "3046:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 441,
																"nodeType": "IfStatement",
																"src": "3042:294:1",
																"trueBody": {
																	"id": 440,
																	"nodeType": "Block",
																	"src": "3091:245:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 418,
																							"name": "_beneficiary",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 224,
																							"src": "3109:12:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																								"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																							}
																						},
																						"id": 420,
																						"indexExpression": {
																							"id": 419,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 338,
																							"src": "3122:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3109:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																							"typeString": "struct WhitelistStruct storage ref"
																						}
																					},
																					"id": 421,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "isPhase1Claimed",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 7,
																					"src": "3109:34:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "74727565",
																					"id": 422,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3146:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"src": "3109:41:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 424,
																			"nodeType": "ExpressionStatement",
																			"src": "3109:41:1"
																		},
																		{
																			"expression": {
																				"id": 438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 425,
																					"name": "claimable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 344,
																					"src": "3168:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 426,
																						"name": "claimable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 344,
																						"src": "3200:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 435,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"components": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 432,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 427,
																												"name": "_phase1",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 212,
																												"src": "3234:7:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "*",
																											"rightExpression": {
																												"expression": {
																													"baseExpression": {
																														"id": 428,
																														"name": "_beneficiary",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 224,
																														"src": "3244:12:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																															"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																														}
																													},
																													"id": 430,
																													"indexExpression": {
																														"id": 429,
																														"name": "user",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 338,
																														"src": "3257:4:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "3244:18:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																														"typeString": "struct WhitelistStruct storage ref"
																													}
																												},
																												"id": 431,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "lockedAmount",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 3,
																												"src": "3244:31:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "3234:41:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"id": 433,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "3233:43:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 434,
																									"name": "privateSaleAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 207,
																									"src": "3303:17:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3233:87:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 436,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3232:89:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3200:121:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3168:153:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 439,
																			"nodeType": "ExpressionStatement",
																			"src": "3168:153:1"
																		}
																	]
																}
															},
															{
																"assignments": [
																	443
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 443,
																		"mutability": "mutable",
																		"name": "sinceLatestClaim",
																		"nameLocation": "3358:16:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 476,
																		"src": "3350:24:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 442,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3350:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 450,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 444,
																		"name": "lockDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "3377:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 445,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "3408:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																					"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																				}
																			},
																			"id": 447,
																			"indexExpression": {
																				"id": 446,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 338,
																				"src": "3421:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3408:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																				"typeString": "struct WhitelistStruct storage ref"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestClaimDay",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "3408:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3377:64:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3350:91:1"
															},
															{
																"expression": {
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 451,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "3455:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																					"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																				}
																			},
																			"id": 453,
																			"indexExpression": {
																				"id": 452,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 338,
																				"src": "3468:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3455:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																				"typeString": "struct WhitelistStruct storage ref"
																			}
																		},
																		"id": 454,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "latestClaimDay",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "3455:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 455,
																		"name": "lockDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "3491:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3455:48:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 457,
																"nodeType": "ExpressionStatement",
																"src": "3455:48:1"
															},
															{
																"expression": {
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 458,
																		"name": "claimable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 344,
																		"src": "3517:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 459,
																			"name": "sinceLatestClaim",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 443,
																			"src": "3545:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 471,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 460,
																						"name": "claimable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 344,
																						"src": "3581:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 469,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"components": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 466,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 461,
																												"name": "_phase2",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 217,
																												"src": "3615:7:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "*",
																											"rightExpression": {
																												"expression": {
																													"baseExpression": {
																														"id": 462,
																														"name": "_beneficiary",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 224,
																														"src": "3625:12:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																															"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																														}
																													},
																													"id": 464,
																													"indexExpression": {
																														"id": 463,
																														"name": "user",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 338,
																														"src": "3638:4:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "3625:18:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																														"typeString": "struct WhitelistStruct storage ref"
																													}
																												},
																												"id": 465,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "lockedAmount",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 3,
																												"src": "3625:31:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "3615:41:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"id": 467,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "3614:43:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 468,
																									"name": "privateSaleAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 207,
																									"src": "3684:17:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3614:87:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 470,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3613:89:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3581:121:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3580:123:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3545:158:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3517:186:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 475,
																"nodeType": "ExpressionStatement",
																"src": "3517:186:1"
															}
														]
													}
												},
												"id": 481,
												"nodeType": "IfStatement",
												"src": "2501:1252:1",
												"trueBody": {
													"id": 400,
													"nodeType": "Block",
													"src": "2529:379:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 361,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "2547:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																				"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																			}
																		},
																		"id": 363,
																		"indexExpression": {
																			"id": 362,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2560:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2547:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																			"typeString": "struct WhitelistStruct storage ref"
																		}
																	},
																	"id": 364,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isPhase1Claimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "2547:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2585:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2547:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 399,
															"nodeType": "IfStatement",
															"src": "2543:355:1",
															"trueBody": {
																"id": 398,
																"nodeType": "Block",
																"src": "2592:306:1",
																"statements": [
																	{
																		"expression": {
																			"id": 372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 367,
																						"name": "_beneficiary",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "2610:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																							"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																						}
																					},
																					"id": 369,
																					"indexExpression": {
																						"id": 368,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 338,
																						"src": "2623:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2610:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																						"typeString": "struct WhitelistStruct storage ref"
																					}
																				},
																				"id": 370,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "isPhase1Claimed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 7,
																				"src": "2610:34:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2647:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "2610:41:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 373,
																		"nodeType": "ExpressionStatement",
																		"src": "2610:41:1"
																	},
																	{
																		"expression": {
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 374,
																						"name": "_beneficiary",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "2669:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																							"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																						}
																					},
																					"id": 376,
																					"indexExpression": {
																						"id": 375,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 338,
																						"src": "2682:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2669:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																						"typeString": "struct WhitelistStruct storage ref"
																					}
																				},
																				"id": 377,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "latestClaimDay",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 9,
																				"src": "2669:33:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_rational_450_by_1",
																					"typeString": "int_const 450"
																				},
																				"id": 380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3135",
																					"id": 378,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2705:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_15_by_1",
																						"typeString": "int_const 15"
																					},
																					"value": "15"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3330",
																					"id": 379,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2710:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_30_by_1",
																						"typeString": "int_const 30"
																					},
																					"value": "30"
																				},
																				"src": "2705:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_450_by_1",
																					"typeString": "int_const 450"
																				}
																			},
																			"src": "2669:43:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 382,
																		"nodeType": "ExpressionStatement",
																		"src": "2669:43:1"
																	},
																	{
																		"expression": {
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 383,
																				"name": "claimable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 344,
																				"src": "2730:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 384,
																					"name": "claimable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 344,
																					"src": "2762:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 393,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 390,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 385,
																											"name": "_phase1",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 212,
																											"src": "2796:7:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"expression": {
																												"baseExpression": {
																													"id": 386,
																													"name": "_beneficiary",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 224,
																													"src": "2806:12:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																														"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																													}
																												},
																												"id": 388,
																												"indexExpression": {
																													"id": 387,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 338,
																													"src": "2819:4:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "2806:18:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																													"typeString": "struct WhitelistStruct storage ref"
																												}
																											},
																											"id": 389,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "lockedAmount",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 3,
																											"src": "2806:31:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "2796:41:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 391,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2795:43:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 392,
																								"name": "privateSaleAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 207,
																								"src": "2865:17:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2795:87:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 394,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2794:89:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2762:121:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2730:153:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 397,
																		"nodeType": "ExpressionStatement",
																		"src": "2730:153:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 482,
													"name": "claimable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 344,
													"src": "3770:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 342,
												"id": 483,
												"nodeType": "Return",
												"src": "3763:16:1"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2136:94:1",
										"text": "  @dev \t\tMain Functions\n  @return \tClaimable amount from Locked Wallet"
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateClaimableAmount",
									"nameLocation": "2244:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2278:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2270:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:14:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2318:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:9:1"
									},
									"scope": 644,
									"src": "2235:1551:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "3865:536:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 494,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "3958:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 495,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "3967:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3958:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 501,
												"nodeType": "IfStatement",
												"src": "3954:99:1",
												"trueBody": {
													"id": 500,
													"nodeType": "Block",
													"src": "3986:67:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 497,
																	"name": "MainFunction__insufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "4007:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4007:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 499,
															"nodeType": "RevertStatement",
															"src": "4000:42:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 502,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "4067:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																	"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																}
															},
															"id": 504,
															"indexExpression": {
																"id": 503,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "4080:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4067:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																"typeString": "struct WhitelistStruct storage ref"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4067:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4095:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4067:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 545,
												"nodeType": "IfStatement",
												"src": "4063:332:1",
												"trueBody": {
													"id": 544,
													"nodeType": "Block",
													"src": "4098:297:1",
													"statements": [
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 508,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "4112:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																				"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																			}
																		},
																		"id": 510,
																		"indexExpression": {
																			"id": 509,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "4125:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4112:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																			"typeString": "struct WhitelistStruct storage ref"
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lockedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "4112:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 512,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4146:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4112:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "4112:40:1"
														},
														{
															"expression": {
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 515,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "4166:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																				"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																			}
																		},
																		"id": 517,
																		"indexExpression": {
																			"id": 516,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "4179:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4166:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																			"typeString": "struct WhitelistStruct storage ref"
																		}
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "4166:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 519,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4194:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4166:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 521,
															"nodeType": "ExpressionStatement",
															"src": "4166:34:1"
														},
														{
															"expression": {
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 522,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "4214:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																				"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																			}
																		},
																		"id": 524,
																		"indexExpression": {
																			"id": 523,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "4227:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4214:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																			"typeString": "struct WhitelistStruct storage ref"
																		}
																	},
																	"id": 525,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "isPhase1Claimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "4214:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4251:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4214:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "4214:42:1"
														},
														{
															"expression": {
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 529,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "4270:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																				"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																			}
																		},
																		"id": 531,
																		"indexExpression": {
																			"id": 530,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "4283:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4270:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																			"typeString": "struct WhitelistStruct storage ref"
																		}
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "latestClaimDay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "4270:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4306:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4270:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 535,
															"nodeType": "ExpressionStatement",
															"src": "4270:37:1"
														},
														{
															"expression": {
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 536,
																	"name": "privateSaleUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4322:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4342:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4322:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 539,
															"nodeType": "ExpressionStatement",
															"src": "4322:21:1"
														},
														{
															"expression": {
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 540,
																	"name": "privateSaleAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "4357:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 541,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4378:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4357:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 543,
															"nodeType": "ExpressionStatement",
															"src": "4357:27:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "96074e70",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 492,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 491,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 268,
												"src": "3855:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3855:9:1"
										}
									],
									"name": "addBeneficiary",
									"nameLocation": "3801:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3824:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3816:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3816:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3815:30:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3865:0:1"
									},
									"scope": 644,
									"src": "3792:609:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "4513:325:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 556,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "4527:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																	"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																}
															},
															"id": 558,
															"indexExpression": {
																"id": 557,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "4540:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4527:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																"typeString": "struct WhitelistStruct storage ref"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4527:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4555:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4527:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "4799:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4820:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 555,
															"id": 589,
															"nodeType": "Return",
															"src": "4813:8:1"
														}
													]
												},
												"id": 591,
												"nodeType": "IfStatement",
												"src": "4523:309:1",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "4558:235:1",
													"statements": [
														{
															"expression": {
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 562,
																	"name": "privateSaleUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4572:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4592:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4572:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 565,
															"nodeType": "ExpressionStatement",
															"src": "4572:21:1"
														},
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 566,
																	"name": "privateSaleAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "4607:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 567,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "4628:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																				"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																			}
																		},
																		"id": 569,
																		"indexExpression": {
																			"id": 568,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 549,
																			"src": "4641:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4628:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																			"typeString": "struct WhitelistStruct storage ref"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "4628:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4607:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "4607:46:1"
														},
														{
															"assignments": [
																574
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 574,
																	"mutability": "mutable",
																	"name": "ex_amount",
																	"nameLocation": "4675:9:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 587,
																	"src": "4667:17:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 573,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4667:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 579,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 575,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "4687:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																			"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																		}
																	},
																	"id": 577,
																	"indexExpression": {
																		"id": 576,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "4700:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4687:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																		"typeString": "struct WhitelistStruct storage ref"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "4687:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4667:45:1"
														},
														{
															"expression": {
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4727:25:1",
																"subExpression": {
																	"baseExpression": {
																		"id": 580,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "4734:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																			"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																		}
																	},
																	"id": 582,
																	"indexExpression": {
																		"id": 581,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "4747:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4734:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																		"typeString": "struct WhitelistStruct storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 584,
															"nodeType": "ExpressionStatement",
															"src": "4727:25:1"
														},
														{
															"expression": {
																"id": 585,
																"name": "ex_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "4773:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 555,
															"id": 586,
															"nodeType": "Return",
															"src": "4766:16:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7d3bca76",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 552,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 551,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 268,
												"src": "4473:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4473:9:1"
										}
									],
									"name": "deleteBeneficiary",
									"nameLocation": "4416:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4442:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4434:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:14:1"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4500:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:1"
									},
									"scope": 644,
									"src": "4407:431:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "5030:467:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 603,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "5044:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																	"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																}
															},
															"id": 605,
															"indexExpression": {
																"id": 604,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "5057:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5044:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																"typeString": "struct WhitelistStruct storage ref"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "5044:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5072:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5044:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 640,
													"nodeType": "Block",
													"src": "5458:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5479:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 602,
															"id": 639,
															"nodeType": "Return",
															"src": "5472:8:1"
														}
													]
												},
												"id": 641,
												"nodeType": "IfStatement",
												"src": "5040:451:1",
												"trueBody": {
													"id": 637,
													"nodeType": "Block",
													"src": "5075:377:1",
													"statements": [
														{
															"assignments": [
																610
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 610,
																	"mutability": "mutable",
																	"name": "claimableLockedAmount",
																	"nameLocation": "5097:21:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 637,
																	"src": "5089:29:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 609,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5089:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 614,
															"initialValue": {
																"arguments": [
																	{
																		"id": 612,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "5147:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 611,
																	"name": "_calculateClaimableAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "5121:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) returns (uint256)"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5121:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5089:63:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 615,
																	"name": "claimableLockedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "5171:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5195:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5171:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "5401:41:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "30",
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5426:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 602,
																		"id": 634,
																		"nodeType": "Return",
																		"src": "5419:8:1"
																	}
																]
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "5167:275:1",
															"trueBody": {
																"id": 632,
																"nodeType": "Block",
																"src": "5198:197:1",
																"statements": [
																	{
																		"expression": {
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 618,
																						"name": "_beneficiary",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "5216:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																							"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																						}
																					},
																					"id": 620,
																					"indexExpression": {
																						"id": 619,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 596,
																						"src": "5229:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5216:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																						"typeString": "struct WhitelistStruct storage ref"
																					}
																				},
																				"id": 621,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5,
																				"src": "5216:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 622,
																							"name": "_beneficiary",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 224,
																							"src": "5264:12:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$10_storage_$",
																								"typeString": "mapping(address => struct WhitelistStruct storage ref)"
																							}
																						},
																						"id": 624,
																						"indexExpression": {
																							"id": 623,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 596,
																							"src": "5277:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5264:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_WhitelistStruct_$10_storage",
																							"typeString": "struct WhitelistStruct storage ref"
																						}
																					},
																					"id": 625,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 5,
																					"src": "5264:25:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 626,
																					"name": "claimableLockedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "5312:21:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5264:69:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5216:117:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 629,
																		"nodeType": "ExpressionStatement",
																		"src": "5216:117:1"
																	},
																	{
																		"expression": {
																			"id": 630,
																			"name": "claimableLockedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "5359:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 602,
																		"id": 631,
																		"nodeType": "Return",
																		"src": "5352:28:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "4844:76:1",
										"text": " @notice Transfers tokens held by timelock to beneficiary."
									},
									"functionSelector": "005171f4",
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 599,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 598,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 268,
												"src": "4990:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4990:9:1"
										}
									],
									"name": "releaseClaimable",
									"nameLocation": "4934:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4959:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "4951:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4950:14:1"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "5017:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5017:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5016:9:1"
									},
									"scope": 644,
									"src": "4925:572:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 645,
							"src": "285:5214:1",
							"usedErrors": [
								200,
								203
							]
						}
					],
					"src": "39:5461:1"
				},
				"id": 1
			}
		}
	}
}