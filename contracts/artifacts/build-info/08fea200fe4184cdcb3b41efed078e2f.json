{
	"id": "08fea200fe4184cdcb3b41efed078e2f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakable.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.11;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract Stakable {\r\n    /**\r\n     * @notice Constructor since this contract is not ment to be used without inheritance\r\n     * push once to stakeholders for it to work proplerly\r\n     */\r\n\r\n    uint256 private _stakingPenalty;\r\n\r\n    constructor(uint256 stakingPenalty_) {\r\n        // This push is needed so we avoid index 0 causing bug of index-1\r\n        stakeholders.push();\r\n\r\n        //Staking penalty in percentage\r\n        _stakingPenalty = stakingPenalty_;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * A stake struct is used to represent the way we store stakes,\r\n     * A Stake will contain the users address, the amount staked and a timestamp,\r\n     * Since which is when the stake was made\r\n     */\r\n    struct Stake {\r\n        address user;\r\n        uint256 amount;\r\n        uint256 since;\r\n        // This claimable field is new and used to tell how big of a reward is currently available\r\n        uint256 claimable;\r\n        uint256 rewardAPY;\r\n        uint256 releaseTime;\r\n    }\r\n    /**\r\n     * @notice Stakeholder is a staker that has active stakes\r\n     */\r\n    struct Stakeholder {\r\n        address user;\r\n        Stake[] address_stakes;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\r\n     */\r\n    struct StakingSummary {\r\n        uint256 total_amount;\r\n        Stake[] stakes;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     *   This is a array where we store all Stakes that are performed on the Contract\r\n     *   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping\r\n     */\r\n    Stakeholder[] internal stakeholders;\r\n    /**\r\n     * @notice\r\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\r\n     */\r\n    mapping(address => uint256) internal stakes;\r\n\r\n    /**\r\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\r\n     */\r\n    event Staked(\r\n        address indexed user,\r\n        uint256 amount,\r\n        uint256 index,\r\n        uint256 timestamp,\r\n        uint256 releaseTime\r\n    );\r\n\r\n    event PenaltyChanged(uint256 amount);\r\n\r\n    /**\r\n     * @notice _addStakeholder takes care of adding a stakeholder to the stakeholders array\r\n     */\r\n    function _addStakeholder(address staker) internal returns (uint256) {\r\n        // Push a empty item to the Array to make space for our new stakeholder\r\n        stakeholders.push();\r\n        // Calculate the index of the last item in the array by Len-1\r\n        uint256 userIndex = stakeholders.length - 1;\r\n        // Assign the address to the new index\r\n        stakeholders[userIndex].user = staker;\r\n        // Add index to the stakeHolders\r\n        stakes[staker] = userIndex;\r\n        return userIndex;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\r\n     * StakeID\r\n     */\r\n    function _stake(\r\n        uint256 _amount,\r\n        uint256 _stakePeriod,\r\n        uint256 _rewardRate\r\n    ) internal {\r\n        // Simple check so that user does not stake 0\r\n        require(_amount > 0, \"Stakable: Cannot stake nothing\");\r\n        // require(_amount > 1e18, \"Minimum stake is 1 TALAX\");\r\n\r\n        // Mappings in solidity creates all values, but empty, so we can just check the address\r\n        uint256 index = stakes[msg.sender];\r\n        // block.timestamp = timestamp of the current block in seconds since the epoch\r\n        uint256 timestamp = block.timestamp;\r\n        // See if the staker already has a staked index or if its the first time\r\n        if (index == 0) {\r\n            // This stakeholder stakes for the first time\r\n            // We need to add him to the stakeHolders and also map it into the Index of the stakes\r\n            // The index returned will be the index of the stakeholder in the stakeholders array\r\n            index = _addStakeholder(msg.sender);\r\n        }\r\n\r\n        // Use the index to push a new Stake\r\n        // push a newly created Stake with the current block timestamp.\r\n        stakeholders[index].address_stakes.push(\r\n            Stake(\r\n                msg.sender,\r\n                _amount,\r\n                timestamp,\r\n                0,\r\n                _rewardRate,\r\n                (_stakePeriod + timestamp)\r\n            )\r\n        );\r\n        // Emit an event that the stake has occured\r\n        emit Staked(\r\n            msg.sender,\r\n            _amount,\r\n            index,\r\n            timestamp,\r\n            (_stakePeriod + timestamp)\r\n        );\r\n    }\r\n\r\n    function _changePenaltyFee(uint256 amount_) internal {\r\n        require(amount_ <= 30, \"Stakable: Penalty fee cannot exceed 5 percent.\");\r\n        _stakingPenalty = amount_;\r\n        emit PenaltyChanged(amount_);\r\n    }\r\n\r\n    function testCalculateDuration(uint256 index_, address user_)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        StakingSummary memory summary = stakeSummary(user_);\r\n\r\n        return (block.timestamp - summary.stakes[index_].since);\r\n    }\r\n\r\n    function calculateStakingDuration(uint256 since_)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(since_ > 0, \"Stakable: Error timestamp 0\");\r\n        return\r\n            SafeMath.div(\r\n                (block.timestamp - since_) * 1e24,\r\n                365 days,\r\n                \"Stakable: Error cannot divide timestamp\"\r\n            );\r\n    }\r\n\r\n    function calculateStakeReward(Stake memory _current_stake, uint256 _amount)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        if (_current_stake.amount == 0) {\r\n            return 0;\r\n        }\r\n\r\n        return\r\n            (_amount *\r\n                _current_stake.rewardAPY *\r\n                calculateStakingDuration(_current_stake.since)) / 1e26;\r\n    }\r\n\r\n    function stakeSummary(address user_)\r\n        public\r\n        view\r\n        returns (StakingSummary memory)\r\n    {\r\n        StakingSummary memory summary = StakingSummary(\r\n            0,\r\n            stakeholders[stakes[user_]].address_stakes\r\n        );\r\n\r\n        return summary;\r\n    }\r\n\r\n    function calculateStakingWithPenalty(uint256 amount, uint256 reward)\r\n        internal\r\n        view\r\n        returns (uint256, uint256)\r\n    {\r\n        if (amount == 0) {\r\n            return (0, 0);\r\n        }\r\n\r\n        return (\r\n            SafeMath.sub(\r\n                amount,\r\n                SafeMath.mul(amount, SafeMath.div(_stakingPenalty, 1000))\r\n            ),\r\n            SafeMath.sub(\r\n                reward,\r\n                SafeMath.mul(reward, SafeMath.div(_stakingPenalty, 1000))\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\r\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\r\n     * Will return the amount to MINT onto the acount\r\n     * Will also calculateStakeReward and reset timer\r\n     */\r\n    function _withdrawStake(uint256 amount, uint256 index)\r\n        internal\r\n        returns (uint256, uint256)\r\n    {\r\n        // Grab user_index which is the index to use to grab the Stake[]\r\n        uint256 user_index = stakes[msg.sender];\r\n        Stake memory current_stake = stakeholders[user_index].address_stakes[\r\n            index\r\n        ];\r\n\r\n        // require(\r\n        //     current_stake.releaseTime <= block.timestamp,\r\n        //     \"Stakable: Cannot withdraw before the release time\"\r\n        // );\r\n\r\n        require(\r\n            current_stake.amount >= amount,\r\n            \"Stakable: Cannot withdraw more than you have staked\"\r\n        );\r\n\r\n        // Calculate available Reward first before we start modifying data\r\n        uint256 reward = calculateStakeReward(current_stake, amount);\r\n\r\n        /**\r\n         * @notice This is penalty given for early withdrawal before the designated time\r\n         */\r\n\r\n        if (current_stake.releaseTime < block.timestamp) {\r\n            return calculateStakingWithPenalty(amount, reward);\r\n        }\r\n\r\n        uint256 stakeDuration = current_stake.releaseTime - current_stake.since;\r\n        // Remove by subtracting the money unstaked\r\n        current_stake.amount = current_stake.amount - amount;\r\n        // If stake is empty, 0, then remove it from the array of stakes\r\n        if (current_stake.amount == 0) {\r\n            delete stakeholders[user_index].address_stakes[index];\r\n        } else {\r\n            stakeholders[user_index]\r\n                .address_stakes[index]\r\n                .amount = current_stake.amount;\r\n            // Reset timer of stake\r\n            stakeholders[user_index].address_stakes[index].since = block\r\n                .timestamp;\r\n            stakeholders[user_index].address_stakes[index].releaseTime =\r\n                block.timestamp +\r\n                stakeDuration;\r\n        }\r\n\r\n        return (amount, reward);\r\n    }\r\n\r\n    function _withdrawAllStake(uint256 index)\r\n        internal\r\n        returns (uint256, uint256)\r\n    {\r\n        // Grab user_index which is the index to use to grab the Stake[]\r\n        uint256 user_index = stakes[msg.sender];\r\n        Stake memory current_stake = stakeholders[user_index].address_stakes[\r\n            index\r\n        ];\r\n\r\n        // require(\r\n        //     current_stake.releaseTime <= block.timestamp,\r\n        //     \"Stakable: Cannot withdraw before the release time\"\r\n        // );\r\n\r\n        require(\r\n            current_stake.amount > 0,\r\n            \"Stakable: Cannot withdraw, you don't have any stake in this Index\"\r\n        );\r\n\r\n        // Calculate available Reward first before we start modifying data\r\n        uint256 amount = current_stake.amount;\r\n        uint256 reward = calculateStakeReward(current_stake, amount);\r\n\r\n        /**\r\n         * @notice This is penalty given for early withdrawal before the designated time\r\n         */\r\n\r\n        if (current_stake.releaseTime < block.timestamp) {\r\n            return calculateStakingWithPenalty(amount, reward);\r\n        }\r\n\r\n        delete stakeholders[user_index].address_stakes[index];\r\n\r\n        return (amount, reward);\r\n    }\r\n\r\n    function hasStake(address _staker)\r\n        public\r\n        view\r\n        returns (StakingSummary memory)\r\n    {\r\n        uint256 totalStakeAmount;\r\n\r\n        StakingSummary memory summary = StakingSummary(\r\n            0,\r\n            stakeholders[stakes[_staker]].address_stakes\r\n        );\r\n        require(\r\n            summary.stakes.length != 0,\r\n            \"Stakable: This address does not have any stakes\"\r\n        );\r\n\r\n        for (uint256 s = 0; s < summary.stakes.length; s += 1) {\r\n            uint256 availableReward = calculateStakeReward(\r\n                summary.stakes[s],\r\n                summary.stakes[s].amount\r\n            );\r\n            summary.stakes[s].claimable = availableReward;\r\n            totalStakeAmount = totalStakeAmount + summary.stakes[s].amount;\r\n        }\r\n\r\n        summary.total_amount = totalStakeAmount;\r\n        return summary;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADD SSTORE DUP15 CALL BYTE BASEFEE 0xAA CREATE GAS AND PUSH22 0xB79EEBEEBC9986DDA7DC9FFF4A6F2A14C0B05CA86473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADD SSTORE DUP15 CALL BYTE BASEFEE 0xAA CREATE GAS AND PUSH22 0xB79EEBEEBC9986DDA7DC9FFF4A6F2A14C0B05CA86473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stakable.sol": {
				"Stakable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakingPenalty_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake[]",
											"name": "stakes",
											"type": "tuple[]"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_",
									"type": "address"
								}
							],
							"name": "stakeSummary",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake[]",
											"name": "stakes",
											"type": "tuple[]"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user_",
									"type": "address"
								}
							],
							"name": "testCalculateDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakable.sol\":128:11312  contract Stakable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakable.sol\":363:600  constructor(uint256 stakingPenalty_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Stakable.sol\":486:498  stakeholders */\n  0x01\n    /* \"contracts/Stakable.sol\":486:505  stakeholders.push() */\n  dup1\n  dup2\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  pop\n  pop\n    /* \"contracts/Stakable.sol\":577:592  stakingPenalty_ */\n  dup1\n    /* \"contracts/Stakable.sol\":559:574  _stakingPenalty */\n  0x00\n    /* \"contracts/Stakable.sol\":559:592  _stakingPenalty = stakingPenalty_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":363:600  constructor(uint256 stakingPenalty_) {... */\n  pop\n    /* \"contracts/Stakable.sol\":128:11312  contract Stakable {... */\n  jump(tag_7)\n    /* \"#utility.yul\":88:205   */\ntag_9:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_11:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_12:\n    /* \"#utility.yul\":490:514   */\n  tag_20\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_11\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_21:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_13:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_23\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_12\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_26\n  tag_9\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":781:900   */\ntag_25:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_27\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_13\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Stakable.sol\":128:11312  contract Stakable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakable.sol\":128:11312  contract Stakable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x38920102\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb09d4b4e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe73e14bf\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakable.sol\":5030:5292  function testCalculateDuration(uint256 index_, address user_)... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":6080:6369  function stakeSummary(address user_)... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":10428:11309  function hasStake(address _staker)... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":5030:5292  function testCalculateDuration(uint256 index_, address user_)... */\n    tag_9:\n        /* \"contracts/Stakable.sol\":5140:5147  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5165:5194  StakingSummary memory summary */\n      dup1\n        /* \"contracts/Stakable.sol\":5197:5216  stakeSummary(user_) */\n      tag_23\n        /* \"contracts/Stakable.sol\":5210:5215  user_ */\n      dup4\n        /* \"contracts/Stakable.sol\":5197:5209  stakeSummary */\n      tag_15\n        /* \"contracts/Stakable.sol\":5197:5216  stakeSummary(user_) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/Stakable.sol\":5165:5216  StakingSummary memory summary = stakeSummary(user_) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":5255:5262  summary */\n      dup1\n        /* \"contracts/Stakable.sol\":5255:5269  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5270:5276  index_ */\n      dup5\n        /* \"contracts/Stakable.sol\":5255:5277  summary.stakes[index_] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_24\n      jumpi\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n    tag_24:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5255:5283  summary.stakes[index_].since */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5237:5252  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":5237:5283  block.timestamp - summary.stakes[index_].since */\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"contracts/Stakable.sol\":5229:5284  return (block.timestamp - summary.stakes[index_].since) */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":5030:5292  function testCalculateDuration(uint256 index_, address user_)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":6080:6369  function stakeSummary(address user_)... */\n    tag_15:\n        /* \"contracts/Stakable.sol\":6165:6186  StakingSummary memory */\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/Stakable.sol\":6204:6233  StakingSummary memory summary */\n      0x00\n        /* \"contracts/Stakable.sol\":6236:6334  StakingSummary(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakable.sol\":6265:6266  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":6236:6334  StakingSummary(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":6281:6293  stakeholders */\n      0x01\n        /* \"contracts/Stakable.sol\":6294:6300  stakes */\n      0x02\n        /* \"contracts/Stakable.sol\":6294:6307  stakes[user_] */\n      0x00\n        /* \"contracts/Stakable.sol\":6301:6306  user_ */\n      dup8\n        /* \"contracts/Stakable.sol\":6294:6307  stakes[user_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stakable.sol\":6281:6308  stakeholders[stakes[user_]] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_32\n      jumpi\n      tag_33\n      tag_26\n      jump\t// in\n    tag_33:\n    tag_32:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/Stakable.sol\":6281:6323  stakeholders[stakes[user_]].address_stakes */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":6236:6334  StakingSummary(... */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_35:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_36\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_35)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":6204:6334  StakingSummary memory summary = StakingSummary(... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":6354:6361  summary */\n      dup1\n        /* \"contracts/Stakable.sol\":6347:6361  return summary */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":6080:6369  function stakeSummary(address user_)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10428:11309  function hasStake(address _staker)... */\n    tag_20:\n        /* \"contracts/Stakable.sol\":10511:10532  StakingSummary memory */\n      tag_38\n      tag_30\n      jump\t// in\n    tag_38:\n        /* \"contracts/Stakable.sol\":10550:10574  uint256 totalStakeAmount */\n      0x00\n        /* \"contracts/Stakable.sol\":10587:10616  StakingSummary memory summary */\n      dup1\n        /* \"contracts/Stakable.sol\":10619:10719  StakingSummary(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakable.sol\":10648:10649  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":10619:10719  StakingSummary(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":10664:10676  stakeholders */\n      0x01\n        /* \"contracts/Stakable.sol\":10677:10683  stakes */\n      0x02\n        /* \"contracts/Stakable.sol\":10677:10692  stakes[_staker] */\n      0x00\n        /* \"contracts/Stakable.sol\":10684:10691  _staker */\n      dup9\n        /* \"contracts/Stakable.sol\":10677:10692  stakes[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stakable.sol\":10664:10693  stakeholders[stakes[_staker]] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_40\n      jumpi\n      tag_41\n      tag_26\n      jump\t// in\n    tag_41:\n    tag_40:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/Stakable.sol\":10664:10708  stakeholders[stakes[_staker]].address_stakes */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":10619:10719  StakingSummary(... */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_43:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_44\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_43)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":10587:10719  StakingSummary memory summary = StakingSummary(... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":10777:10778  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":10752:10759  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":10752:10766  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10752:10773  summary.stakes.length */\n      mload\n        /* \"contracts/Stakable.sol\":10752:10778  summary.stakes.length != 0 */\n      eq\n      iszero\n        /* \"contracts/Stakable.sol\":10730:10853  require(... */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/Stakable.sol\":10871:10880  uint256 s */\n      0x00\n        /* \"contracts/Stakable.sol\":10866:11225  for (uint256 s = 0; s < summary.stakes.length; s += 1) {... */\n    tag_49:\n        /* \"contracts/Stakable.sol\":10890:10897  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":10890:10904  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10890:10911  summary.stakes.length */\n      mload\n        /* \"contracts/Stakable.sol\":10886:10887  s */\n      dup2\n        /* \"contracts/Stakable.sol\":10886:10911  s < summary.stakes.length */\n      lt\n        /* \"contracts/Stakable.sol\":10866:11225  for (uint256 s = 0; s < summary.stakes.length; s += 1) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \"contracts/Stakable.sol\":10936:10959  uint256 availableReward */\n      0x00\n        /* \"contracts/Stakable.sol\":10962:11076  calculateStakeReward(... */\n      tag_52\n        /* \"contracts/Stakable.sol\":11001:11008  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":11001:11015  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11016:11017  s */\n      dup4\n        /* \"contracts/Stakable.sol\":11001:11018  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_53\n      jumpi\n      tag_54\n      tag_26\n      jump\t// in\n    tag_54:\n    tag_53:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11037:11044  summary */\n      dup5\n        /* \"contracts/Stakable.sol\":11037:11051  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11052:11053  s */\n      dup5\n        /* \"contracts/Stakable.sol\":11037:11054  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_55\n      jumpi\n      tag_56\n      tag_26\n      jump\t// in\n    tag_56:\n    tag_55:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11037:11061  summary.stakes[s].amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10962:10982  calculateStakeReward */\n      tag_57\n        /* \"contracts/Stakable.sol\":10962:11076  calculateStakeReward(... */\n      jump\t// in\n    tag_52:\n        /* \"contracts/Stakable.sol\":10936:11076  uint256 availableReward = calculateStakeReward(... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":11121:11136  availableReward */\n      dup1\n        /* \"contracts/Stakable.sol\":11091:11098  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":11091:11105  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11106:11107  s */\n      dup4\n        /* \"contracts/Stakable.sol\":11091:11108  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_58\n      jumpi\n      tag_59\n      tag_26\n      jump\t// in\n    tag_59:\n    tag_58:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11091:11118  summary.stakes[s].claimable */\n      0x60\n      add\n        /* \"contracts/Stakable.sol\":11091:11136  summary.stakes[s].claimable = availableReward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":11189:11196  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":11189:11203  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11204:11205  s */\n      dup3\n        /* \"contracts/Stakable.sol\":11189:11206  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_60\n      jumpi\n      tag_61\n      tag_26\n      jump\t// in\n    tag_61:\n    tag_60:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11189:11213  summary.stakes[s].amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11170:11186  totalStakeAmount */\n      dup5\n        /* \"contracts/Stakable.sol\":11170:11213  totalStakeAmount + summary.stakes[s].amount */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/Stakable.sol\":11151:11213  totalStakeAmount = totalStakeAmount + summary.stakes[s].amount */\n      swap4\n      pop\n        /* \"contracts/Stakable.sol\":10921:11225  {... */\n      pop\n        /* \"contracts/Stakable.sol\":10918:10919  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":10913:10919  s += 1 */\n      dup2\n      tag_64\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":10866:11225  for (uint256 s = 0; s < summary.stakes.length; s += 1) {... */\n      jump(tag_49)\n    tag_50:\n      pop\n        /* \"contracts/Stakable.sol\":11260:11276  totalStakeAmount */\n      dup2\n        /* \"contracts/Stakable.sol\":11237:11244  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":11237:11257  summary.total_amount */\n      0x00\n      add\n        /* \"contracts/Stakable.sol\":11237:11276  summary.total_amount = totalStakeAmount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":11294:11301  summary */\n      dup1\n        /* \"contracts/Stakable.sol\":11287:11301  return summary */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":10428:11309  function hasStake(address _staker)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5688:6072  function calculateStakeReward(Stake memory _current_stake, uint256 _amount)... */\n    tag_57:\n        /* \"contracts/Stakable.sol\":5814:5821  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5868:5869  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":5843:5857  _current_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":5843:5864  _current_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5843:5869  _current_stake.amount == 0 */\n      eq\n        /* \"contracts/Stakable.sol\":5839:5906  if (_current_stake.amount == 0) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/Stakable.sol\":5893:5894  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":5886:5894  return 0 */\n      swap1\n      pop\n      jump(tag_65)\n        /* \"contracts/Stakable.sol\":5839:5906  if (_current_stake.amount == 0) {... */\n    tag_66:\n        /* \"contracts/Stakable.sol\":6060:6064  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stakable.sol\":6010:6056  calculateStakingDuration(_current_stake.since) */\n      tag_67\n        /* \"contracts/Stakable.sol\":6035:6049  _current_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":6035:6055  _current_stake.since */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6010:6034  calculateStakingDuration */\n      tag_68\n        /* \"contracts/Stakable.sol\":6010:6056  calculateStakingDuration(_current_stake.since) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/Stakable.sol\":5966:5980  _current_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":5966:5990  _current_stake.rewardAPY */\n      0x80\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5939:5946  _amount */\n      dup5\n        /* \"contracts/Stakable.sol\":5939:5990  _amount *... */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"contracts/Stakable.sol\":5939:6056  _amount *... */\n      tag_71\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_71:\n        /* \"contracts/Stakable.sol\":5938:6064  (_amount *... */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"contracts/Stakable.sol\":5918:6064  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":5688:6072  function calculateStakeReward(Stake memory _current_stake, uint256 _amount)... */\n    tag_65:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5300:5680  function calculateStakingDuration(uint256 since_)... */\n    tag_68:\n        /* \"contracts/Stakable.sol\":5400:5407  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5442:5443  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":5433:5439  since_ */\n      dup3\n        /* \"contracts/Stakable.sol\":5433:5443  since_ > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":5425:5475  require(since_ > 0, \"Stakable: Error timestamp 0\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/Stakable.sol\":5506:5672  SafeMath.div(... */\n      tag_78\n        /* \"contracts/Stakable.sol\":5566:5570  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stakable.sol\":5556:5562  since_ */\n      dup4\n        /* \"contracts/Stakable.sol\":5538:5553  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":5538:5562  block.timestamp - since_ */\n      tag_79\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_79:\n        /* \"contracts/Stakable.sol\":5537:5570  (block.timestamp - since_) * 1e24 */\n      tag_80\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_80:\n        /* \"contracts/Stakable.sol\":5589:5597  365 days */\n      0x01e13380\n        /* \"contracts/Stakable.sol\":5506:5672  SafeMath.div(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_10b867070097d898ae15cd1bc384e389b4a7d91f05c0759c198c193c7fd91787\n      0x27\n      swap2\n      codecopy\n        /* \"contracts/Stakable.sol\":5506:5518  SafeMath.div */\n      tag_81\n        /* \"contracts/Stakable.sol\":5506:5672  SafeMath.div(... */\n      jump\t// in\n    tag_78:\n        /* \"contracts/Stakable.sol\":5486:5672  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":5300:5680  function calculateStakingDuration(uint256 since_)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5776:5783  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5831:5832  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5828  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5832  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5834:5846  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5819:5847  require(b > 0, errorMessage) */\n      swap1\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5872:5873  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5869  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5873  a / b */\n      dup2\n      tag_86\n      jumpi\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n    tag_86:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5861:5873  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_30:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_90:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_92:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_93:\n        /* \"#utility.yul\":490:514   */\n      tag_126\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_92\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_127:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_94:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_129\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_93\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:816   */\n    tag_95:\n        /* \"#utility.yul\":727:734   */\n      0x00\n        /* \"#utility.yul\":767:809   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":760:765   */\n      dup3\n        /* \"#utility.yul\":756:810   */\n      and\n        /* \"#utility.yul\":745:810   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:918   */\n    tag_96:\n        /* \"#utility.yul\":859:866   */\n      0x00\n        /* \"#utility.yul\":888:912   */\n      tag_132\n        /* \"#utility.yul\":906:911   */\n      dup3\n        /* \"#utility.yul\":888:912   */\n      tag_95\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":877:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":822:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_97:\n        /* \"#utility.yul\":997:1021   */\n      tag_134\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_96\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_135:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_98:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_137\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_97\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_8:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_140\n      tag_90\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1290:1409   */\n    tag_139:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_141\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_94\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_142\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_98\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_99:\n        /* \"#utility.yul\":1764:1788   */\n      tag_144\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_92\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_11:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_146\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_99\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_14:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_149\n      tag_90\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2105:2224   */\n    tag_148:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_150\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_98\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2472   */\n    tag_100:\n        /* \"#utility.yul\":2441:2465   */\n      tag_152\n        /* \"#utility.yul\":2459:2464   */\n      dup2\n        /* \"#utility.yul\":2441:2465   */\n      tag_92\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2436:2439   */\n      dup3\n        /* \"#utility.yul\":2429:2466   */\n      mstore\n        /* \"#utility.yul\":2364:2472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2478:2614   */\n    tag_101:\n        /* \"#utility.yul\":2567:2573   */\n      0x00\n        /* \"#utility.yul\":2601:2606   */\n      dup2\n        /* \"#utility.yul\":2595:2607   */\n      mload\n        /* \"#utility.yul\":2585:2607   */\n      swap1\n      pop\n        /* \"#utility.yul\":2478:2614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2620:2816   */\n    tag_102:\n        /* \"#utility.yul\":2731:2742   */\n      0x00\n        /* \"#utility.yul\":2765:2771   */\n      dup3\n        /* \"#utility.yul\":2760:2763   */\n      dup3\n        /* \"#utility.yul\":2753:2772   */\n      mstore\n        /* \"#utility.yul\":2805:2809   */\n      0x20\n        /* \"#utility.yul\":2800:2803   */\n      dup3\n        /* \"#utility.yul\":2796:2810   */\n      add\n        /* \"#utility.yul\":2781:2810   */\n      swap1\n      pop\n        /* \"#utility.yul\":2620:2816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2822:2976   */\n    tag_103:\n        /* \"#utility.yul\":2911:2915   */\n      0x00\n        /* \"#utility.yul\":2934:2937   */\n      dup2\n        /* \"#utility.yul\":2926:2937   */\n      swap1\n      pop\n        /* \"#utility.yul\":2964:2968   */\n      0x20\n        /* \"#utility.yul\":2959:2962   */\n      dup3\n        /* \"#utility.yul\":2955:2969   */\n      add\n        /* \"#utility.yul\":2947:2969   */\n      swap1\n      pop\n        /* \"#utility.yul\":2822:2976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2982:3090   */\n    tag_104:\n        /* \"#utility.yul\":3059:3083   */\n      tag_157\n        /* \"#utility.yul\":3077:3082   */\n      dup2\n        /* \"#utility.yul\":3059:3083   */\n      tag_96\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3047:3084   */\n      mstore\n        /* \"#utility.yul\":2982:3090   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:4357   */\n    tag_105:\n        /* \"#utility.yul\":3281:3285   */\n      0xc0\n        /* \"#utility.yul\":3276:3279   */\n      dup3\n        /* \"#utility.yul\":3272:3286   */\n      add\n        /* \"#utility.yul\":3368:3372   */\n      0x00\n        /* \"#utility.yul\":3361:3366   */\n      dup3\n        /* \"#utility.yul\":3357:3373   */\n      add\n        /* \"#utility.yul\":3351:3374   */\n      mload\n        /* \"#utility.yul\":3387:3450   */\n      tag_159\n        /* \"#utility.yul\":3444:3448   */\n      0x00\n        /* \"#utility.yul\":3439:3442   */\n      dup6\n        /* \"#utility.yul\":3435:3449   */\n      add\n        /* \"#utility.yul\":3421:3433   */\n      dup3\n        /* \"#utility.yul\":3387:3450   */\n      tag_104\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3296:3460   */\n      pop\n        /* \"#utility.yul\":3544:3548   */\n      0x20\n        /* \"#utility.yul\":3537:3542   */\n      dup3\n        /* \"#utility.yul\":3533:3549   */\n      add\n        /* \"#utility.yul\":3527:3550   */\n      mload\n        /* \"#utility.yul\":3563:3626   */\n      tag_160\n        /* \"#utility.yul\":3620:3624   */\n      0x20\n        /* \"#utility.yul\":3615:3618   */\n      dup6\n        /* \"#utility.yul\":3611:3625   */\n      add\n        /* \"#utility.yul\":3597:3609   */\n      dup3\n        /* \"#utility.yul\":3563:3626   */\n      tag_100\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3470:3636   */\n      pop\n        /* \"#utility.yul\":3719:3723   */\n      0x40\n        /* \"#utility.yul\":3712:3717   */\n      dup3\n        /* \"#utility.yul\":3708:3724   */\n      add\n        /* \"#utility.yul\":3702:3725   */\n      mload\n        /* \"#utility.yul\":3738:3801   */\n      tag_161\n        /* \"#utility.yul\":3795:3799   */\n      0x40\n        /* \"#utility.yul\":3790:3793   */\n      dup6\n        /* \"#utility.yul\":3786:3800   */\n      add\n        /* \"#utility.yul\":3772:3784   */\n      dup3\n        /* \"#utility.yul\":3738:3801   */\n      tag_100\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3646:3811   */\n      pop\n        /* \"#utility.yul\":3898:3902   */\n      0x60\n        /* \"#utility.yul\":3891:3896   */\n      dup3\n        /* \"#utility.yul\":3887:3903   */\n      add\n        /* \"#utility.yul\":3881:3904   */\n      mload\n        /* \"#utility.yul\":3917:3980   */\n      tag_162\n        /* \"#utility.yul\":3974:3978   */\n      0x60\n        /* \"#utility.yul\":3969:3972   */\n      dup6\n        /* \"#utility.yul\":3965:3979   */\n      add\n        /* \"#utility.yul\":3951:3963   */\n      dup3\n        /* \"#utility.yul\":3917:3980   */\n      tag_100\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3821:3990   */\n      pop\n        /* \"#utility.yul\":4077:4081   */\n      0x80\n        /* \"#utility.yul\":4070:4075   */\n      dup3\n        /* \"#utility.yul\":4066:4082   */\n      add\n        /* \"#utility.yul\":4060:4083   */\n      mload\n        /* \"#utility.yul\":4096:4159   */\n      tag_163\n        /* \"#utility.yul\":4153:4157   */\n      0x80\n        /* \"#utility.yul\":4148:4151   */\n      dup6\n        /* \"#utility.yul\":4144:4158   */\n      add\n        /* \"#utility.yul\":4130:4142   */\n      dup3\n        /* \"#utility.yul\":4096:4159   */\n      tag_100\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4000:4169   */\n      pop\n        /* \"#utility.yul\":4258:4262   */\n      0xa0\n        /* \"#utility.yul\":4251:4256   */\n      dup3\n        /* \"#utility.yul\":4247:4263   */\n      add\n        /* \"#utility.yul\":4241:4264   */\n      mload\n        /* \"#utility.yul\":4277:4340   */\n      tag_164\n        /* \"#utility.yul\":4334:4338   */\n      0xa0\n        /* \"#utility.yul\":4329:4332   */\n      dup6\n        /* \"#utility.yul\":4325:4339   */\n      add\n        /* \"#utility.yul\":4311:4323   */\n      dup3\n        /* \"#utility.yul\":4277:4340   */\n      tag_100\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4179:4350   */\n      pop\n        /* \"#utility.yul\":3250:4357   */\n      pop\n        /* \"#utility.yul\":3150:4357   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4630   */\n    tag_106:\n        /* \"#utility.yul\":4476:4486   */\n      0x00\n        /* \"#utility.yul\":4497:4587   */\n      tag_166\n        /* \"#utility.yul\":4583:4586   */\n      dup4\n        /* \"#utility.yul\":4575:4581   */\n      dup4\n        /* \"#utility.yul\":4497:4587   */\n      tag_105\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4619:4623   */\n      0xc0\n        /* \"#utility.yul\":4614:4617   */\n      dup4\n        /* \"#utility.yul\":4610:4624   */\n      add\n        /* \"#utility.yul\":4596:4624   */\n      swap1\n      pop\n        /* \"#utility.yul\":4363:4630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4636:4771   */\n    tag_107:\n        /* \"#utility.yul\":4728:4732   */\n      0x00\n        /* \"#utility.yul\":4760:4764   */\n      0x20\n        /* \"#utility.yul\":4755:4758   */\n      dup3\n        /* \"#utility.yul\":4751:4765   */\n      add\n        /* \"#utility.yul\":4743:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4636:4771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4835:5723   */\n    tag_108:\n        /* \"#utility.yul\":4988:4991   */\n      0x00\n        /* \"#utility.yul\":5017:5093   */\n      tag_169\n        /* \"#utility.yul\":5087:5092   */\n      dup3\n        /* \"#utility.yul\":5017:5093   */\n      tag_101\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5109:5207   */\n      tag_170\n        /* \"#utility.yul\":5200:5206   */\n      dup2\n        /* \"#utility.yul\":5195:5198   */\n      dup6\n        /* \"#utility.yul\":5109:5207   */\n      tag_102\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5102:5207   */\n      swap4\n      pop\n        /* \"#utility.yul\":5231:5309   */\n      tag_171\n        /* \"#utility.yul\":5303:5308   */\n      dup4\n        /* \"#utility.yul\":5231:5309   */\n      tag_103\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5332:5339   */\n      dup1\n        /* \"#utility.yul\":5363:5364   */\n      0x00\n        /* \"#utility.yul\":5348:5698   */\n    tag_172:\n        /* \"#utility.yul\":5373:5379   */\n      dup4\n        /* \"#utility.yul\":5370:5371   */\n      dup2\n        /* \"#utility.yul\":5367:5380   */\n      lt\n        /* \"#utility.yul\":5348:5698   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5449:5455   */\n      dup2\n        /* \"#utility.yul\":5443:5456   */\n      mload\n        /* \"#utility.yul\":5476:5583   */\n      tag_175\n        /* \"#utility.yul\":5579:5582   */\n      dup9\n        /* \"#utility.yul\":5564:5577   */\n      dup3\n        /* \"#utility.yul\":5476:5583   */\n      tag_106\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5469:5583   */\n      swap8\n      pop\n        /* \"#utility.yul\":5606:5688   */\n      tag_176\n        /* \"#utility.yul\":5681:5687   */\n      dup4\n        /* \"#utility.yul\":5606:5688   */\n      tag_107\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5596:5688   */\n      swap3\n      pop\n        /* \"#utility.yul\":5408:5698   */\n      pop\n        /* \"#utility.yul\":5395:5396   */\n      0x01\n        /* \"#utility.yul\":5392:5393   */\n      dup2\n        /* \"#utility.yul\":5388:5397   */\n      add\n        /* \"#utility.yul\":5383:5397   */\n      swap1\n      pop\n        /* \"#utility.yul\":5348:5698   */\n      jump(tag_172)\n    tag_174:\n        /* \"#utility.yul\":5352:5366   */\n      pop\n        /* \"#utility.yul\":5714:5717   */\n      dup6\n        /* \"#utility.yul\":5707:5717   */\n      swap4\n      pop\n        /* \"#utility.yul\":4993:5723   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4835:5723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5801:6503   */\n    tag_109:\n        /* \"#utility.yul\":5932:5935   */\n      0x00\n        /* \"#utility.yul\":5968:5972   */\n      0x40\n        /* \"#utility.yul\":5963:5966   */\n      dup4\n        /* \"#utility.yul\":5959:5973   */\n      add\n        /* \"#utility.yul\":6063:6067   */\n      0x00\n        /* \"#utility.yul\":6056:6061   */\n      dup4\n        /* \"#utility.yul\":6052:6068   */\n      add\n        /* \"#utility.yul\":6046:6069   */\n      mload\n        /* \"#utility.yul\":6082:6145   */\n      tag_178\n        /* \"#utility.yul\":6139:6143   */\n      0x00\n        /* \"#utility.yul\":6134:6137   */\n      dup7\n        /* \"#utility.yul\":6130:6144   */\n      add\n        /* \"#utility.yul\":6116:6128   */\n      dup3\n        /* \"#utility.yul\":6082:6145   */\n      tag_100\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5983:6155   */\n      pop\n        /* \"#utility.yul\":6239:6243   */\n      0x20\n        /* \"#utility.yul\":6232:6237   */\n      dup4\n        /* \"#utility.yul\":6228:6244   */\n      add\n        /* \"#utility.yul\":6222:6245   */\n      mload\n        /* \"#utility.yul\":6292:6295   */\n      dup5\n        /* \"#utility.yul\":6286:6290   */\n      dup3\n        /* \"#utility.yul\":6282:6296   */\n      sub\n        /* \"#utility.yul\":6275:6279   */\n      0x20\n        /* \"#utility.yul\":6270:6273   */\n      dup7\n        /* \"#utility.yul\":6266:6280   */\n      add\n        /* \"#utility.yul\":6259:6297   */\n      mstore\n        /* \"#utility.yul\":6318:6465   */\n      tag_179\n        /* \"#utility.yul\":6460:6464   */\n      dup3\n        /* \"#utility.yul\":6446:6458   */\n      dup3\n        /* \"#utility.yul\":6318:6465   */\n      tag_108\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6310:6465   */\n      swap2\n      pop\n        /* \"#utility.yul\":6165:6476   */\n      pop\n        /* \"#utility.yul\":6493:6497   */\n      dup1\n        /* \"#utility.yul\":6486:6497   */\n      swap2\n      pop\n        /* \"#utility.yul\":5937:6503   */\n      pop\n        /* \"#utility.yul\":5801:6503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6509:6906   */\n    tag_17:\n        /* \"#utility.yul\":6664:6668   */\n      0x00\n        /* \"#utility.yul\":6702:6704   */\n      0x20\n        /* \"#utility.yul\":6691:6700   */\n      dup3\n        /* \"#utility.yul\":6687:6705   */\n      add\n        /* \"#utility.yul\":6679:6705   */\n      swap1\n      pop\n        /* \"#utility.yul\":6751:6760   */\n      dup2\n        /* \"#utility.yul\":6745:6749   */\n      dup2\n        /* \"#utility.yul\":6741:6761   */\n      sub\n        /* \"#utility.yul\":6737:6738   */\n      0x00\n        /* \"#utility.yul\":6726:6735   */\n      dup4\n        /* \"#utility.yul\":6722:6739   */\n      add\n        /* \"#utility.yul\":6715:6762   */\n      mstore\n        /* \"#utility.yul\":6779:6899   */\n      tag_181\n        /* \"#utility.yul\":6894:6898   */\n      dup2\n        /* \"#utility.yul\":6885:6891   */\n      dup5\n        /* \"#utility.yul\":6779:6899   */\n      tag_109\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6771:6899   */\n      swap1\n      pop\n        /* \"#utility.yul\":6509:6906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6912:7092   */\n    tag_26:\n        /* \"#utility.yul\":6960:7037   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6957:6958   */\n      0x00\n        /* \"#utility.yul\":6950:7038   */\n      mstore\n        /* \"#utility.yul\":7057:7061   */\n      0x32\n        /* \"#utility.yul\":7054:7055   */\n      0x04\n        /* \"#utility.yul\":7047:7062   */\n      mstore\n        /* \"#utility.yul\":7081:7085   */\n      0x24\n        /* \"#utility.yul\":7078:7079   */\n      0x00\n        /* \"#utility.yul\":7071:7086   */\n      revert\n        /* \"#utility.yul\":7098:7278   */\n    tag_110:\n        /* \"#utility.yul\":7146:7223   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7143:7144   */\n      0x00\n        /* \"#utility.yul\":7136:7224   */\n      mstore\n        /* \"#utility.yul\":7243:7247   */\n      0x11\n        /* \"#utility.yul\":7240:7241   */\n      0x04\n        /* \"#utility.yul\":7233:7248   */\n      mstore\n        /* \"#utility.yul\":7267:7271   */\n      0x24\n        /* \"#utility.yul\":7264:7265   */\n      0x00\n        /* \"#utility.yul\":7257:7272   */\n      revert\n        /* \"#utility.yul\":7284:7475   */\n    tag_28:\n        /* \"#utility.yul\":7324:7328   */\n      0x00\n        /* \"#utility.yul\":7344:7364   */\n      tag_185\n        /* \"#utility.yul\":7362:7363   */\n      dup3\n        /* \"#utility.yul\":7344:7364   */\n      tag_92\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":7339:7364   */\n      swap2\n      pop\n        /* \"#utility.yul\":7378:7398   */\n      tag_186\n        /* \"#utility.yul\":7396:7397   */\n      dup4\n        /* \"#utility.yul\":7378:7398   */\n      tag_92\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7373:7398   */\n      swap3\n      pop\n        /* \"#utility.yul\":7417:7418   */\n      dup3\n        /* \"#utility.yul\":7414:7415   */\n      dup3\n        /* \"#utility.yul\":7411:7419   */\n      lt\n        /* \"#utility.yul\":7408:7442   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":7422:7440   */\n      tag_188\n      tag_110\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":7408:7442   */\n    tag_187:\n        /* \"#utility.yul\":7467:7468   */\n      dup3\n        /* \"#utility.yul\":7464:7465   */\n      dup3\n        /* \"#utility.yul\":7460:7469   */\n      sub\n        /* \"#utility.yul\":7452:7469   */\n      swap1\n      pop\n        /* \"#utility.yul\":7284:7475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7481:7650   */\n    tag_111:\n        /* \"#utility.yul\":7565:7576   */\n      0x00\n        /* \"#utility.yul\":7599:7605   */\n      dup3\n        /* \"#utility.yul\":7594:7597   */\n      dup3\n        /* \"#utility.yul\":7587:7606   */\n      mstore\n        /* \"#utility.yul\":7639:7643   */\n      0x20\n        /* \"#utility.yul\":7634:7637   */\n      dup3\n        /* \"#utility.yul\":7630:7644   */\n      add\n        /* \"#utility.yul\":7615:7644   */\n      swap1\n      pop\n        /* \"#utility.yul\":7481:7650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7890   */\n    tag_112:\n        /* \"#utility.yul\":7796:7830   */\n      0x5374616b61626c653a2054686973206164647265737320646f6573206e6f7420\n        /* \"#utility.yul\":7792:7793   */\n      0x00\n        /* \"#utility.yul\":7784:7790   */\n      dup3\n        /* \"#utility.yul\":7780:7794   */\n      add\n        /* \"#utility.yul\":7773:7831   */\n      mstore\n        /* \"#utility.yul\":7865:7882   */\n      0x6861766520616e79207374616b65730000000000000000000000000000000000\n        /* \"#utility.yul\":7860:7862   */\n      0x20\n        /* \"#utility.yul\":7852:7858   */\n      dup3\n        /* \"#utility.yul\":7848:7863   */\n      add\n        /* \"#utility.yul\":7841:7883   */\n      mstore\n        /* \"#utility.yul\":7656:7890   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7896:8262   */\n    tag_113:\n        /* \"#utility.yul\":8038:8041   */\n      0x00\n        /* \"#utility.yul\":8059:8126   */\n      tag_192\n        /* \"#utility.yul\":8123:8125   */\n      0x2f\n        /* \"#utility.yul\":8118:8121   */\n      dup4\n        /* \"#utility.yul\":8059:8126   */\n      tag_111\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":8052:8126   */\n      swap2\n      pop\n        /* \"#utility.yul\":8135:8228   */\n      tag_193\n        /* \"#utility.yul\":8224:8227   */\n      dup3\n        /* \"#utility.yul\":8135:8228   */\n      tag_112\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":8253:8255   */\n      0x40\n        /* \"#utility.yul\":8248:8251   */\n      dup3\n        /* \"#utility.yul\":8244:8256   */\n      add\n        /* \"#utility.yul\":8237:8256   */\n      swap1\n      pop\n        /* \"#utility.yul\":7896:8262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8268:8687   */\n    tag_48:\n        /* \"#utility.yul\":8434:8438   */\n      0x00\n        /* \"#utility.yul\":8472:8474   */\n      0x20\n        /* \"#utility.yul\":8461:8470   */\n      dup3\n        /* \"#utility.yul\":8457:8475   */\n      add\n        /* \"#utility.yul\":8449:8475   */\n      swap1\n      pop\n        /* \"#utility.yul\":8521:8530   */\n      dup2\n        /* \"#utility.yul\":8515:8519   */\n      dup2\n        /* \"#utility.yul\":8511:8531   */\n      sub\n        /* \"#utility.yul\":8507:8508   */\n      0x00\n        /* \"#utility.yul\":8496:8505   */\n      dup4\n        /* \"#utility.yul\":8492:8509   */\n      add\n        /* \"#utility.yul\":8485:8532   */\n      mstore\n        /* \"#utility.yul\":8549:8680   */\n      tag_195\n        /* \"#utility.yul\":8675:8679   */\n      dup2\n        /* \"#utility.yul\":8549:8680   */\n      tag_113\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":8541:8680   */\n      swap1\n      pop\n        /* \"#utility.yul\":8268:8687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8693:8998   */\n    tag_63:\n        /* \"#utility.yul\":8733:8736   */\n      0x00\n        /* \"#utility.yul\":8752:8772   */\n      tag_197\n        /* \"#utility.yul\":8770:8771   */\n      dup3\n        /* \"#utility.yul\":8752:8772   */\n      tag_92\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":8747:8772   */\n      swap2\n      pop\n        /* \"#utility.yul\":8786:8806   */\n      tag_198\n        /* \"#utility.yul\":8804:8805   */\n      dup4\n        /* \"#utility.yul\":8786:8806   */\n      tag_92\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":8781:8806   */\n      swap3\n      pop\n        /* \"#utility.yul\":8940:8941   */\n      dup3\n        /* \"#utility.yul\":8872:8938   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8868:8942   */\n      sub\n        /* \"#utility.yul\":8865:8866   */\n      dup3\n        /* \"#utility.yul\":8862:8943   */\n      gt\n        /* \"#utility.yul\":8859:8966   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":8946:8964   */\n      tag_200\n      tag_110\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8859:8966   */\n    tag_199:\n        /* \"#utility.yul\":8990:8991   */\n      dup3\n        /* \"#utility.yul\":8987:8988   */\n      dup3\n        /* \"#utility.yul\":8983:8992   */\n      add\n        /* \"#utility.yul\":8976:8992   */\n      swap1\n      pop\n        /* \"#utility.yul\":8693:8998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9004:9352   */\n    tag_70:\n        /* \"#utility.yul\":9044:9051   */\n      0x00\n        /* \"#utility.yul\":9067:9087   */\n      tag_202\n        /* \"#utility.yul\":9085:9086   */\n      dup3\n        /* \"#utility.yul\":9067:9087   */\n      tag_92\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":9062:9087   */\n      swap2\n      pop\n        /* \"#utility.yul\":9101:9121   */\n      tag_203\n        /* \"#utility.yul\":9119:9120   */\n      dup4\n        /* \"#utility.yul\":9101:9121   */\n      tag_92\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":9096:9121   */\n      swap3\n      pop\n        /* \"#utility.yul\":9289:9290   */\n      dup2\n        /* \"#utility.yul\":9221:9287   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9217:9291   */\n      div\n        /* \"#utility.yul\":9214:9215   */\n      dup4\n        /* \"#utility.yul\":9211:9292   */\n      gt\n        /* \"#utility.yul\":9206:9207   */\n      dup3\n        /* \"#utility.yul\":9199:9208   */\n      iszero\n        /* \"#utility.yul\":9192:9209   */\n      iszero\n        /* \"#utility.yul\":9188:9293   */\n      and\n        /* \"#utility.yul\":9185:9316   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":9296:9314   */\n      tag_205\n      tag_110\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":9185:9316   */\n    tag_204:\n        /* \"#utility.yul\":9344:9345   */\n      dup3\n        /* \"#utility.yul\":9341:9342   */\n      dup3\n        /* \"#utility.yul\":9337:9346   */\n      mul\n        /* \"#utility.yul\":9326:9346   */\n      swap1\n      pop\n        /* \"#utility.yul\":9004:9352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9358:9538   */\n    tag_88:\n        /* \"#utility.yul\":9406:9483   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9403:9404   */\n      0x00\n        /* \"#utility.yul\":9396:9484   */\n      mstore\n        /* \"#utility.yul\":9503:9507   */\n      0x12\n        /* \"#utility.yul\":9500:9501   */\n      0x04\n        /* \"#utility.yul\":9493:9508   */\n      mstore\n        /* \"#utility.yul\":9527:9531   */\n      0x24\n        /* \"#utility.yul\":9524:9525   */\n      0x00\n        /* \"#utility.yul\":9517:9532   */\n      revert\n        /* \"#utility.yul\":9544:9729   */\n    tag_73:\n        /* \"#utility.yul\":9584:9585   */\n      0x00\n        /* \"#utility.yul\":9601:9621   */\n      tag_208\n        /* \"#utility.yul\":9619:9620   */\n      dup3\n        /* \"#utility.yul\":9601:9621   */\n      tag_92\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":9596:9621   */\n      swap2\n      pop\n        /* \"#utility.yul\":9635:9655   */\n      tag_209\n        /* \"#utility.yul\":9653:9654   */\n      dup4\n        /* \"#utility.yul\":9635:9655   */\n      tag_92\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":9630:9655   */\n      swap3\n      pop\n        /* \"#utility.yul\":9674:9675   */\n      dup3\n        /* \"#utility.yul\":9664:9699   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":9679:9697   */\n      tag_211\n      tag_88\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":9664:9699   */\n    tag_210:\n        /* \"#utility.yul\":9721:9722   */\n      dup3\n        /* \"#utility.yul\":9718:9719   */\n      dup3\n        /* \"#utility.yul\":9714:9723   */\n      div\n        /* \"#utility.yul\":9709:9723   */\n      swap1\n      pop\n        /* \"#utility.yul\":9544:9729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9735:9912   */\n    tag_114:\n        /* \"#utility.yul\":9875:9904   */\n      0x5374616b61626c653a204572726f722074696d657374616d7020300000000000\n        /* \"#utility.yul\":9871:9872   */\n      0x00\n        /* \"#utility.yul\":9863:9869   */\n      dup3\n        /* \"#utility.yul\":9859:9873   */\n      add\n        /* \"#utility.yul\":9852:9905   */\n      mstore\n        /* \"#utility.yul\":9735:9912   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9918:10284   */\n    tag_115:\n        /* \"#utility.yul\":10060:10063   */\n      0x00\n        /* \"#utility.yul\":10081:10148   */\n      tag_214\n        /* \"#utility.yul\":10145:10147   */\n      0x1b\n        /* \"#utility.yul\":10140:10143   */\n      dup4\n        /* \"#utility.yul\":10081:10148   */\n      tag_111\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":10074:10148   */\n      swap2\n      pop\n        /* \"#utility.yul\":10157:10250   */\n      tag_215\n        /* \"#utility.yul\":10246:10249   */\n      dup3\n        /* \"#utility.yul\":10157:10250   */\n      tag_114\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":10275:10277   */\n      0x20\n        /* \"#utility.yul\":10270:10273   */\n      dup3\n        /* \"#utility.yul\":10266:10278   */\n      add\n        /* \"#utility.yul\":10259:10278   */\n      swap1\n      pop\n        /* \"#utility.yul\":9918:10284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10290:10709   */\n    tag_77:\n        /* \"#utility.yul\":10456:10460   */\n      0x00\n        /* \"#utility.yul\":10494:10496   */\n      0x20\n        /* \"#utility.yul\":10483:10492   */\n      dup3\n        /* \"#utility.yul\":10479:10497   */\n      add\n        /* \"#utility.yul\":10471:10497   */\n      swap1\n      pop\n        /* \"#utility.yul\":10543:10552   */\n      dup2\n        /* \"#utility.yul\":10537:10541   */\n      dup2\n        /* \"#utility.yul\":10533:10553   */\n      sub\n        /* \"#utility.yul\":10529:10530   */\n      0x00\n        /* \"#utility.yul\":10518:10527   */\n      dup4\n        /* \"#utility.yul\":10514:10531   */\n      add\n        /* \"#utility.yul\":10507:10554   */\n      mstore\n        /* \"#utility.yul\":10571:10702   */\n      tag_217\n        /* \"#utility.yul\":10697:10701   */\n      dup2\n        /* \"#utility.yul\":10571:10702   */\n      tag_115\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":10563:10702   */\n      swap1\n      pop\n        /* \"#utility.yul\":10290:10709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10715:10814   */\n    tag_116:\n        /* \"#utility.yul\":10767:10773   */\n      0x00\n        /* \"#utility.yul\":10801:10806   */\n      dup2\n        /* \"#utility.yul\":10795:10807   */\n      mload\n        /* \"#utility.yul\":10785:10807   */\n      swap1\n      pop\n        /* \"#utility.yul\":10715:10814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10820:11127   */\n    tag_117:\n        /* \"#utility.yul\":10888:10889   */\n      0x00\n        /* \"#utility.yul\":10898:11011   */\n    tag_220:\n        /* \"#utility.yul\":10912:10918   */\n      dup4\n        /* \"#utility.yul\":10909:10910   */\n      dup2\n        /* \"#utility.yul\":10906:10919   */\n      lt\n        /* \"#utility.yul\":10898:11011   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":10997:10998   */\n      dup1\n        /* \"#utility.yul\":10992:10995   */\n      dup3\n        /* \"#utility.yul\":10988:10999   */\n      add\n        /* \"#utility.yul\":10982:11000   */\n      mload\n        /* \"#utility.yul\":10978:10979   */\n      dup2\n        /* \"#utility.yul\":10973:10976   */\n      dup5\n        /* \"#utility.yul\":10969:10980   */\n      add\n        /* \"#utility.yul\":10962:11001   */\n      mstore\n        /* \"#utility.yul\":10934:10936   */\n      0x20\n        /* \"#utility.yul\":10931:10932   */\n      dup2\n        /* \"#utility.yul\":10927:10937   */\n      add\n        /* \"#utility.yul\":10922:10937   */\n      swap1\n      pop\n        /* \"#utility.yul\":10898:11011   */\n      jump(tag_220)\n    tag_222:\n        /* \"#utility.yul\":11029:11035   */\n      dup4\n        /* \"#utility.yul\":11026:11027   */\n      dup2\n        /* \"#utility.yul\":11023:11036   */\n      gt\n        /* \"#utility.yul\":11020:11121   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":11109:11110   */\n      0x00\n        /* \"#utility.yul\":11100:11106   */\n      dup5\n        /* \"#utility.yul\":11095:11098   */\n      dup5\n        /* \"#utility.yul\":11091:11107   */\n      add\n        /* \"#utility.yul\":11084:11111   */\n      mstore\n        /* \"#utility.yul\":11020:11121   */\n    tag_223:\n        /* \"#utility.yul\":10869:11127   */\n      pop\n        /* \"#utility.yul\":10820:11127   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11133:11235   */\n    tag_118:\n        /* \"#utility.yul\":11174:11180   */\n      0x00\n        /* \"#utility.yul\":11225:11227   */\n      0x1f\n        /* \"#utility.yul\":11221:11228   */\n      not\n        /* \"#utility.yul\":11216:11218   */\n      0x1f\n        /* \"#utility.yul\":11209:11214   */\n      dup4\n        /* \"#utility.yul\":11205:11219   */\n      add\n        /* \"#utility.yul\":11201:11229   */\n      and\n        /* \"#utility.yul\":11191:11229   */\n      swap1\n      pop\n        /* \"#utility.yul\":11133:11235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11241:11605   */\n    tag_119:\n        /* \"#utility.yul\":11329:11332   */\n      0x00\n        /* \"#utility.yul\":11357:11396   */\n      tag_226\n        /* \"#utility.yul\":11390:11395   */\n      dup3\n        /* \"#utility.yul\":11357:11396   */\n      tag_116\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":11412:11483   */\n      tag_227\n        /* \"#utility.yul\":11476:11482   */\n      dup2\n        /* \"#utility.yul\":11471:11474   */\n      dup6\n        /* \"#utility.yul\":11412:11483   */\n      tag_111\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":11405:11483   */\n      swap4\n      pop\n        /* \"#utility.yul\":11492:11544   */\n      tag_228\n        /* \"#utility.yul\":11537:11543   */\n      dup2\n        /* \"#utility.yul\":11532:11535   */\n      dup6\n        /* \"#utility.yul\":11525:11529   */\n      0x20\n        /* \"#utility.yul\":11518:11523   */\n      dup7\n        /* \"#utility.yul\":11514:11530   */\n      add\n        /* \"#utility.yul\":11492:11544   */\n      tag_117\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":11569:11598   */\n      tag_229\n        /* \"#utility.yul\":11591:11597   */\n      dup2\n        /* \"#utility.yul\":11569:11598   */\n      tag_118\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":11564:11567   */\n      dup5\n        /* \"#utility.yul\":11560:11599   */\n      add\n        /* \"#utility.yul\":11553:11599   */\n      swap2\n      pop\n        /* \"#utility.yul\":11333:11605   */\n      pop\n        /* \"#utility.yul\":11241:11605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11611:11924   */\n    tag_85:\n        /* \"#utility.yul\":11724:11728   */\n      0x00\n        /* \"#utility.yul\":11762:11764   */\n      0x20\n        /* \"#utility.yul\":11751:11760   */\n      dup3\n        /* \"#utility.yul\":11747:11765   */\n      add\n        /* \"#utility.yul\":11739:11765   */\n      swap1\n      pop\n        /* \"#utility.yul\":11811:11820   */\n      dup2\n        /* \"#utility.yul\":11805:11809   */\n      dup2\n        /* \"#utility.yul\":11801:11821   */\n      sub\n        /* \"#utility.yul\":11797:11798   */\n      0x00\n        /* \"#utility.yul\":11786:11795   */\n      dup4\n        /* \"#utility.yul\":11782:11799   */\n      add\n        /* \"#utility.yul\":11775:11822   */\n      mstore\n        /* \"#utility.yul\":11839:11917   */\n      tag_231\n        /* \"#utility.yul\":11912:11916   */\n      dup2\n        /* \"#utility.yul\":11903:11909   */\n      dup5\n        /* \"#utility.yul\":11839:11917   */\n      tag_119\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":11831:11917   */\n      swap1\n      pop\n        /* \"#utility.yul\":11611:11924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_10b867070097d898ae15cd1bc384e389b4a7d91f05c0759c198c193c7fd91787 5374616b61626c653a204572726f722063616e6e6f74206469766964652074696d657374616d70\n\n    auxdata: 0xa264697066735822122030133e81ad8a9aeb64115a9fd3276d7a3f598f28b40afab9122eb79b8a4d6dcf64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_332": {
									"entryPoint": null,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 97,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 92,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:2",
														"type": ""
													}
												],
												"src": "545:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:2"
															},
															"nodeType": "YulIf",
															"src": "781:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:2",
														"type": ""
													}
												],
												"src": "694:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610de1380380610de183398181016040528101906100329190610097565b600180816001815401808255809150500390600052602060002090505080600081905550506100c4565b600080fd5b6000819050919050565b61007481610061565b811461007f57600080fd5b50565b6000815190506100918161006b565b92915050565b6000602082840312156100ad576100ac61005c565b5b60006100bb84828501610082565b91505092915050565b610d0e806100d36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633892010214610046578063b09d4b4e14610076578063e73e14bf146100a6575b600080fd5b610060600480360381019061005b9190610718565b6100d6565b60405161006d9190610767565b60405180910390f35b610090600480360381019061008b9190610782565b61011b565b60405161009d9190610934565b60405180910390f35b6100c060048036038101906100bb9190610782565b610287565b6040516100cd9190610934565b60405180910390f35b6000806100e28361011b565b9050806020015184815181106100fb576100fa610956565b5b6020026020010151604001514261011291906109b4565b91505092915050565b610123610665565b60006040518060400160405280600081526020016001600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061018a57610189610956565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b8282101561027557838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050815260200190600101906101bb565b50505050815250905080915050919050565b61028f610665565b6000806040518060400160405280600081526020016001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106102f7576102f6610956565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b828210156103e257838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152505081526020019060010190610328565b50505050815250905060008160200151511415610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90610a6b565b60405180910390fd5b60005b8160200151518110156104ff576000610490836020015183815181106104605761045f610956565b5b60200260200101518460200151848151811061047f5761047e610956565b5b602002602001015160200151610514565b905080836020015183815181106104aa576104a9610956565b5b60200260200101516060018181525050826020015182815181106104d1576104d0610956565b5b602002602001015160200151846104e89190610a8b565b9350506001816104f89190610a8b565b9050610437565b50818160000181815250508092505050919050565b6000808360200151141561052b576000905061056b565b6a52b7d2dcc80cd2e40000006105448460400151610571565b8460800151846105549190610ae1565b61055e9190610ae1565b6105689190610b6a565b90505b92915050565b60008082116105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac90610be7565b60405180910390fd5b6105fc69d3c21bcecceda100000083426105cf91906109b4565b6105d99190610ae1565b6301e13380604051806060016040528060278152602001610cb260279139610603565b9050919050565b6000808311829061064a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106419190610c8f565b60405180910390fd5b5082848161065b5761065a610b3b565b5b0490509392505050565b604051806040016040528060008152602001606081525090565b600080fd5b6000819050919050565b61069781610684565b81146106a257600080fd5b50565b6000813590506106b48161068e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106e5826106ba565b9050919050565b6106f5816106da565b811461070057600080fd5b50565b600081359050610712816106ec565b92915050565b6000806040838503121561072f5761072e61067f565b5b600061073d858286016106a5565b925050602061074e85828601610703565b9150509250929050565b61076181610684565b82525050565b600060208201905061077c6000830184610758565b92915050565b6000602082840312156107985761079761067f565b5b60006107a684828501610703565b91505092915050565b6107b881610684565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107f3816106da565b82525050565b60c08201600082015161080f60008501826107ea565b50602082015161082260208501826107af565b50604082015161083560408501826107af565b50606082015161084860608501826107af565b50608082015161085b60808501826107af565b5060a082015161086e60a08501826107af565b50505050565b600061088083836107f9565b60c08301905092915050565b6000602082019050919050565b60006108a4826107be565b6108ae81856107c9565b93506108b9836107da565b8060005b838110156108ea5781516108d18882610874565b97506108dc8361088c565b9250506001810190506108bd565b5085935050505092915050565b600060408301600083015161090f60008601826107af565b50602083015184820360208601526109278282610899565b9150508091505092915050565b6000602082019050818103600083015261094e81846108f7565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bf82610684565b91506109ca83610684565b9250828210156109dd576109dc610985565b5b828203905092915050565b600082825260208201905092915050565b7f5374616b61626c653a2054686973206164647265737320646f6573206e6f742060008201527f6861766520616e79207374616b65730000000000000000000000000000000000602082015250565b6000610a55602f836109e8565b9150610a60826109f9565b604082019050919050565b60006020820190508181036000830152610a8481610a48565b9050919050565b6000610a9682610684565b9150610aa183610684565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ad657610ad5610985565b5b828201905092915050565b6000610aec82610684565b9150610af783610684565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3057610b2f610985565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7582610684565b9150610b8083610684565b925082610b9057610b8f610b3b565b5b828204905092915050565b7f5374616b61626c653a204572726f722074696d657374616d7020300000000000600082015250565b6000610bd1601b836109e8565b9150610bdc82610b9b565b602082019050919050565b60006020820190508181036000830152610c0081610bc4565b9050919050565b600081519050919050565b60005b83811015610c30578082015181840152602081019050610c15565b83811115610c3f576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c6182610c07565b610c6b81856109e8565b9350610c7b818560208601610c12565b610c8481610c45565b840191505092915050565b60006020820190508181036000830152610ca98184610c56565b90509291505056fe5374616b61626c653a204572726f722063616e6e6f74206469766964652074696d657374616d70a264697066735822122030133e81ad8a9aeb64115a9fd3276d7a3f598f28b40afab9122eb79b8a4d6dcf64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDE1 CODESIZE SUB DUP1 PUSH2 0xDE1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x97 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0x61 JUMP JUMPDEST DUP2 EQ PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x91 DUP2 PUSH2 0x6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD JUMPI PUSH2 0xAC PUSH2 0x5C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP5 DUP3 DUP6 ADD PUSH2 0x82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD0E DUP1 PUSH2 0xD3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38920102 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xB09D4B4E EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x782 JUMP JUMPDEST PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x782 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE2 DUP4 PUSH2 0x11B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xFB JUMPI PUSH2 0xFA PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x9B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x123 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x18A JUMPI PUSH2 0x189 PUSH2 0x956 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x275 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F PUSH2 0x665 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2F7 JUMPI PUSH2 0x2F6 PUSH2 0x956 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3E2 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x328 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD MLOAD EQ ISZERO PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42B SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 PUSH2 0x490 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x460 JUMPI PUSH2 0x45F PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x47F JUMPI PUSH2 0x47E PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x514 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4AA JUMPI PUSH2 0x4A9 PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x1 DUP2 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST SWAP1 POP PUSH2 0x437 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x56B JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x544 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x571 JUMP JUMPDEST DUP5 PUSH1 0x80 ADD MLOAD DUP5 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x55E SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x568 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FC PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCB2 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x641 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x65B JUMPI PUSH2 0x65A PUSH2 0xB3B JUMP JUMPDEST JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x697 DUP2 PUSH2 0x684 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B4 DUP2 PUSH2 0x68E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 DUP3 PUSH2 0x6BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F5 DUP2 PUSH2 0x6DA JUMP JUMPDEST DUP2 EQ PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x712 DUP2 PUSH2 0x6EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH2 0x72E PUSH2 0x67F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x73D DUP6 DUP3 DUP7 ADD PUSH2 0x6A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x74E DUP6 DUP3 DUP7 ADD PUSH2 0x703 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x761 DUP2 PUSH2 0x684 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x77C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x758 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x798 JUMPI PUSH2 0x797 PUSH2 0x67F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7A6 DUP5 DUP3 DUP6 ADD PUSH2 0x703 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B8 DUP2 PUSH2 0x684 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F3 DUP2 PUSH2 0x6DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x80F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x7EA JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x822 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x835 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x848 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x85B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x86E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x880 DUP4 DUP4 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A4 DUP3 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x8AE DUP2 DUP6 PUSH2 0x7C9 JUMP JUMPDEST SWAP4 POP PUSH2 0x8B9 DUP4 PUSH2 0x7DA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8EA JUMPI DUP2 MLOAD PUSH2 0x8D1 DUP9 DUP3 PUSH2 0x874 JUMP JUMPDEST SWAP8 POP PUSH2 0x8DC DUP4 PUSH2 0x88C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8BD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x90F PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x927 DUP3 DUP3 PUSH2 0x899 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x94E DUP2 DUP5 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9BF DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP2 POP PUSH2 0x9CA DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x9DD JUMPI PUSH2 0x9DC PUSH2 0x985 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B61626C653A2054686973206164647265737320646F6573206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6861766520616E79207374616B65730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA55 PUSH1 0x2F DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA60 DUP3 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA84 DUP2 PUSH2 0xA48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA96 DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA1 DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xAD6 JUMPI PUSH2 0xAD5 PUSH2 0x985 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEC DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF7 DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0x985 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB75 DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP2 POP PUSH2 0xB80 DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB90 JUMPI PUSH2 0xB8F PUSH2 0xB3B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B61626C653A204572726F722074696D657374616D7020300000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD1 PUSH1 0x1B DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xBDC DUP3 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC00 DUP2 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC30 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC15 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xC3F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 DUP3 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xC6B DUP2 DUP6 PUSH2 0x9E8 JUMP JUMPDEST SWAP4 POP PUSH2 0xC7B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH2 0xC84 DUP2 PUSH2 0xC45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCA9 DUP2 DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH21 0x616B61626C653A204572726F722063616E6E6F7420 PUSH5 0x6976696465 KECCAK256 PUSH21 0x696D657374616D70A264697066735822122030133E DUP2 0xAD DUP11 SWAP11 0xEB PUSH5 0x115A9FD327 PUSH14 0x7A3F598F28B40AFAB9122EB79B8A 0x4D PUSH14 0xCF64736F6C634300080B00330000 ",
							"sourceMap": "128:11184:1:-:0;;;363:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;486:12;:19;;;;;;;;;;;;;;;;;;;;;;;577:15;559;:33;;;;363:237;128:11184;;88:117:2;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;128:11184:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculateStakeReward_603": {
									"entryPoint": 1300,
									"id": 603,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateStakingDuration_571": {
									"entryPoint": 1393,
									"id": 571,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_285": {
									"entryPoint": 1539,
									"id": 285,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hasStake_965": {
									"entryPoint": 647,
									"id": 965,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@stakeSummary_627": {
									"entryPoint": 283,
									"id": 627,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@testCalculateDuration_543": {
									"entryPoint": 214,
									"id": 543,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr": {
									"entryPoint": 2041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_StakingSummary_$359_memory_ptr_to_t_struct$_StakingSummary_$359_memory_ptr_fromStack": {
									"entryPoint": 2295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$359_memory_ptr__to_t_struct$_StakingSummary_$359_memory_ptr__fromStack_reversed": {
									"entryPoint": 2356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3090,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd": {
									"entryPoint": 2971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11927:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "745:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "745:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "717:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "727:7:2",
														"type": ""
													}
												],
												"src": "690:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "867:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "877:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "906:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "888:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "888:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "877:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "849:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "859:7:2",
														"type": ""
													}
												],
												"src": "822:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:2"
															},
															"nodeType": "YulIf",
															"src": "977:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:2",
														"type": ""
													}
												],
												"src": "924:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:2",
														"type": ""
													}
												],
												"src": "1052:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:2"
															},
															"nodeType": "YulIf",
															"src": "1290:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:2",
														"type": ""
													}
												],
												"src": "1197:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:2",
														"type": ""
													}
												],
												"src": "1677:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:2",
														"type": ""
													}
												],
												"src": "1801:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2141:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:32:2"
															},
															"nodeType": "YulIf",
															"src": "2105:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2234:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2278:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2065:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2076:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2088:6:2",
														"type": ""
													}
												],
												"src": "2029:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2419:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2436:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2459:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2441:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2441:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2429:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2429:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2407:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2414:3:2",
														"type": ""
													}
												],
												"src": "2364:108:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2574:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2585:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2601:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2595:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2557:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2567:6:2",
														"type": ""
													}
												],
												"src": "2478:136:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2743:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2760:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2765:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2781:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2800:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2796:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2781:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2715:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2720:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2731:11:2",
														"type": ""
													}
												],
												"src": "2620:196:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2916:60:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2926:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2934:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2926:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2947:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2959:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:14:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2947:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2903:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2911:4:2",
														"type": ""
													}
												],
												"src": "2822:154:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3037:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3077:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3059:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3047:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3025:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3032:3:2",
														"type": ""
													}
												],
												"src": "2982:108:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3250:1107:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3260:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3276:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3281:4:2",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3272:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:14:2"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "3264:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3296:164:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3331:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3361:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3368:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3357:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3357:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3351:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3335:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3421:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3439:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3444:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3435:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3435:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3387:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3387:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3470:166:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3507:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3537:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3544:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3533:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3533:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3527:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3527:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3511:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3597:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3615:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3620:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3611:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3611:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3563:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3563:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3563:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3646:165:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3682:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3712:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3719:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3708:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3708:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3702:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3702:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3686:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3772:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3790:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3795:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3786:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3786:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3738:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3738:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3738:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3821:169:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3861:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3891:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3898:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3887:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3887:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3881:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3881:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3865:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3951:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3969:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3974:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3965:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3965:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3917:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3917:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4000:169:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4040:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4070:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4077:4:2",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4066:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4066:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4060:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4044:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4130:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4148:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4153:4:2",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4144:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4144:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4096:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4096:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4096:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4179:171:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4221:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4251:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4258:4:2",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4247:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4247:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4241:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4241:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4225:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4311:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4329:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4334:4:2",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4325:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4325:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4277:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4277:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4277:63:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3237:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3244:3:2",
														"type": ""
													}
												],
												"src": "3150:1207:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4487:143:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4575:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4583:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4497:77:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4497:90:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4497:90:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4596:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4614:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:4:2",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4610:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:14:2"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4596:10:2"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4460:6:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4468:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "4476:10:2",
														"type": ""
													}
												],
												"src": "4363:267:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4733:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4743:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4755:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4751:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:14:2"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "4743:4:2"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4720:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "4728:4:2",
														"type": ""
													}
												],
												"src": "4636:135:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4993:730:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5003:90:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5087:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5017:69:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:76:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5007:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5102:105:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5195:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5200:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5109:85:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:98:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5102:3:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5216:93:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5303:5:2"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5231:71:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5231:78:2"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "5220:7:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5318:21:2",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "5332:7:2"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5322:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5408:290:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5422:34:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5449:6:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5443:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5443:13:2"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5426:13:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5469:114:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5564:13:2"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5579:3:2"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5476:87:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5476:107:2"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5469:3:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5596:92:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5681:6:2"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5606:74:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5606:82:2"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5596:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5370:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5373:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5367:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5381:18:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5383:14:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5392:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5395:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5388:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5388:9:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5383:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5352:14:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5354:10:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5363:1:2",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "5358:1:2",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5348:350:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5707:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5714:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5707:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4972:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4979:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4988:3:2",
														"type": ""
													}
												],
												"src": "4835:888:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5937:566:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5947:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5963:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5968:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5959:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5959:14:2"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5951:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5983:172:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6026:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6056:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6063:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6052:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6052:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6046:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6046:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6030:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6116:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6134:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6139:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6130:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6130:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6082:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6082:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6082:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6165:311:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6202:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6232:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6239:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6228:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6228:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6222:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6222:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6206:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6270:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6275:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6266:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6266:14:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "6286:4:2"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6292:3:2"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6282:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6282:14:2"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "6259:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6259:38:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6259:38:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6310:155:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6446:12:2"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6460:4:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6318:127:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6318:147:2"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "6310:4:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6486:11:2",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "6493:4:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6486:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingSummary_$359_memory_ptr_to_t_struct$_StakingSummary_$359_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5916:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5923:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5932:3:2",
														"type": ""
													}
												],
												"src": "5801:702:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6669:237:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6679:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6691:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6702:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6687:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6687:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6679:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6726:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6737:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6722:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6722:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6745:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6751:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6741:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6741:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6715:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6715:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6715:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6771:128:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6885:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6894:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingSummary_$359_memory_ptr_to_t_struct$_StakingSummary_$359_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6779:105:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:120:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6771:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$359_memory_ptr__to_t_struct$_StakingSummary_$359_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6641:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6653:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6664:4:2",
														"type": ""
													}
												],
												"src": "6509:397:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6940:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6957:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6960:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6950:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6950:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6950:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7054:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7057:4:2",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7047:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7047:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7047:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7078:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7081:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7071:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7071:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7071:15:2"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6912:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7126:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7143:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7146:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7136:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7136:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7136:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7240:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7243:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7233:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7233:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7233:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7264:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7267:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7257:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7257:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7257:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7098:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7329:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7339:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7362:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7344:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7344:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7339:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7373:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7396:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7378:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7378:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7373:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7420:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7422:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7422:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7422:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7414:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7417:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7411:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7411:8:2"
															},
															"nodeType": "YulIf",
															"src": "7408:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7452:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7464:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7467:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7460:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7315:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7318:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7324:4:2",
														"type": ""
													}
												],
												"src": "7284:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7577:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7594:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7599:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7587:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7587:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7587:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7615:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7634:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7639:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7630:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7630:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7615:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7549:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7554:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7565:11:2",
														"type": ""
													}
												],
												"src": "7481:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7762:128:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7784:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7792:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7780:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7780:14:2"
																	},
																	{
																		"hexValue": "5374616b61626c653a2054686973206164647265737320646f6573206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7796:34:2",
																		"type": "",
																		"value": "Stakable: This address does not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7773:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7773:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7773:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7852:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7860:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7848:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7848:15:2"
																	},
																	{
																		"hexValue": "6861766520616e79207374616b6573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7865:17:2",
																		"type": "",
																		"value": "have any stakes"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7841:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7841:42:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7841:42:2"
														}
													]
												},
												"name": "store_literal_in_memory_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7754:6:2",
														"type": ""
													}
												],
												"src": "7656:234:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8042:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8052:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8118:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8123:2:2",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8059:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8059:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8052:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8224:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337",
																	"nodeType": "YulIdentifier",
																	"src": "8135:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8135:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8135:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8237:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8248:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8253:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8244:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8244:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8237:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8030:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8038:3:2",
														"type": ""
													}
												],
												"src": "7896:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8439:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8449:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8461:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8472:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8457:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8457:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8449:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8496:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8507:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8492:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8492:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8515:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8521:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8511:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8511:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8485:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8485:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8485:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8541:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8675:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8549:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8549:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8541:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8419:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8434:4:2",
														"type": ""
													}
												],
												"src": "8268:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8737:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8747:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8770:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8752:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8752:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8747:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8781:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8804:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8786:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8786:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8781:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8944:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8946:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8946:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8946:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8865:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8940:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8868:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8868:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8862:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8862:81:2"
															},
															"nodeType": "YulIf",
															"src": "8859:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8976:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8987:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8990:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8983:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8983:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8976:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8724:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8727:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8733:3:2",
														"type": ""
													}
												],
												"src": "8693:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9052:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9062:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9085:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9067:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9062:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9096:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9119:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9101:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9101:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9096:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9294:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9296:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9296:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9296:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9206:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9199:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9199:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9192:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9192:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9214:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9221:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9289:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9217:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9217:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9211:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9211:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9188:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:105:2"
															},
															"nodeType": "YulIf",
															"src": "9185:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9326:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9341:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9344:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9337:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9326:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9035:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9038:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9044:7:2",
														"type": ""
													}
												],
												"src": "9004:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9386:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9403:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9406:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9396:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9396:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9396:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9500:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9503:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9493:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9493:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9493:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9524:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9527:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9517:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9517:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9517:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9358:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9586:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9596:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9619:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9601:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9601:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9596:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9630:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9653:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9635:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9635:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9630:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9677:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9679:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9679:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9679:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9674:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9667:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9667:9:2"
															},
															"nodeType": "YulIf",
															"src": "9664:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9709:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9718:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9721:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9714:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9714:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9709:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9575:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9578:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9584:1:2",
														"type": ""
													}
												],
												"src": "9544:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9841:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9863:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9871:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9859:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9859:14:2"
																	},
																	{
																		"hexValue": "5374616b61626c653a204572726f722074696d657374616d702030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9875:29:2",
																		"type": "",
																		"value": "Stakable: Error timestamp 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9852:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9852:53:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9852:53:2"
														}
													]
												},
												"name": "store_literal_in_memory_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9833:6:2",
														"type": ""
													}
												],
												"src": "9735:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10064:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10074:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10140:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10145:2:2",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10081:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10081:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10074:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10246:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd",
																	"nodeType": "YulIdentifier",
																	"src": "10157:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10157:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10259:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10270:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10266:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10266:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10259:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10052:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10060:3:2",
														"type": ""
													}
												],
												"src": "9918:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10461:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10471:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10483:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10494:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10479:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10479:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10471:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10518:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10529:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10514:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10514:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10537:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10543:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10533:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10533:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10507:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10507:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10507:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10563:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10697:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10571:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10571:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10563:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10441:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10456:4:2",
														"type": ""
													}
												],
												"src": "10290:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10774:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10785:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10801:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10795:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10795:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10785:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10757:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10767:6:2",
														"type": ""
													}
												],
												"src": "10715:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10869:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10879:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10888:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10883:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10948:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10973:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10978:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10969:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10969:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10992:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10997:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10988:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10988:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10982:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10982:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10962:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10962:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10962:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10909:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10912:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10906:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10906:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10920:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10922:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10931:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10934:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10927:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10927:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10922:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10902:3:2",
																"statements": []
															},
															"src": "10898:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11045:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11095:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11100:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11091:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11091:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11109:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11084:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11084:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11084:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11026:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11029:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11023:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11023:13:2"
															},
															"nodeType": "YulIf",
															"src": "11020:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10851:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10856:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10861:6:2",
														"type": ""
													}
												],
												"src": "10820:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11181:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11191:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11209:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11216:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11205:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11205:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11225:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11221:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11221:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11201:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11201:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11191:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11164:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11174:6:2",
														"type": ""
													}
												],
												"src": "11133:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11333:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11343:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11390:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11357:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11357:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11347:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11405:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11471:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11476:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11412:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11412:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11405:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11518:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11525:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11514:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11514:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11532:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11537:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11492:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11492:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11492:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11553:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11564:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11591:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11569:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11569:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11560:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11560:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11553:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11314:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11321:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11329:3:2",
														"type": ""
													}
												],
												"src": "11241:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11729:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11739:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11751:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11762:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11747:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11747:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11739:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11786:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11797:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11782:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11782:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11805:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11811:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11801:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11801:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11775:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11775:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11775:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11831:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11903:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11912:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11839:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11839:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11831:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11701:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11713:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11724:4:2",
														"type": ""
													}
												],
												"src": "11611:313:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Stakable.Stake -> struct Stakable.Stake\n    function abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // rewardAPY\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // releaseTime\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Stakable.Stake[] -> struct Stakable.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct Stakable.StakingSummary -> struct Stakable.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$359_memory_ptr_to_t_struct$_StakingSummary_$359_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stakes\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$359_memory_ptr__to_t_struct$_StakingSummary_$359_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_StakingSummary_$359_memory_ptr_to_t_struct$_StakingSummary_$359_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stakable: This address does not \")\n\n        mstore(add(memPtr, 32), \"have any stakes\")\n\n    }\n\n    function abi_encode_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stakable: Error timestamp 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80633892010214610046578063b09d4b4e14610076578063e73e14bf146100a6575b600080fd5b610060600480360381019061005b9190610718565b6100d6565b60405161006d9190610767565b60405180910390f35b610090600480360381019061008b9190610782565b61011b565b60405161009d9190610934565b60405180910390f35b6100c060048036038101906100bb9190610782565b610287565b6040516100cd9190610934565b60405180910390f35b6000806100e28361011b565b9050806020015184815181106100fb576100fa610956565b5b6020026020010151604001514261011291906109b4565b91505092915050565b610123610665565b60006040518060400160405280600081526020016001600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061018a57610189610956565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b8282101561027557838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050815260200190600101906101bb565b50505050815250905080915050919050565b61028f610665565b6000806040518060400160405280600081526020016001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106102f7576102f6610956565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b828210156103e257838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152505081526020019060010190610328565b50505050815250905060008160200151511415610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90610a6b565b60405180910390fd5b60005b8160200151518110156104ff576000610490836020015183815181106104605761045f610956565b5b60200260200101518460200151848151811061047f5761047e610956565b5b602002602001015160200151610514565b905080836020015183815181106104aa576104a9610956565b5b60200260200101516060018181525050826020015182815181106104d1576104d0610956565b5b602002602001015160200151846104e89190610a8b565b9350506001816104f89190610a8b565b9050610437565b50818160000181815250508092505050919050565b6000808360200151141561052b576000905061056b565b6a52b7d2dcc80cd2e40000006105448460400151610571565b8460800151846105549190610ae1565b61055e9190610ae1565b6105689190610b6a565b90505b92915050565b60008082116105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac90610be7565b60405180910390fd5b6105fc69d3c21bcecceda100000083426105cf91906109b4565b6105d99190610ae1565b6301e13380604051806060016040528060278152602001610cb260279139610603565b9050919050565b6000808311829061064a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106419190610c8f565b60405180910390fd5b5082848161065b5761065a610b3b565b5b0490509392505050565b604051806040016040528060008152602001606081525090565b600080fd5b6000819050919050565b61069781610684565b81146106a257600080fd5b50565b6000813590506106b48161068e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106e5826106ba565b9050919050565b6106f5816106da565b811461070057600080fd5b50565b600081359050610712816106ec565b92915050565b6000806040838503121561072f5761072e61067f565b5b600061073d858286016106a5565b925050602061074e85828601610703565b9150509250929050565b61076181610684565b82525050565b600060208201905061077c6000830184610758565b92915050565b6000602082840312156107985761079761067f565b5b60006107a684828501610703565b91505092915050565b6107b881610684565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107f3816106da565b82525050565b60c08201600082015161080f60008501826107ea565b50602082015161082260208501826107af565b50604082015161083560408501826107af565b50606082015161084860608501826107af565b50608082015161085b60808501826107af565b5060a082015161086e60a08501826107af565b50505050565b600061088083836107f9565b60c08301905092915050565b6000602082019050919050565b60006108a4826107be565b6108ae81856107c9565b93506108b9836107da565b8060005b838110156108ea5781516108d18882610874565b97506108dc8361088c565b9250506001810190506108bd565b5085935050505092915050565b600060408301600083015161090f60008601826107af565b50602083015184820360208601526109278282610899565b9150508091505092915050565b6000602082019050818103600083015261094e81846108f7565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bf82610684565b91506109ca83610684565b9250828210156109dd576109dc610985565b5b828203905092915050565b600082825260208201905092915050565b7f5374616b61626c653a2054686973206164647265737320646f6573206e6f742060008201527f6861766520616e79207374616b65730000000000000000000000000000000000602082015250565b6000610a55602f836109e8565b9150610a60826109f9565b604082019050919050565b60006020820190508181036000830152610a8481610a48565b9050919050565b6000610a9682610684565b9150610aa183610684565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ad657610ad5610985565b5b828201905092915050565b6000610aec82610684565b9150610af783610684565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3057610b2f610985565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7582610684565b9150610b8083610684565b925082610b9057610b8f610b3b565b5b828204905092915050565b7f5374616b61626c653a204572726f722074696d657374616d7020300000000000600082015250565b6000610bd1601b836109e8565b9150610bdc82610b9b565b602082019050919050565b60006020820190508181036000830152610c0081610bc4565b9050919050565b600081519050919050565b60005b83811015610c30578082015181840152602081019050610c15565b83811115610c3f576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c6182610c07565b610c6b81856109e8565b9350610c7b818560208601610c12565b610c8481610c45565b840191505092915050565b60006020820190508181036000830152610ca98184610c56565b90509291505056fe5374616b61626c653a204572726f722063616e6e6f74206469766964652074696d657374616d70a264697066735822122030133e81ad8a9aeb64115a9fd3276d7a3f598f28b40afab9122eb79b8a4d6dcf64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38920102 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xB09D4B4E EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x782 JUMP JUMPDEST PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x782 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE2 DUP4 PUSH2 0x11B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xFB JUMPI PUSH2 0xFA PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x9B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x123 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x18A JUMPI PUSH2 0x189 PUSH2 0x956 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x275 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F PUSH2 0x665 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2F7 JUMPI PUSH2 0x2F6 PUSH2 0x956 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3E2 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x328 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD MLOAD EQ ISZERO PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42B SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 PUSH2 0x490 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x460 JUMPI PUSH2 0x45F PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x47F JUMPI PUSH2 0x47E PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x514 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4AA JUMPI PUSH2 0x4A9 PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x1 DUP2 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST SWAP1 POP PUSH2 0x437 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x56B JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x544 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x571 JUMP JUMPDEST DUP5 PUSH1 0x80 ADD MLOAD DUP5 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x55E SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x568 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FC PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCB2 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x641 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x65B JUMPI PUSH2 0x65A PUSH2 0xB3B JUMP JUMPDEST JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x697 DUP2 PUSH2 0x684 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B4 DUP2 PUSH2 0x68E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 DUP3 PUSH2 0x6BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F5 DUP2 PUSH2 0x6DA JUMP JUMPDEST DUP2 EQ PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x712 DUP2 PUSH2 0x6EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH2 0x72E PUSH2 0x67F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x73D DUP6 DUP3 DUP7 ADD PUSH2 0x6A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x74E DUP6 DUP3 DUP7 ADD PUSH2 0x703 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x761 DUP2 PUSH2 0x684 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x77C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x758 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x798 JUMPI PUSH2 0x797 PUSH2 0x67F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7A6 DUP5 DUP3 DUP6 ADD PUSH2 0x703 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B8 DUP2 PUSH2 0x684 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F3 DUP2 PUSH2 0x6DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x80F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x7EA JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x822 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x835 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x848 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x85B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x86E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x880 DUP4 DUP4 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A4 DUP3 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x8AE DUP2 DUP6 PUSH2 0x7C9 JUMP JUMPDEST SWAP4 POP PUSH2 0x8B9 DUP4 PUSH2 0x7DA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8EA JUMPI DUP2 MLOAD PUSH2 0x8D1 DUP9 DUP3 PUSH2 0x874 JUMP JUMPDEST SWAP8 POP PUSH2 0x8DC DUP4 PUSH2 0x88C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8BD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x90F PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x7AF JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x927 DUP3 DUP3 PUSH2 0x899 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x94E DUP2 DUP5 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9BF DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP2 POP PUSH2 0x9CA DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x9DD JUMPI PUSH2 0x9DC PUSH2 0x985 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B61626C653A2054686973206164647265737320646F6573206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6861766520616E79207374616B65730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA55 PUSH1 0x2F DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA60 DUP3 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA84 DUP2 PUSH2 0xA48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA96 DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA1 DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xAD6 JUMPI PUSH2 0xAD5 PUSH2 0x985 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEC DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF7 DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0x985 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB75 DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP2 POP PUSH2 0xB80 DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB90 JUMPI PUSH2 0xB8F PUSH2 0xB3B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B61626C653A204572726F722074696D657374616D7020300000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD1 PUSH1 0x1B DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xBDC DUP3 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC00 DUP2 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC30 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC15 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xC3F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 DUP3 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xC6B DUP2 DUP6 PUSH2 0x9E8 JUMP JUMPDEST SWAP4 POP PUSH2 0xC7B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH2 0xC84 DUP2 PUSH2 0xC45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCA9 DUP2 DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH21 0x616B61626C653A204572726F722063616E6E6F7420 PUSH5 0x6976696465 KECCAK256 PUSH21 0x696D657374616D70A264697066735822122030133E DUP2 0xAD DUP11 SWAP11 0xEB PUSH5 0x115A9FD327 PUSH14 0x7A3F598F28B40AFAB9122EB79B8A 0x4D PUSH14 0xCF64736F6C634300080B00330000 ",
							"sourceMap": "128:11184:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5030:262;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6080:289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10428:881;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5030:262;5140:7;5165:29;5197:19;5210:5;5197:12;:19::i;:::-;5165:51;;5255:7;:14;;;5270:6;5255:22;;;;;;;;:::i;:::-;;;;;;;;:28;;;5237:15;:46;;;;:::i;:::-;5229:55;;;5030:262;;;;:::o;6080:289::-;6165:21;;:::i;:::-;6204:29;6236:98;;;;;;;;6265:1;6236:98;;;;6281:12;6294:6;:13;6301:5;6294:13;;;;;;;;;;;;;;;;6281:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:42;;6236:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6204:130;;6354:7;6347:14;;;6080:289;;;:::o;10428:881::-;10511:21;;:::i;:::-;10550:24;10587:29;10619:100;;;;;;;;10648:1;10619:100;;;;10664:12;10677:6;:15;10684:7;10677:15;;;;;;;;;;;;;;;;10664:29;;;;;;;;:::i;:::-;;;;;;;;;;;;:44;;10619:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10587:132;;10777:1;10752:7;:14;;;:21;:26;;10730:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;10871:9;10866:359;10890:7;:14;;;:21;10886:1;:25;10866:359;;;10936:23;10962:114;11001:7;:14;;;11016:1;11001:17;;;;;;;;:::i;:::-;;;;;;;;11037:7;:14;;;11052:1;11037:17;;;;;;;;:::i;:::-;;;;;;;;:24;;;10962:20;:114::i;:::-;10936:140;;11121:15;11091:7;:14;;;11106:1;11091:17;;;;;;;;:::i;:::-;;;;;;;;:27;;:45;;;;;11189:7;:14;;;11204:1;11189:17;;;;;;;;:::i;:::-;;;;;;;;:24;;;11170:16;:43;;;;:::i;:::-;11151:62;;10921:304;10918:1;10913:6;;;;;:::i;:::-;;;10866:359;;;;11260:16;11237:7;:20;;:39;;;;;11294:7;11287:14;;;;10428:881;;;:::o;5688:384::-;5814:7;5868:1;5843:14;:21;;;:26;5839:67;;;5893:1;5886:8;;;;5839:67;6060:4;6010:46;6035:14;:20;;;6010:24;:46::i;:::-;5966:14;:24;;;5939:7;:51;;;;:::i;:::-;:117;;;;:::i;:::-;5938:126;;;;:::i;:::-;5918:146;;5688:384;;;;;:::o;5300:380::-;5400:7;5442:1;5433:6;:10;5425:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;5506:166;5566:4;5556:6;5538:15;:24;;;;:::i;:::-;5537:33;;;;:::i;:::-;5589:8;5506:166;;;;;;;;;;;;;;;;;:12;:166::i;:::-;5486:186;;5300:380;;;:::o;5660:230:0:-;5776:7;5831:1;5827;:5;5834:12;5819:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5872:1;5868;:5;;;;;:::i;:::-;;;5861:12;;5660:230;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:108::-;2441:24;2459:5;2441:24;:::i;:::-;2436:3;2429:37;2364:108;;:::o;2478:136::-;2567:6;2601:5;2595:12;2585:22;;2478:136;;;:::o;2620:196::-;2731:11;2765:6;2760:3;2753:19;2805:4;2800:3;2796:14;2781:29;;2620:196;;;;:::o;2822:154::-;2911:4;2934:3;2926:11;;2964:4;2959:3;2955:14;2947:22;;2822:154;;;:::o;2982:108::-;3059:24;3077:5;3059:24;:::i;:::-;3054:3;3047:37;2982:108;;:::o;3150:1207::-;3281:4;3276:3;3272:14;3368:4;3361:5;3357:16;3351:23;3387:63;3444:4;3439:3;3435:14;3421:12;3387:63;:::i;:::-;3296:164;3544:4;3537:5;3533:16;3527:23;3563:63;3620:4;3615:3;3611:14;3597:12;3563:63;:::i;:::-;3470:166;3719:4;3712:5;3708:16;3702:23;3738:63;3795:4;3790:3;3786:14;3772:12;3738:63;:::i;:::-;3646:165;3898:4;3891:5;3887:16;3881:23;3917:63;3974:4;3969:3;3965:14;3951:12;3917:63;:::i;:::-;3821:169;4077:4;4070:5;4066:16;4060:23;4096:63;4153:4;4148:3;4144:14;4130:12;4096:63;:::i;:::-;4000:169;4258:4;4251:5;4247:16;4241:23;4277:63;4334:4;4329:3;4325:14;4311:12;4277:63;:::i;:::-;4179:171;3250:1107;3150:1207;;:::o;4363:267::-;4476:10;4497:90;4583:3;4575:6;4497:90;:::i;:::-;4619:4;4614:3;4610:14;4596:28;;4363:267;;;;:::o;4636:135::-;4728:4;4760;4755:3;4751:14;4743:22;;4636:135;;;:::o;4835:888::-;4988:3;5017:76;5087:5;5017:76;:::i;:::-;5109:98;5200:6;5195:3;5109:98;:::i;:::-;5102:105;;5231:78;5303:5;5231:78;:::i;:::-;5332:7;5363:1;5348:350;5373:6;5370:1;5367:13;5348:350;;;5449:6;5443:13;5476:107;5579:3;5564:13;5476:107;:::i;:::-;5469:114;;5606:82;5681:6;5606:82;:::i;:::-;5596:92;;5408:290;5395:1;5392;5388:9;5383:14;;5348:350;;;5352:14;5714:3;5707:10;;4993:730;;;4835:888;;;;:::o;5801:702::-;5932:3;5968:4;5963:3;5959:14;6063:4;6056:5;6052:16;6046:23;6082:63;6139:4;6134:3;6130:14;6116:12;6082:63;:::i;:::-;5983:172;6239:4;6232:5;6228:16;6222:23;6292:3;6286:4;6282:14;6275:4;6270:3;6266:14;6259:38;6318:147;6460:4;6446:12;6318:147;:::i;:::-;6310:155;;6165:311;6493:4;6486:11;;5937:566;5801:702;;;;:::o;6509:397::-;6664:4;6702:2;6691:9;6687:18;6679:26;;6751:9;6745:4;6741:20;6737:1;6726:9;6722:17;6715:47;6779:120;6894:4;6885:6;6779:120;:::i;:::-;6771:128;;6509:397;;;;:::o;6912:180::-;6960:77;6957:1;6950:88;7057:4;7054:1;7047:15;7081:4;7078:1;7071:15;7098:180;7146:77;7143:1;7136:88;7243:4;7240:1;7233:15;7267:4;7264:1;7257:15;7284:191;7324:4;7344:20;7362:1;7344:20;:::i;:::-;7339:25;;7378:20;7396:1;7378:20;:::i;:::-;7373:25;;7417:1;7414;7411:8;7408:34;;;7422:18;;:::i;:::-;7408:34;7467:1;7464;7460:9;7452:17;;7284:191;;;;:::o;7481:169::-;7565:11;7599:6;7594:3;7587:19;7639:4;7634:3;7630:14;7615:29;;7481:169;;;;:::o;7656:234::-;7796:34;7792:1;7784:6;7780:14;7773:58;7865:17;7860:2;7852:6;7848:15;7841:42;7656:234;:::o;7896:366::-;8038:3;8059:67;8123:2;8118:3;8059:67;:::i;:::-;8052:74;;8135:93;8224:3;8135:93;:::i;:::-;8253:2;8248:3;8244:12;8237:19;;7896:366;;;:::o;8268:419::-;8434:4;8472:2;8461:9;8457:18;8449:26;;8521:9;8515:4;8511:20;8507:1;8496:9;8492:17;8485:47;8549:131;8675:4;8549:131;:::i;:::-;8541:139;;8268:419;;;:::o;8693:305::-;8733:3;8752:20;8770:1;8752:20;:::i;:::-;8747:25;;8786:20;8804:1;8786:20;:::i;:::-;8781:25;;8940:1;8872:66;8868:74;8865:1;8862:81;8859:107;;;8946:18;;:::i;:::-;8859:107;8990:1;8987;8983:9;8976:16;;8693:305;;;;:::o;9004:348::-;9044:7;9067:20;9085:1;9067:20;:::i;:::-;9062:25;;9101:20;9119:1;9101:20;:::i;:::-;9096:25;;9289:1;9221:66;9217:74;9214:1;9211:81;9206:1;9199:9;9192:17;9188:105;9185:131;;;9296:18;;:::i;:::-;9185:131;9344:1;9341;9337:9;9326:20;;9004:348;;;;:::o;9358:180::-;9406:77;9403:1;9396:88;9503:4;9500:1;9493:15;9527:4;9524:1;9517:15;9544:185;9584:1;9601:20;9619:1;9601:20;:::i;:::-;9596:25;;9635:20;9653:1;9635:20;:::i;:::-;9630:25;;9674:1;9664:35;;9679:18;;:::i;:::-;9664:35;9721:1;9718;9714:9;9709:14;;9544:185;;;;:::o;9735:177::-;9875:29;9871:1;9863:6;9859:14;9852:53;9735:177;:::o;9918:366::-;10060:3;10081:67;10145:2;10140:3;10081:67;:::i;:::-;10074:74;;10157:93;10246:3;10157:93;:::i;:::-;10275:2;10270:3;10266:12;10259:19;;9918:366;;;:::o;10290:419::-;10456:4;10494:2;10483:9;10479:18;10471:26;;10543:9;10537:4;10533:20;10529:1;10518:9;10514:17;10507:47;10571:131;10697:4;10571:131;:::i;:::-;10563:139;;10290:419;;;:::o;10715:99::-;10767:6;10801:5;10795:12;10785:22;;10715:99;;;:::o;10820:307::-;10888:1;10898:113;10912:6;10909:1;10906:13;10898:113;;;10997:1;10992:3;10988:11;10982:18;10978:1;10973:3;10969:11;10962:39;10934:2;10931:1;10927:10;10922:15;;10898:113;;;11029:6;11026:1;11023:13;11020:101;;;11109:1;11100:6;11095:3;11091:16;11084:27;11020:101;10869:258;10820:307;;;:::o;11133:102::-;11174:6;11225:2;11221:7;11216:2;11209:5;11205:14;11201:28;11191:38;;11133:102;;;:::o;11241:364::-;11329:3;11357:39;11390:5;11357:39;:::i;:::-;11412:71;11476:6;11471:3;11412:71;:::i;:::-;11405:78;;11492:52;11537:6;11532:3;11525:4;11518:5;11514:16;11492:52;:::i;:::-;11569:29;11591:6;11569:29;:::i;:::-;11564:3;11560:39;11553:46;;11333:272;11241:364;;;;:::o;11611:313::-;11724:4;11762:2;11751:9;11747:18;11739:26;;11811:9;11805:4;11801:20;11797:1;11786:9;11782:17;11775:47;11839:78;11912:4;11903:6;11839:78;:::i;:::-;11831:86;;11611:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "668400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"hasStake(address)": "infinite",
								"stakeSummary(address)": "infinite",
								"testCalculateDuration(uint256,address)": "infinite"
							},
							"internal": {
								"_addStakeholder(address)": "infinite",
								"_changePenaltyFee(uint256)": "infinite",
								"_stake(uint256,uint256,uint256)": "infinite",
								"_withdrawAllStake(uint256)": "infinite",
								"_withdrawStake(uint256,uint256)": "infinite",
								"calculateStakeReward(struct Stakable.Stake memory,uint256)": "infinite",
								"calculateStakingDuration(uint256)": "infinite",
								"calculateStakingWithPenalty(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 11312,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 486,
									"end": 498,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 505,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 486,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 505,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 577,
									"end": 592,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 559,
									"end": 574,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 592,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 559,
									"end": 592,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 559,
									"end": 592,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 559,
									"end": 592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 11312,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122030133e81ad8a9aeb64115a9fd3276d7a3f598f28b40afab9122eb79b8a4d6dcf64736f6c634300080b0033",
									".code": [
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "38920102"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "B09D4B4E"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "E73E14BF"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11312,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5210,
											"end": 5215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5197,
											"end": 5216,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5197,
											"end": 5216,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5197,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5255,
											"end": 5269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5269,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5255,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5255,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5252,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5237,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5237,
											"end": 5283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5237,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5237,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5284,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5292,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6293,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6294,
											"end": 6300,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6306,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6307,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6323,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6281,
											"end": 6323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6369,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10511,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 10511,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10511,
											"end": 10532,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10511,
											"end": 10532,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 10511,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10587,
											"end": 10616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10648,
											"end": 10649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10676,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10677,
											"end": 10683,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10684,
											"end": 10691,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10708,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10664,
											"end": 10708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10587,
											"end": 10719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10587,
											"end": 10719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10777,
											"end": 10778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10752,
											"end": 10759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10752,
											"end": 10766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10778,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10778,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 10730,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10871,
											"end": 10880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10866,
											"end": 11225,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 10866,
											"end": 11225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10904,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10890,
											"end": 10904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10904,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10886,
											"end": 10887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10886,
											"end": 10911,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 11225,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 11225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 10866,
											"end": 11225,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10962,
											"end": 11076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 11001,
											"end": 11008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11001,
											"end": 11015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11016,
											"end": 11017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11044,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11051,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11037,
											"end": 11051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11051,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11053,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11061,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11037,
											"end": 11061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11061,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10962,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 10962,
											"end": 11076,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10962,
											"end": 11076,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10962,
											"end": 11076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 11076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 11076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11121,
											"end": 11136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11091,
											"end": 11105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11118,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11091,
											"end": 11118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11203,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11189,
											"end": 11203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11189,
											"end": 11213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11213,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11170,
											"end": 11186,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11170,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 11170,
											"end": 11213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11170,
											"end": 11213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11170,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 11170,
											"end": 11213,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11170,
											"end": 11213,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 11170,
											"end": 11213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11151,
											"end": 11213,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11151,
											"end": 11213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 11225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10919,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 11225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 10866,
											"end": 11225,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 11225,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 10866,
											"end": 11225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 11225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11260,
											"end": 11276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11237,
											"end": 11257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11294,
											"end": 11301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11301,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11309,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5688,
											"end": 6072,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5688,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5864,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5843,
											"end": 5864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5864,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5869,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5839,
											"end": 5906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5893,
											"end": 5894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5886,
											"end": 5894,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5906,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5839,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6064,
											"name": "PUSH",
											"source": 1,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 6010,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6035,
											"end": 6049,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6010,
											"end": 6056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6010,
											"end": 6056,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6010,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5980,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5990,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5966,
											"end": 5990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5939,
											"end": 5990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5939,
											"end": 5990,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5939,
											"end": 5990,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5939,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5939,
											"end": 6056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5939,
											"end": 6056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5939,
											"end": 6056,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5939,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5938,
											"end": 6064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5938,
											"end": 6064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5938,
											"end": 6064,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5938,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 6072,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5688,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 6072,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 6072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 6072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 6072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 6072,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5300,
											"end": 5680,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5300,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5443,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5425,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "PUSH",
											"source": 1,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5553,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "1E13380"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "PUSH",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "PUSH data",
											"source": 1,
											"value": "10B867070097D898AE15CD1BC384E389B4A7D91F05C0759C198C193C7FD91787"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "PUSH",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5506,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5834,
											"end": 5846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 727,
											"end": 734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 756,
											"end": 810,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 745,
											"end": 810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 745,
											"end": 810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 822,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 822,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 859,
											"end": 866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 877,
											"end": 912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 877,
											"end": 912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 822,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 822,
											"end": 918,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2472,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2364,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2459,
											"end": 2464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2439,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2472,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2478,
											"end": 2614,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2478,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2607,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2614,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2620,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2620,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2763,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2809,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2816,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2822,
											"end": 2976,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2822,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2959,
											"end": 2962,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2822,
											"end": 2976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2822,
											"end": 2976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2822,
											"end": 2976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2822,
											"end": 2976,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2982,
											"end": 3090,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2982,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3077,
											"end": 3082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3090,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3090,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3090,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3150,
											"end": 4357,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3150,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3285,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 3276,
											"end": 3279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3444,
											"end": 3448,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3442,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3387,
											"end": 3450,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3450,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3387,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3548,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3537,
											"end": 3542,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3527,
											"end": 3550,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3620,
											"end": 3624,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3615,
											"end": 3618,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3563,
											"end": 3626,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3626,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3563,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3719,
											"end": 3723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3717,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3724,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3702,
											"end": 3725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3795,
											"end": 3799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3793,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3738,
											"end": 3801,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3738,
											"end": 3801,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3738,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3646,
											"end": 3811,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3898,
											"end": 3902,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3887,
											"end": 3903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3904,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3974,
											"end": 3978,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3969,
											"end": 3972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3965,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 3963,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3917,
											"end": 3980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3917,
											"end": 3980,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3917,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3821,
											"end": 3990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4070,
											"end": 4075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4083,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4153,
											"end": 4157,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4148,
											"end": 4151,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4144,
											"end": 4158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4096,
											"end": 4159,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4159,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4096,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4258,
											"end": 4262,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4241,
											"end": 4264,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4334,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 4329,
											"end": 4332,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4325,
											"end": 4339,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 4357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 4357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 4357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 4357,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4363,
											"end": 4630,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4363,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4497,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4583,
											"end": 4586,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4575,
											"end": 4581,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4497,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4497,
											"end": 4587,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4587,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4497,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 4614,
											"end": 4617,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4596,
											"end": 4624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4596,
											"end": 4624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4630,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4630,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4636,
											"end": 4771,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4636,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4755,
											"end": 4758,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 4765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4743,
											"end": 4765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4743,
											"end": 4765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4636,
											"end": 4771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4636,
											"end": 4771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4636,
											"end": 4771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4636,
											"end": 4771,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4835,
											"end": 5723,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4835,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4988,
											"end": 4991,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5087,
											"end": 5092,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5017,
											"end": 5093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5017,
											"end": 5093,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5017,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5109,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5200,
											"end": 5206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5198,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5109,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5109,
											"end": 5207,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5109,
											"end": 5207,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5109,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5207,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5308,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5231,
											"end": 5309,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5309,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5231,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5332,
											"end": 5339,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5698,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5348,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5380,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5348,
											"end": 5698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5348,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5348,
											"end": 5698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5449,
											"end": 5455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5579,
											"end": 5582,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5564,
											"end": 5577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5476,
											"end": 5583,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5476,
											"end": 5583,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5476,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5469,
											"end": 5583,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 5469,
											"end": 5583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5606,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5681,
											"end": 5687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5606,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5606,
											"end": 5688,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5606,
											"end": 5688,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5606,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 5688,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 5688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5408,
											"end": 5698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5392,
											"end": 5393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5348,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5348,
											"end": 5698,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5348,
											"end": 5698,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5348,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5352,
											"end": 5366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5714,
											"end": 5717,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5717,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4993,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4993,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4993,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4835,
											"end": 5723,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4835,
											"end": 5723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4835,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4835,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4835,
											"end": 5723,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5801,
											"end": 6503,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5801,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5963,
											"end": 5966,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5959,
											"end": 5973,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6063,
											"end": 6067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6056,
											"end": 6061,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6046,
											"end": 6069,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6082,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6139,
											"end": 6143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6137,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6130,
											"end": 6144,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6082,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6082,
											"end": 6145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6082,
											"end": 6145,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6082,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5983,
											"end": 6155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6239,
											"end": 6243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6237,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6228,
											"end": 6244,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6222,
											"end": 6245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6295,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6290,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6282,
											"end": 6296,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6275,
											"end": 6279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6270,
											"end": 6273,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6259,
											"end": 6297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6318,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6460,
											"end": 6464,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6446,
											"end": 6458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6318,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 6318,
											"end": 6465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6318,
											"end": 6465,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6318,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6486,
											"end": 6497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6486,
											"end": 6497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5937,
											"end": 6503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 6503,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 6503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 6503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 6503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 6503,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6509,
											"end": 6906,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 6509,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6702,
											"end": 6704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6691,
											"end": 6700,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6687,
											"end": 6705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6751,
											"end": 6760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6745,
											"end": 6749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6741,
											"end": 6761,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6735,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6739,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6715,
											"end": 6762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6894,
											"end": 6898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6885,
											"end": 6891,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 6779,
											"end": 6899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6779,
											"end": 6899,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6779,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6771,
											"end": 6899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6771,
											"end": 6899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6906,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6906,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6912,
											"end": 7092,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6912,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6960,
											"end": 7037,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6957,
											"end": 6958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6950,
											"end": 7038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7057,
											"end": 7061,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 7054,
											"end": 7055,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7047,
											"end": 7062,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7081,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7078,
											"end": 7079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7071,
											"end": 7086,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7278,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7098,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7223,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7143,
											"end": 7144,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7243,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 7240,
											"end": 7241,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7233,
											"end": 7248,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7271,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7264,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7272,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7475,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7284,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7362,
											"end": 7363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 7344,
											"end": 7364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7344,
											"end": 7364,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7344,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 7396,
											"end": 7397,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 7378,
											"end": 7398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7378,
											"end": 7398,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 7378,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7398,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7417,
											"end": 7418,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7414,
											"end": 7415,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7419,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7408,
											"end": 7442,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7408,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7408,
											"end": 7442,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7422,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7422,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7422,
											"end": 7440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7422,
											"end": 7440,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7422,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7408,
											"end": 7442,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7408,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7464,
											"end": 7465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7460,
											"end": 7469,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7452,
											"end": 7469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7452,
											"end": 7469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7475,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7475,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7475,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7481,
											"end": 7650,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 7481,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7565,
											"end": 7576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7605,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7594,
											"end": 7597,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7587,
											"end": 7606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7634,
											"end": 7637,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7615,
											"end": 7644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7615,
											"end": 7644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7481,
											"end": 7650,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7481,
											"end": 7650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7481,
											"end": 7650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7481,
											"end": 7650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7481,
											"end": 7650,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7656,
											"end": 7890,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 7656,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7796,
											"end": 7830,
											"name": "PUSH",
											"source": 2,
											"value": "5374616B61626C653A2054686973206164647265737320646F6573206E6F7420"
										},
										{
											"begin": 7792,
											"end": 7793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7780,
											"end": 7794,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7865,
											"end": 7882,
											"name": "PUSH",
											"source": 2,
											"value": "6861766520616E79207374616B65730000000000000000000000000000000000"
										},
										{
											"begin": 7860,
											"end": 7862,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7852,
											"end": 7858,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7863,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7841,
											"end": 7883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7890,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7896,
											"end": 8262,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 7896,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8038,
											"end": 8041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 8123,
											"end": 8125,
											"name": "PUSH",
											"source": 2,
											"value": "2F"
										},
										{
											"begin": 8118,
											"end": 8121,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8059,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 8059,
											"end": 8126,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8059,
											"end": 8126,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 8059,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8052,
											"end": 8126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8052,
											"end": 8126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8135,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8224,
											"end": 8227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8135,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 8135,
											"end": 8228,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8135,
											"end": 8228,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8135,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8248,
											"end": 8251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8244,
											"end": 8256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 8262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 8262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 8262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 8262,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8268,
											"end": 8687,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 8268,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8434,
											"end": 8438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8472,
											"end": 8474,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8449,
											"end": 8475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8449,
											"end": 8475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8521,
											"end": 8530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8515,
											"end": 8519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8511,
											"end": 8531,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8507,
											"end": 8508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8496,
											"end": 8505,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8492,
											"end": 8509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8485,
											"end": 8532,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8549,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 8675,
											"end": 8679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8549,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 8549,
											"end": 8680,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8549,
											"end": 8680,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 8549,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8541,
											"end": 8680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8541,
											"end": 8680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8268,
											"end": 8687,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8268,
											"end": 8687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8268,
											"end": 8687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8268,
											"end": 8687,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8693,
											"end": 8998,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 8693,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8733,
											"end": 8736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8752,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 8770,
											"end": 8771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8752,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 8752,
											"end": 8772,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8752,
											"end": 8772,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 8752,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8786,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 8804,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8786,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 8786,
											"end": 8806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8786,
											"end": 8806,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 8786,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8781,
											"end": 8806,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8781,
											"end": 8806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8940,
											"end": 8941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8872,
											"end": 8938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8868,
											"end": 8942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8865,
											"end": 8866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8862,
											"end": 8943,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8859,
											"end": 8966,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8859,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8859,
											"end": 8966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8859,
											"end": 8966,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8859,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8987,
											"end": 8988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8983,
											"end": 8992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8976,
											"end": 8992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8976,
											"end": 8992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8693,
											"end": 8998,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8693,
											"end": 8998,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8693,
											"end": 8998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8693,
											"end": 8998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8693,
											"end": 8998,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9004,
											"end": 9352,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 9004,
											"end": 9352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9044,
											"end": 9051,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9067,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 9085,
											"end": 9086,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9067,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 9067,
											"end": 9087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9067,
											"end": 9087,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 9067,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9062,
											"end": 9087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9062,
											"end": 9087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9096,
											"end": 9121,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9096,
											"end": 9121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9289,
											"end": 9290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9217,
											"end": 9291,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9211,
											"end": 9292,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9206,
											"end": 9207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9199,
											"end": 9208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9192,
											"end": 9209,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9188,
											"end": 9293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9185,
											"end": 9316,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9185,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9185,
											"end": 9316,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9296,
											"end": 9314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 9296,
											"end": 9314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 9296,
											"end": 9314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9296,
											"end": 9314,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 9296,
											"end": 9314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9185,
											"end": 9316,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9185,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9344,
											"end": 9345,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9337,
											"end": 9346,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9326,
											"end": 9346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9326,
											"end": 9346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9352,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9352,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9358,
											"end": 9538,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 9358,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9483,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9403,
											"end": 9404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9396,
											"end": 9484,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9503,
											"end": 9507,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9527,
											"end": 9531,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9524,
											"end": 9525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9532,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9544,
											"end": 9729,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 9544,
											"end": 9729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9584,
											"end": 9585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9601,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9619,
											"end": 9620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 9601,
											"end": 9621,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9601,
											"end": 9621,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9601,
											"end": 9621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9635,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 9653,
											"end": 9654,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9635,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 9635,
											"end": 9655,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9635,
											"end": 9655,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 9635,
											"end": 9655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9630,
											"end": 9655,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9630,
											"end": 9655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9674,
											"end": 9675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 9664,
											"end": 9699,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9679,
											"end": 9697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 9679,
											"end": 9697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 9679,
											"end": 9697,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9679,
											"end": 9697,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 9679,
											"end": 9697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9699,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 9664,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9721,
											"end": 9722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9718,
											"end": 9719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9714,
											"end": 9723,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 9709,
											"end": 9723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9709,
											"end": 9723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9544,
											"end": 9729,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9544,
											"end": 9729,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9544,
											"end": 9729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9544,
											"end": 9729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9544,
											"end": 9729,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9735,
											"end": 9912,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 9735,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9875,
											"end": 9904,
											"name": "PUSH",
											"source": 2,
											"value": "5374616B61626C653A204572726F722074696D657374616D7020300000000000"
										},
										{
											"begin": 9871,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9863,
											"end": 9869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9852,
											"end": 9905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9735,
											"end": 9912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9735,
											"end": 9912,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10060,
											"end": 10063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 10145,
											"end": 10147,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 10140,
											"end": 10143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10074,
											"end": 10148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10074,
											"end": 10148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 10246,
											"end": 10249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10275,
											"end": 10277,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10270,
											"end": 10273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10259,
											"end": 10278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10259,
											"end": 10278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10456,
											"end": 10460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10494,
											"end": 10496,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10483,
											"end": 10492,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10479,
											"end": 10497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10471,
											"end": 10497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10471,
											"end": 10497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10543,
											"end": 10552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10537,
											"end": 10541,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10533,
											"end": 10553,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10529,
											"end": 10530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10531,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10507,
											"end": 10554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10697,
											"end": 10701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10563,
											"end": 10702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10563,
											"end": 10702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10715,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 10715,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10767,
											"end": 10773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10801,
											"end": 10806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10795,
											"end": 10807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10785,
											"end": 10807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10785,
											"end": 10807,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10814,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10814,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10820,
											"end": 11127,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10820,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10888,
											"end": 10889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10898,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10898,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10909,
											"end": 10910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10898,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10898,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10898,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10997,
											"end": 10998,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 10999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10982,
											"end": 11000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10978,
											"end": 10979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 10976,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10969,
											"end": 10980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10962,
											"end": 11001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10934,
											"end": 10936,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10931,
											"end": 10932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10898,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10898,
											"end": 11011,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10898,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10898,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11029,
											"end": 11035,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11026,
											"end": 11027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11023,
											"end": 11036,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11020,
											"end": 11121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11020,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11020,
											"end": 11121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11100,
											"end": 11106,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11095,
											"end": 11098,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11091,
											"end": 11107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11084,
											"end": 11111,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11020,
											"end": 11121,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11020,
											"end": 11121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10869,
											"end": 11127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 11127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 11127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 11127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 11127,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11133,
											"end": 11235,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 11133,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11174,
											"end": 11180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11225,
											"end": 11227,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11221,
											"end": 11228,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11216,
											"end": 11218,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11209,
											"end": 11214,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11229,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11191,
											"end": 11229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11191,
											"end": 11229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11133,
											"end": 11235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11133,
											"end": 11235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11133,
											"end": 11235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11133,
											"end": 11235,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11241,
											"end": 11605,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11241,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11329,
											"end": 11332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 11390,
											"end": 11395,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11357,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 11357,
											"end": 11396,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11357,
											"end": 11396,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 11357,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 11476,
											"end": 11482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11471,
											"end": 11474,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 11412,
											"end": 11483,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11412,
											"end": 11483,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 11412,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11405,
											"end": 11483,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11405,
											"end": 11483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11492,
											"end": 11544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 11537,
											"end": 11543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11532,
											"end": 11535,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11525,
											"end": 11529,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11518,
											"end": 11523,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11514,
											"end": 11530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11492,
											"end": 11544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11492,
											"end": 11544,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11492,
											"end": 11544,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 11492,
											"end": 11544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11569,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 11591,
											"end": 11597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11569,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 11569,
											"end": 11598,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11569,
											"end": 11598,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 11569,
											"end": 11598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11567,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11560,
											"end": 11599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11553,
											"end": 11599,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11553,
											"end": 11599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11333,
											"end": 11605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11241,
											"end": 11605,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11241,
											"end": 11605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11241,
											"end": 11605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11241,
											"end": 11605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11241,
											"end": 11605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11611,
											"end": 11924,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 11611,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11724,
											"end": 11728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11762,
											"end": 11764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11751,
											"end": 11760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11747,
											"end": 11765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11811,
											"end": 11820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11805,
											"end": 11809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11801,
											"end": 11821,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11797,
											"end": 11798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11786,
											"end": 11795,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11782,
											"end": 11799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11775,
											"end": 11822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11839,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 11912,
											"end": 11916,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11903,
											"end": 11909,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11839,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11839,
											"end": 11917,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11839,
											"end": 11917,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 11839,
											"end": 11917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11831,
											"end": 11917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11831,
											"end": 11917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11924,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11924,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"10B867070097D898AE15CD1BC384E389B4A7D91F05C0759C198C193C7FD91787": "5374616b61626c653a204572726f722063616e6e6f74206469766964652074696d657374616d70"
									}
								}
							}
						},
						"methodIdentifiers": {
							"hasStake(address)": "e73e14bf",
							"stakeSummary(address)": "b09d4b4e",
							"testCalculateDuration(uint256,address)": "38920102"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakingPenalty_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake[]\",\"name\":\"stakes\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"stakeSummary\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake[]\",\"name\":\"stakes\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"testCalculateDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakable.sol\":\"Stakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Stakable.sol\":{\"keccak256\":\"0x51370457dcb6211e0c3edba4bcbc7f8f97b45285523268322d05764fa7a33928\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e99d8e984f5c9f7bb6c137d28a6d7a02ba738f3c5d5b2cecb9a7d6ccaf06a957\",\"dweb:/ipfs/QmZ2nuLwg7SdqTpVCBFZXhTe9Nsv9dwv5KemnznuaxYstZ\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Stakable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakable.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"Stakable": [
							966
						]
					},
					"id": 967,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 967,
							"sourceUnit": 312,
							"src": "67:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stakable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 966,
							"linearizedBaseContracts": [
								966
							],
							"name": "Stakable",
							"nameLocation": "137:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "153:162:1",
										"text": " @notice Constructor since this contract is not ment to be used without inheritance\n push once to stakeholders for it to work proplerly"
									},
									"id": 317,
									"mutability": "mutable",
									"name": "_stakingPenalty",
									"nameLocation": "339:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 966,
									"src": "323:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "323:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "400:200:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 322,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "486:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "486:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$352_storage_$bound_to$_t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakable.Stakeholder storage ref[] storage pointer) returns (struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "486:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "486:19:1"
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_stakingPenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "559:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "stakingPenalty_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "577:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "559:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "559:33:1"
											}
										]
									},
									"id": 332,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "stakingPenalty_",
												"nameLocation": "383:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "375:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:25:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:0:1"
									},
									"scope": 966,
									"src": "363:237:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stake",
									"id": 345,
									"members": [
										{
											"constant": false,
											"id": 334,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "873:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "865:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "865:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 336,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "896:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "888:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 335,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "888:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 338,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "921:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "913:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 337,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "913:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "1045:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "1037:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1037:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 342,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "1073:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "1065:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 341,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1065:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 344,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "1101:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "1093:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 343,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1093:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "848:5:1",
									"nodeType": "StructDefinition",
									"scope": 966,
									"src": "841:279:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stakeholder",
									"id": 352,
									"members": [
										{
											"constant": false,
											"id": 347,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1245:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 352,
											"src": "1237:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 346,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1237:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 351,
											"mutability": "mutable",
											"name": "address_stakes",
											"nameLocation": "1268:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 352,
											"src": "1260:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
												"typeString": "struct Stakable.Stake[]"
											},
											"typeName": {
												"baseType": {
													"id": 349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 348,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 345,
														"src": "1260:5:1"
													},
													"referencedDeclaration": 345,
													"src": "1260:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"id": 350,
												"nodeType": "ArrayTypeName",
												"src": "1260:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
													"typeString": "struct Stakable.Stake[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stakeholder",
									"nameLocation": "1214:11:1",
									"nodeType": "StructDefinition",
									"scope": 966,
									"src": "1207:83:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.StakingSummary",
									"id": 359,
									"members": [
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "1474:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "1466:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 353,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1466:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 358,
											"mutability": "mutable",
											"name": "stakes",
											"nameLocation": "1505:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "1497:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
												"typeString": "struct Stakable.Stake[]"
											},
											"typeName": {
												"baseType": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 345,
														"src": "1497:5:1"
													},
													"referencedDeclaration": 345,
													"src": "1497:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"id": 357,
												"nodeType": "ArrayTypeName",
												"src": "1497:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
													"typeString": "struct Stakable.Stake[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "1440:14:1",
									"nodeType": "StructDefinition",
									"scope": 966,
									"src": "1433:86:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1527:232:1",
										"text": " @notice\n   This is a array where we store all Stakes that are performed on the Contract\n   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping"
									},
									"id": 364,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "1788:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 966,
									"src": "1765:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
										"typeString": "struct Stakable.Stakeholder[]"
									},
									"typeName": {
										"baseType": {
											"id": 362,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 361,
												"name": "Stakeholder",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 352,
												"src": "1765:11:1"
											},
											"referencedDeclaration": 352,
											"src": "1765:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stakeholder_$352_storage_ptr",
												"typeString": "struct Stakable.Stakeholder"
											}
										},
										"id": 363,
										"nodeType": "ArrayTypeName",
										"src": "1765:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage_ptr",
											"typeString": "struct Stakable.Stakeholder[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "1807:114:1",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 369,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1964:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 966,
									"src": "1927:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 368,
										"keyType": {
											"id": 366,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1935:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1927:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 367,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1946:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1979:126:1",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 382,
									"name": "Staked",
									"nameLocation": "2117:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2150:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2134:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2173:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2165:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2198:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2190:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2222:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2214:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2250:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2242:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:145:1"
									},
									"src": "2111:158:1"
								},
								{
									"anonymous": false,
									"id": 386,
									"name": "PenaltyChanged",
									"nameLocation": "2283:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2306:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "2298:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:16:1"
									},
									"src": "2277:37:1"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2501:446:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 394,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "2593:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2593:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$352_storage_$bound_to$_t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakable.Stakeholder storage ref[] storage pointer) returns (struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2593:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "2593:19:1"
											},
											{
												"assignments": [
													400
												],
												"declarations": [
													{
														"constant": false,
														"id": 400,
														"mutability": "mutable",
														"name": "userIndex",
														"nameLocation": "2702:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "2694:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 399,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2694:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 405,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 401,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "2714:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2714:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2736:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2714:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2694:43:1"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 406,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "2796:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																}
															},
															"id": 408,
															"indexExpression": {
																"id": 407,
																"name": "userIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2809:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2796:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "2796:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 410,
														"name": "staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2827:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2796:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "2796:37:1"
											},
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 413,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "2886:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 415,
														"indexExpression": {
															"id": 414,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "2893:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2886:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 416,
														"name": "userIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "2903:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2886:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "2886:26:1"
											},
											{
												"expression": {
													"id": 419,
													"name": "userIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "2930:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 420,
												"nodeType": "Return",
												"src": "2923:16:1"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "2322:105:1",
										"text": " @notice _addStakeholder takes care of adding a stakeholder to the stakeholders array"
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addStakeholder",
									"nameLocation": "2442:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "2466:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2458:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2457:16:1"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2492:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:9:1"
									},
									"scope": 966,
									"src": "2433:514:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "3284:1511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 433,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "3358:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3368:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3358:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a2043616e6e6f74207374616b65206e6f7468696e67",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3371:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3813df9748c4436a7a2fd166053afb48801152fc793cbb0c0c94a59c88ffd3e0",
																"typeString": "literal_string \"Stakable: Cannot stake nothing\""
															},
															"value": "Stakable: Cannot stake nothing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3813df9748c4436a7a2fd166053afb48801152fc793cbb0c0c94a59c88ffd3e0",
																"typeString": "literal_string \"Stakable: Cannot stake nothing\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3350:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3350:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "3350:54:1"
											},
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3587:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 494,
														"src": "3579:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3579:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"baseExpression": {
														"id": 441,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "3595:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 444,
													"indexExpression": {
														"expression": {
															"id": 442,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3602:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3602:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3595:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3579:34:1"
											},
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "3720:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 494,
														"src": "3712:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3712:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"expression": {
														"id": 448,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3732:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3732:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3712:35:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3844:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3853:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3844:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 462,
												"nodeType": "IfStatement",
												"src": "3840:335:1",
												"trueBody": {
													"id": 461,
													"nodeType": "Block",
													"src": "3856:319:1",
													"statements": [
														{
															"expression": {
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 454,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "4128:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 456,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4152:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4152:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 455,
																		"name": "_addStakeholder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "4136:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4136:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4128:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 460,
															"nodeType": "ExpressionStatement",
															"src": "4128:35:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4384:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4384:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 471,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "4413:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 472,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "4439:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4467:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 474,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "4487:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 475,
																				"name": "_stakePeriod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "4518:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 476,
																				"name": "timestamp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "4533:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4518:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 478,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4517:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 468,
																"name": "Stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "4360:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Stake_$345_storage_ptr_$",
																	"typeString": "type(struct Stakable.Stake storage pointer)"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4360:198:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 463,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "4306:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																		"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 465,
																"indexExpression": {
																	"id": 464,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "4319:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4306:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 351,
															"src": "4306:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4306:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr_$_t_struct$_Stake_$345_storage_$returns$__$bound_to$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakable.Stake storage ref[] storage pointer,struct Stakable.Stake storage ref)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:263:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "4306:263:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4659:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4659:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4684:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 486,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "4706:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 487,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "4726:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 488,
																		"name": "_stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 427,
																		"src": "4751:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 489,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "4766:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4751:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 491,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4750:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "4638:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4638:149:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "EmitStatement",
												"src": "4633:154:1"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "2955:204:1",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "3174:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "3225:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3217:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3217:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "3256:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3248:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3180:94:1"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3284:0:1"
									},
									"scope": 966,
									"src": "3165:1630:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4856:166:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "amount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "4875:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4886:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "4875:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a2050656e616c7479206665652063616e6e6f742065786365656420352070657263656e742e",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4890:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_180bea940bb46e16124337966781522c26ac96d86aecd31891d0fc05cc3401e9",
																"typeString": "literal_string \"Stakable: Penalty fee cannot exceed 5 percent.\""
															},
															"value": "Stakable: Penalty fee cannot exceed 5 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_180bea940bb46e16124337966781522c26ac96d86aecd31891d0fc05cc3401e9",
																"typeString": "literal_string \"Stakable: Penalty fee cannot exceed 5 percent.\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4867:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4867:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "4867:72:1"
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 507,
														"name": "_stakingPenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "4950:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 508,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "4968:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4950:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "4950:25:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 512,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "5006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "4991:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4991:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "EmitStatement",
												"src": "4986:28:1"
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changePenaltyFee",
									"nameLocation": "4812:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "4838:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4830:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4829:17:1"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4856:0:1"
									},
									"scope": 966,
									"src": "4803:219:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "5154:138:1",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "5187:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "5165:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 526,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 525,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "5165:14:1"
															},
															"referencedDeclaration": 359,
															"src": "5165:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$359_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [
														{
															"id": 529,
															"name": "user_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5210:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 528,
														"name": "stakeSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "5197:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_StakingSummary_$359_memory_ptr_$",
															"typeString": "function (address) view returns (struct Stakable.StakingSummary memory)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5197:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5165:51:1"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 532,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5237:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5237:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 534,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "5255:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																				"typeString": "struct Stakable.StakingSummary memory"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stakes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 358,
																		"src": "5255:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Stakable.Stake memory[] memory"
																		}
																	},
																	"id": 537,
																	"indexExpression": {
																		"id": 536,
																		"name": "index_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 518,
																		"src": "5270:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5255:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "since",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "5255:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5237:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 540,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5236:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 524,
												"id": 541,
												"nodeType": "Return",
												"src": "5229:55:1"
											}
										]
									},
									"functionSelector": "38920102",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testCalculateDuration",
									"nameLocation": "5039:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "index_",
												"nameLocation": "5069:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5061:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "user_",
												"nameLocation": "5085:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5077:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5077:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:31:1"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5140:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5139:9:1"
									},
									"scope": 966,
									"src": "5030:262:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "5414:266:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 551,
																"name": "since_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "5433:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5442:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5433:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a204572726f722074696d657374616d702030",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5445:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd",
																"typeString": "literal_string \"Stakable: Error timestamp 0\""
															},
															"value": "Stakable: Error timestamp 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd",
																"typeString": "literal_string \"Stakable: Error timestamp 0\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5425:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "5425:50:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 559,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "5538:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "5538:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 561,
																			"name": "since_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "5556:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5538:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 563,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5537:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653234",
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"value": "1e24"
															},
															"src": "5537:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "333635",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5589:8:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "5374616b61626c653a204572726f722063616e6e6f74206469766964652074696d657374616d70",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5616:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10b867070097d898ae15cd1bc384e389b4a7d91f05c0759c198c193c7fd91787",
																"typeString": "literal_string \"Stakable: Error cannot divide timestamp\""
															},
															"value": "Stakable: Error cannot divide timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_stringliteral_10b867070097d898ae15cd1bc384e389b4a7d91f05c0759c198c193c7fd91787",
																"typeString": "literal_string \"Stakable: Error cannot divide timestamp\""
															}
														],
														"expression": {
															"id": 557,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "5506:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 285,
														"src": "5506:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5506:166:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 549,
												"id": 569,
												"nodeType": "Return",
												"src": "5486:186:1"
											}
										]
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingDuration",
									"nameLocation": "5309:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "since_",
												"nameLocation": "5342:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "5334:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5334:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5333:16:1"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "5400:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5399:9:1"
									},
									"scope": 966,
									"src": "5300:380:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "5828:244:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 581,
															"name": "_current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "5843:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "5843:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5868:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5843:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "IfStatement",
												"src": "5839:67:1",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5871:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5893:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 580,
															"id": 586,
															"nodeType": "Return",
															"src": "5886:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 589,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "5939:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 590,
																			"name": "_current_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "5966:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 591,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 342,
																		"src": "5966:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5939:51:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 594,
																				"name": "_current_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 574,
																				"src": "6035:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			},
																			"id": 595,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 338,
																			"src": "6035:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 593,
																		"name": "calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "6010:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6010:46:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5939:117:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 598,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5938:119:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6060:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "5938:126:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 580,
												"id": 601,
												"nodeType": "Return",
												"src": "5918:146:1"
											}
										]
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakeReward",
									"nameLocation": "5697:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "_current_stake",
												"nameLocation": "5731:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "5718:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
													"typeString": "struct Stakable.Stake"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 345,
														"src": "5718:5:1"
													},
													"referencedDeclaration": 345,
													"src": "5718:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5755:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "5747:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5747:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5717:46:1"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "5814:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5814:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5813:9:1"
									},
									"scope": 966,
									"src": "5688:384:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "6193:176:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "6226:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "6204:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 612,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 611,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "6204:14:1"
															},
															"referencedDeclaration": 359,
															"src": "6204:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$359_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 623,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6265:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 616,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "6281:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																		"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 620,
																"indexExpression": {
																	"baseExpression": {
																		"id": 617,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "6294:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 619,
																	"indexExpression": {
																		"id": 618,
																		"name": "user_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6301:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6294:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6281:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 351,
															"src": "6281:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														],
														"id": 614,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "6236:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$359_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6236:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6204:130:1"
											},
											{
												"expression": {
													"id": 624,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 613,
													"src": "6354:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 610,
												"id": 625,
												"nodeType": "Return",
												"src": "6347:14:1"
											}
										]
									},
									"functionSelector": "b09d4b4e",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeSummary",
									"nameLocation": "6089:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "user_",
												"nameLocation": "6110:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "6102:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6101:15:1"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "6165:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 608,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 607,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 359,
														"src": "6165:14:1"
													},
													"referencedDeclaration": 359,
													"src": "6165:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6164:23:1"
									},
									"scope": 966,
									"src": "6080:289:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "6519:392:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 638,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "6534:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6544:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6534:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 646,
												"nodeType": "IfStatement",
												"src": "6530:57:1",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "6547:40:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6570:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6573:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6569:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 637,
															"id": 644,
															"nodeType": "Return",
															"src": "6562:13:1"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 649,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "6652:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 652,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "6690:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 655,
																					"name": "_stakingPenalty",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "6711:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "31303030",
																					"id": 656,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6728:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					}
																				],
																				"expression": {
																					"id": 653,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "6698:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 220,
																				"src": "6698:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6698:35:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 650,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "6677:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 205,
																		"src": "6677:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6677:57:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 647,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "6621:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "6621:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6621:128:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 662,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "6795:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 665,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "6833:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 668,
																					"name": "_stakingPenalty",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "6854:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "31303030",
																					"id": 669,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6871:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					}
																				],
																				"expression": {
																					"id": 666,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "6841:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 220,
																				"src": "6841:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6841:35:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 663,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "6820:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 205,
																		"src": "6820:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6820:57:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 660,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "6764:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "6764:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6764:128:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 673,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6606:297:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 637,
												"id": 674,
												"nodeType": "Return",
												"src": "6599:304:1"
											}
										]
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingWithPenalty",
									"nameLocation": "6386:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "6414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6438:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "6430:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6430:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6413:32:1"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "6496:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6496:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "6505:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6505:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6495:18:1"
									},
									"scope": 966,
									"src": "6377:534:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "7378:1816:1",
										"statements": [
											{
												"assignments": [
													689
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "user_index",
														"nameLocation": "7471:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "7463:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7463:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"baseExpression": {
														"id": 690,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "7484:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 693,
													"indexExpression": {
														"expression": {
															"id": 691,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7491:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7491:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7484:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7463:39:1"
											},
											{
												"assignments": [
													697
												],
												"declarations": [
													{
														"constant": false,
														"id": 697,
														"mutability": "mutable",
														"name": "current_stake",
														"nameLocation": "7526:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "7513:26:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 696,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 695,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 345,
																"src": "7513:5:1"
															},
															"referencedDeclaration": 345,
															"src": "7513:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 704,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 698,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "7542:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																}
															},
															"id": 700,
															"indexExpression": {
																"id": 699,
																"name": "user_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "7555:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7542:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 701,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "address_stakes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 351,
														"src": "7542:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
															"typeString": "struct Stakable.Stake storage ref[] storage ref"
														}
													},
													"id": 703,
													"indexExpression": {
														"id": 702,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "7596:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7542:70:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7513:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 706,
																	"name": "current_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "7815:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 336,
																"src": "7815:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 708,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "7839:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7815:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a2043616e6e6f74207769746864726177206d6f7265207468616e20796f752068617665207374616b6564",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7860:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba87cd7e1180e1e202533737ef16f3dd080bebdde501c7b5915b283cf633ca4a",
																"typeString": "literal_string \"Stakable: Cannot withdraw more than you have staked\""
															},
															"value": "Stakable: Cannot withdraw more than you have staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba87cd7e1180e1e202533737ef16f3dd080bebdde501c7b5915b283cf633ca4a",
																"typeString": "literal_string \"Stakable: Cannot withdraw more than you have staked\""
															}
														],
														"id": 705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:131:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "7793:131:1"
											},
											{
												"assignments": [
													714
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "8021:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "8013:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8013:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 719,
												"initialValue": {
													"arguments": [
														{
															"id": 716,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8051:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														{
															"id": 717,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8066:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 715,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "8030:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$345_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory,uint256) view returns (uint256)"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8030:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8013:60:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 720,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8208:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "8208:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 722,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8236:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8236:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8208:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": " @notice This is penalty given for early withdrawal before the designated time",
												"id": 731,
												"nodeType": "IfStatement",
												"src": "8204:126:1",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "8253:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 726,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "8303:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 727,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "8311:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 725,
																	"name": "calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "8275:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8275:43:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 687,
															"id": 729,
															"nodeType": "Return",
															"src": "8268:50:1"
														}
													]
												}
											},
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "stakeDuration",
														"nameLocation": "8350:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "8342:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8342:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 734,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8366:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "8366:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 736,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8394:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "since",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "8394:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8366:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8342:71:1"
											},
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 740,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8477:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "8477:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 743,
																"name": "current_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "8500:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 336,
															"src": "8500:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 745,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8523:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8500:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8477:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "8477:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 749,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8618:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "8618:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8642:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8618:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 797,
													"nodeType": "Block",
													"src": "8731:420:1",
													"statements": [
														{
															"expression": {
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 762,
																					"name": "stakeholders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "8746:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																						"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																					}
																				},
																				"id": 764,
																				"indexExpression": {
																					"id": 763,
																					"name": "user_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 689,
																					"src": "8759:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8746:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																					"typeString": "struct Stakable.Stakeholder storage ref"
																				}
																			},
																			"id": 765,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "address_stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 351,
																			"src": "8746:57:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																				"typeString": "struct Stakable.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 767,
																		"indexExpression": {
																			"id": 766,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "8804:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8746:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_storage",
																			"typeString": "struct Stakable.Stake storage ref"
																		}
																	},
																	"id": 768,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 336,
																	"src": "8746:89:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 769,
																		"name": "current_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "8838:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 336,
																	"src": "8838:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8746:112:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "8746:112:1"
														},
														{
															"expression": {
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 773,
																					"name": "stakeholders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "8910:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																						"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																					}
																				},
																				"id": 775,
																				"indexExpression": {
																					"id": 774,
																					"name": "user_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 689,
																					"src": "8923:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8910:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																					"typeString": "struct Stakable.Stakeholder storage ref"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "address_stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 351,
																			"src": "8910:39:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																				"typeString": "struct Stakable.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 778,
																		"indexExpression": {
																			"id": 777,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "8950:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8910:46:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_storage",
																			"typeString": "struct Stakable.Stake storage ref"
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "since",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "8910:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 780,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8965:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8965:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8910:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 783,
															"nodeType": "ExpressionStatement",
															"src": "8910:88:1"
														},
														{
															"expression": {
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 784,
																					"name": "stakeholders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "9013:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																						"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																					}
																				},
																				"id": 786,
																				"indexExpression": {
																					"id": 785,
																					"name": "user_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 689,
																					"src": "9026:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9013:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																					"typeString": "struct Stakable.Stakeholder storage ref"
																				}
																			},
																			"id": 787,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "address_stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 351,
																			"src": "9013:39:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																				"typeString": "struct Stakable.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 789,
																		"indexExpression": {
																			"id": 788,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "9053:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9013:46:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_storage",
																			"typeString": "struct Stakable.Stake storage ref"
																		}
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "releaseTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 344,
																	"src": "9013:58:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 791,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "9091:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "9091:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 793,
																		"name": "stakeDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "9126:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9091:48:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9013:126:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 796,
															"nodeType": "ExpressionStatement",
															"src": "9013:126:1"
														}
													]
												},
												"id": 798,
												"nodeType": "IfStatement",
												"src": "8614:537:1",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "8645:80:1",
													"statements": [
														{
															"expression": {
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "8660:53:1",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 753,
																				"name": "stakeholders",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 364,
																				"src": "8667:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																					"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																				}
																			},
																			"id": 755,
																			"indexExpression": {
																				"id": 754,
																				"name": "user_index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 689,
																				"src": "8680:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8667:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																				"typeString": "struct Stakable.Stakeholder storage ref"
																			}
																		},
																		"id": 756,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "address_stakes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 351,
																		"src": "8667:39:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																			"typeString": "struct Stakable.Stake storage ref[] storage ref"
																		}
																	},
																	"id": 758,
																	"indexExpression": {
																		"id": 757,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "8707:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8667:46:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$345_storage",
																		"typeString": "struct Stakable.Stake storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 760,
															"nodeType": "ExpressionStatement",
															"src": "8660:53:1"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 799,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9171:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 800,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "9179:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 801,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9170:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 687,
												"id": 802,
												"nodeType": "Return",
												"src": "9163:23:1"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "6919:339:1",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the acount\n Will also calculateStakeReward and reset timer"
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawStake",
									"nameLocation": "7273:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7296:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "7288:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7288:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7312:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "7304:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7287:31:1"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "7355:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "7364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7354:18:1"
									},
									"scope": 966,
									"src": "7264:1930:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "9303:1117:1",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "user_index",
														"nameLocation": "9396:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "9388:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 813,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9388:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 819,
												"initialValue": {
													"baseExpression": {
														"id": 815,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "9409:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 818,
													"indexExpression": {
														"expression": {
															"id": 816,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9416:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9409:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9388:39:1"
											},
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "current_stake",
														"nameLocation": "9451:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "9438:26:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 821,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 820,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 345,
																"src": "9438:5:1"
															},
															"referencedDeclaration": 345,
															"src": "9438:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 823,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "9467:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																}
															},
															"id": 825,
															"indexExpression": {
																"id": 824,
																"name": "user_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "9480:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9467:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "address_stakes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 351,
														"src": "9467:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
															"typeString": "struct Stakable.Stake storage ref[] storage ref"
														}
													},
													"id": 828,
													"indexExpression": {
														"id": 827,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "9521:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9467:70:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9438:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 831,
																	"name": "current_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "9740:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 336,
																"src": "9740:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9740:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a2043616e6e6f742077697468647261772c20796f7520646f6e2774206861766520616e79207374616b6520696e207468697320496e646578",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9779:67:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae102850c2f1703c6769eb581fd09838202498e38bcb1417cbb4b7ff28347733",
																"typeString": "literal_string \"Stakable: Cannot withdraw, you don't have any stake in this Index\""
															},
															"value": "Stakable: Cannot withdraw, you don't have any stake in this Index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae102850c2f1703c6769eb581fd09838202498e38bcb1417cbb4b7ff28347733",
																"typeString": "literal_string \"Stakable: Cannot withdraw, you don't have any stake in this Index\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9718:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9718:139:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "9718:139:1"
											},
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "9954:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "9946:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 838,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9946:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"expression": {
														"id": 840,
														"name": "current_stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "9963:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
															"typeString": "struct Stakable.Stake memory"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 336,
													"src": "9963:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9946:37:1"
											},
											{
												"assignments": [
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "10002:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "9994:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9994:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "10032:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														{
															"id": 847,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "10047:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "10011:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$345_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory,uint256) view returns (uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10011:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9994:60:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 850,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "10189:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "10189:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 852,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10217:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10217:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10189:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": " @notice This is penalty given for early withdrawal before the designated time",
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10185:126:1",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10234:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 856,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "10284:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 857,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "10292:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 855,
																	"name": "calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "10256:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10256:43:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 812,
															"id": 859,
															"nodeType": "Return",
															"src": "10249:50:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10323:53:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 862,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "10330:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																		"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 864,
																"indexExpression": {
																	"id": 863,
																	"name": "user_index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "10343:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10330:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 351,
															"src": "10330:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														},
														"id": 867,
														"indexExpression": {
															"id": 866,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "10370:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10330:46:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$345_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "10323:53:1"
											},
											{
												"expression": {
													"components": [
														{
															"id": 870,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "10397:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 871,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "10405:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 872,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10396:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 812,
												"id": 873,
												"nodeType": "Return",
												"src": "10389:23:1"
											}
										]
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawAllStake",
									"nameLocation": "9211:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9237:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "9229:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9229:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9228:15:1"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "9280:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9280:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "9289:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9279:18:1"
									},
									"scope": 966,
									"src": "9202:1218:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "10539:770:1",
										"statements": [
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "totalStakeAmount",
														"nameLocation": "10558:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "10550:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 883,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10550:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 885,
												"nodeType": "VariableDeclarationStatement",
												"src": "10550:24:1"
											},
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "10609:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "10587:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 887,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 886,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "10587:14:1"
															},
															"referencedDeclaration": 359,
															"src": "10587:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$359_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 898,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10648:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 891,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "10664:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																		"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 895,
																"indexExpression": {
																	"baseExpression": {
																		"id": 892,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "10677:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 894,
																	"indexExpression": {
																		"id": 893,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "10684:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10677:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10664:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 351,
															"src": "10664:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														],
														"id": 889,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "10619:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$359_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10619:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10587:132:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 900,
																		"name": "summary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "10752:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																			"typeString": "struct Stakable.StakingSummary memory"
																		}
																	},
																	"id": 901,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 358,
																	"src": "10752:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Stakable.Stake memory[] memory"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10752:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10777:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10752:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a2054686973206164647265737320646f6573206e6f74206861766520616e79207374616b6573",
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10793:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337",
																"typeString": "literal_string \"Stakable: This address does not have any stakes\""
															},
															"value": "Stakable: This address does not have any stakes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337",
																"typeString": "literal_string \"Stakable: This address does not have any stakes\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10730:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10730:123:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "10730:123:1"
											},
											{
												"body": {
													"id": 954,
													"nodeType": "Block",
													"src": "10921:304:1",
													"statements": [
														{
															"assignments": [
																922
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 922,
																	"mutability": "mutable",
																	"name": "availableReward",
																	"nameLocation": "10944:15:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 954,
																	"src": "10936:23:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 921,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10936:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 934,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"id": 924,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "11001:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 358,
																			"src": "11001:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Stakable.Stake memory[] memory"
																			}
																		},
																		"id": 927,
																		"indexExpression": {
																			"id": 926,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "11016:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11001:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 928,
																					"name": "summary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 888,
																					"src": "11037:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																						"typeString": "struct Stakable.StakingSummary memory"
																					}
																				},
																				"id": 929,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 358,
																				"src": "11037:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct Stakable.Stake memory[] memory"
																				}
																			},
																			"id": 931,
																			"indexExpression": {
																				"id": 930,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 909,
																				"src": "11052:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11037:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 932,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "11037:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 923,
																	"name": "calculateStakeReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "10962:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$345_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (struct Stakable.Stake memory,uint256) view returns (uint256)"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10962:114:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10936:140:1"
														},
														{
															"expression": {
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 935,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "11091:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 938,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 358,
																			"src": "11091:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Stakable.Stake memory[] memory"
																			}
																		},
																		"id": 939,
																		"indexExpression": {
																			"id": 937,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "11106:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11091:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimable",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 340,
																	"src": "11091:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 941,
																	"name": "availableReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "11121:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11091:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 943,
															"nodeType": "ExpressionStatement",
															"src": "11091:45:1"
														},
														{
															"expression": {
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 944,
																	"name": "totalStakeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "11151:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 945,
																		"name": "totalStakeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "11170:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 946,
																					"name": "summary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 888,
																					"src": "11189:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																						"typeString": "struct Stakable.StakingSummary memory"
																					}
																				},
																				"id": 947,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 358,
																				"src": "11189:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct Stakable.Stake memory[] memory"
																				}
																			},
																			"id": 949,
																			"indexExpression": {
																				"id": 948,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 909,
																				"src": "11204:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11189:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 950,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "11189:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11170:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11151:62:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 953,
															"nodeType": "ExpressionStatement",
															"src": "11151:62:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 912,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "10886:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 913,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "10890:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "10890:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Stakable.Stake memory[] memory"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10890:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10886:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"initializationExpression": {
													"assignments": [
														909
													],
													"declarations": [
														{
															"constant": false,
															"id": 909,
															"mutability": "mutable",
															"name": "s",
															"nameLocation": "10879:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 955,
															"src": "10871:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 908,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10871:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 911,
													"initialValue": {
														"hexValue": "30",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10883:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10871:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 917,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "10913:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10918:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "10913:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 920,
													"nodeType": "ExpressionStatement",
													"src": "10913:6:1"
												},
												"nodeType": "ForStatement",
												"src": "10866:359:1"
											},
											{
												"expression": {
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 956,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "11237:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 354,
														"src": "11237:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 959,
														"name": "totalStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "11260:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11237:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11237:39:1"
											},
											{
												"expression": {
													"id": 962,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 888,
													"src": "11294:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 882,
												"id": 963,
												"nodeType": "Return",
												"src": "11287:14:1"
											}
										]
									},
									"functionSelector": "e73e14bf",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "10437:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "10454:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "10446:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10446:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10445:17:1"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "10511:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 880,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 879,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 359,
														"src": "10511:14:1"
													},
													"referencedDeclaration": 359,
													"src": "10511:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10510:23:1"
									},
									"scope": 966,
									"src": "10428:881:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 967,
							"src": "128:11184:1",
							"usedErrors": []
						}
					],
					"src": "40:11274:1"
				},
				"id": 1
			}
		}
	}
}