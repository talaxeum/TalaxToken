{
	"id": "6238f40a1d8c82a69f8796255ffca85a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakable.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @notice Error handling message for Modifier\n */\nerror Function__notAuthorized();\nerror Function__notAVoter();\nerror Function__votingNotAvailable();\n\n/**\n * @notice Error handling message for Staking functions\n */\nerror Staking__cannotStakeNothing();\nerror Staking__userIsStaker();\nerror Staking__penaltyExceed3Percent();\nerror Staking__airdropExceed20Percent();\nerror Staking__noStakingFound();\n\n/**\n * @notice Error handling message for Airdrop functions\n */\nerror Airdrop__claimableOnceAWeek();\n\n/**\n * @notice Error handling message for Voting functions\n */\nerror Voting__votingIsRunning();\nerror Voting__alreadyVoted();\nerror Voting__notYetVoted();\nerror Voting__notEnoughVoters();\n\ncontract Stakable is ReentrancyGuard {\n    using SafeMath for uint256;\n    /**\n     * @notice Constructor since this contract is not meant to be used without inheritance\n     * push once to stakeholders for it to work properly\n     */\n\n    struct Voter {\n        bool votingRight;\n        mapping(uint256 => bool) voted;\n    }\n\n    uint256 public stakingPenaltyRate;\n    uint256 public airdropRate;\n    uint256 public airdropSince;\n\n    bool internal _votingStatus;\n    uint256 internal _votingId;\n    uint256 public totalVoters;\n    mapping(address => Voter) public voters;\n    mapping(uint256 => uint256) public votedUsers;\n\n    address public _talax;\n    address public _owner;\n\n    constructor() {\n        //Staking penalty and Airdrop in 0.1 times percentage\n        stakingPenaltyRate = 15;\n        airdropRate = 80;\n        _talax = msg.sender;\n        _owner = msg.sender;\n    }\n\n    /**\n     * @notice\n     * A stake struct is used to represent the way we store stakes,\n     * A Stake will contain the users address, the amount staked and a timestamp,\n     * Since which is when the stake was made\n     */\n    struct Stake {\n        uint256 amount;\n        uint256 since;\n        uint256 rewardAPY;\n        uint256 releaseTime;\n        // This claimable field is new and used to tell how big of a reward is currently available\n        uint256 claimable;\n        uint256 claimableAirdrop;\n        uint256 latestClaimDrop;\n    }\n\n    /**\n     * @notice\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\n     */\n    struct StakingSummary {\n        uint256 total_amount;\n        uint256 penalty;\n        Stake stake;\n    }\n\n    /**\n     * @notice\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\n     */\n    mapping(address => Stake) internal stakeholders;\n\n    /**\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\n     */\n    event Staked(\n        address indexed user,\n        uint256 amount,\n        uint256 timestamp,\n        uint256 releaseTime\n    );\n\n    event PenaltyChanged(uint256 amount);\n    event AirdropChanged(uint256 amount);\n\n    /* ------------------------------------------ Modifier ------------------------------------------ */\n    function isTalax() internal view {\n        // require(msg.sender == _talax, \"Not authorized\");\n        if (msg.sender != _talax) {\n            revert Function__notAuthorized();\n        }\n    }\n\n    modifier onlyTalax() {\n        isTalax();\n        _;\n    }\n\n    function isOwner() internal view {\n        // require(msg.sender == _owner, \"Not authorized\");\n        if (msg.sender != _owner) {\n            revert Function__notAuthorized();\n        }\n    }\n\n    modifier onlyOwner() {\n        isOwner();\n        _;\n    }\n\n    function _isVoter() internal view {\n        // require(voters[msg.sender].votingRight == true, \"You are not a voter\");\n        if (voters[msg.sender].votingRight == false) {\n            revert Function__notAVoter();\n        }\n    }\n\n    modifier isVoter() {\n        _isVoter();\n        _;\n    }\n\n    function _checkVotingStatus() internal view {\n        // require(_votingStatus, \"Voting is not available\");\n        if (!_votingStatus) {\n            revert Function__votingNotAvailable();\n        }\n    }\n\n    modifier votingStatusTrue() {\n        _checkVotingStatus();\n        _;\n    }\n\n    /* ---------------------------------------------- - --------------------------------------------- */\n\n    function changeTalaxAddress(address talax) external onlyOwner {\n        _talax = talax;\n    }\n\n    /**\n     * @notice\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n     * StakeID\n     */\n    function stake(\n        address user,\n        uint256 amount,\n        uint256 stakePeriod,\n        uint256 rewardRate\n    ) external nonReentrant onlyTalax {\n        // Simple check so that user does not stake 0\n        // require(amount > 0, \"Cannot stake nothing\");\n        if (amount <= 0) {\n            revert Staking__cannotStakeNothing();\n        }\n        // require(stakeholders[user].amount == 0, \"User is a staker\");\n        if (stakeholders[user].amount != 0) {\n            revert Staking__userIsStaker();\n        }\n\n        totalVoters += 1;\n        voters[user].votingRight = true;\n\n        // block.timestamp = timestamp of the current block in seconds since the epoch\n        uint256 timestamp = block.timestamp;\n\n        // Use the index to push a new Stake\n        // push a newly created Stake with the current block timestamp.\n\n        stakeholders[user] = Stake(\n            amount,\n            timestamp,\n            rewardRate,\n            (stakePeriod + timestamp),\n            0,\n            0,\n            0\n        );\n        // Emit an event that the stake has occured\n        emit Staked(user, amount, timestamp, (stakePeriod + timestamp));\n    }\n\n    function changePenaltyFee(uint256 amount) external onlyOwner {\n        // require(amount <= 30, \"Penalty fee cannot exceed 3 percent.\");\n        if (amount > 30) {\n            revert Staking__penaltyExceed3Percent();\n        }\n        stakingPenaltyRate = amount;\n        emit PenaltyChanged(amount);\n    }\n\n    function _calculateStakingDuration(uint256 since)\n        internal\n        view\n        returns (uint256)\n    {\n        // times by 1e24 so theres no missing value\n        return\n            SafeMath.div(\n                (block.timestamp - since) * 1e24,\n                365 days,\n                \"Error cannot divide timestamp\"\n            );\n    }\n\n    function _calculateStakeReward(Stake memory user_stake)\n        internal\n        view\n        returns (uint256)\n    {\n        if (user_stake.amount == 0) {\n            return 0;\n        }\n        // divided by 1e26 because 1e2 for APY and 1e24 from calculate staking duration\n        return\n            (user_stake.amount *\n                user_stake.rewardAPY *\n                _calculateStakingDuration(user_stake.since)) / 1e26;\n    }\n\n    function _calculateStakingWithPenalty(uint256 amount, uint256 reward)\n        internal\n        view\n        returns (uint256, uint256)\n    {\n        if (amount == 0) {\n            return (0, 0);\n        }\n        return (\n            SafeMath.sub(\n                amount,\n                SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000)\n            ),\n            SafeMath.sub(\n                reward,\n                SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000)\n            )\n        );\n    }\n\n    /**\n     * @notice\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\n     * Will return the amount to MINT onto the account\n     * Will also _calculateStakeReward and reset timer\n     */\n    function withdrawStake(address user)\n        external\n        nonReentrant\n        onlyTalax\n        returns (uint256, uint256)\n    {\n        //can be simplified\n        // Grab user_index which is the index to use to grab the Stake[]\n        Stake memory user_stake = stakeholders[user];\n\n        delete stakeholders[user];\n\n        if (user_stake.releaseTime > block.timestamp) {\n            totalVoters -= 1;\n            delete voters[user].voted[_votingId];\n            return\n                _calculateStakingWithPenalty(\n                    user_stake.amount,\n                    _calculateStakeReward(user_stake)\n                );\n        }\n\n        totalVoters -= 1;\n        delete voters[user].voted[_votingId];\n        return (user_stake.amount, _calculateStakeReward(user_stake));\n    }\n\n    function hasStake() external view returns (StakingSummary memory) {\n        Stake memory user_stake = stakeholders[msg.sender];\n        // require(user_stake.amount > 0, \"No Stake Found\");\n        if (user_stake.amount <= 0) {\n            revert Staking__noStakingFound();\n        }\n        StakingSummary memory summary = StakingSummary(0, 0, user_stake);\n\n        uint256 reward = _calculateStakeReward(user_stake);\n\n        if (summary.stake.releaseTime > block.timestamp) {\n            summary.penalty =\n                SafeMath.div(\n                    SafeMath.mul(user_stake.amount, stakingPenaltyRate),\n                    1000\n                ) +\n                SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000);\n        }\n\n        if (_calculateWeek(user_stake.latestClaimDrop) > 0) {\n            uint256 airdrop = _calculateAirdrop(user_stake.amount);\n            summary.stake.claimableAirdrop = airdrop;\n        } else {\n            summary.stake.claimableAirdrop = 0;\n        }\n\n        summary.stake.claimable = reward;\n        summary.total_amount = user_stake.amount;\n\n        return summary;\n    }\n\n    /* -------------------------------------- Airdrop functions ------------------------------------- */\n\n    function startAirdropSince() external onlyTalax {\n        airdropSince = block.timestamp;\n    }\n\n    function changeAirdropPercentage(uint256 amount) external onlyOwner {\n        if (amount > 200) {\n            revert Staking__airdropExceed20Percent();\n        }\n        airdropRate = amount;\n        emit AirdropChanged(amount);\n    }\n\n    function _calculateWeek(uint256 input) internal view returns (uint256) {\n        return (block.timestamp - input).div(7 days);\n    }\n\n    function _calculateAirdrop(uint256 stakeAmount)\n        internal\n        view\n        returns (uint256)\n    {\n        return ((stakeAmount * airdropRate) / 1000) / 52 weeks;\n    }\n\n    function claimAirdrop(address user)\n        external\n        view\n        onlyTalax\n        returns (uint256)\n    {\n        //can be simplified if using address\n        Stake memory staker = stakeholders[user];\n\n        if (staker.amount > 0) {\n            // require(\n            //     _calculateWeek(staker.latestClaimDrop) > 0,\n            //     \"Claimable once a week\"\n            // );\n            if (_calculateWeek(staker.latestClaimDrop) <= 0) {\n                revert Airdrop__claimableOnceAWeek();\n            }\n\n            staker.claimableAirdrop = 0;\n            staker.latestClaimDrop = block.timestamp;\n\n            return _calculateAirdrop(staker.amount);\n        } else {\n            return 0;\n        }\n    }\n\n    function airdropWeek() public view returns (uint256) {\n        if (airdropSince != 0) {\n            return (block.timestamp - airdropSince) / 7 days;\n        } else {\n            return 0;\n        }\n    }\n\n    /* -------------------------------- Voting Functions for DAO Pool ------------------------------- */\n\n    function getVoters(address user) external view returns (bool, bool) {\n        return (voters[user].votingRight, voters[user].voted[_votingId]);\n    }\n\n    //can be simplified since not connected directly\n    function startVoting() external nonReentrant onlyTalax {\n        // require(_votingStatus == false, \"Voting is already running\");\n        if (_votingStatus == true) {\n            revert Voting__votingIsRunning();\n        }\n\n        _votingStatus = true;\n        _votingId += 1;\n    }\n\n    function vote() public nonReentrant votingStatusTrue isVoter {\n        // require(\n        //     voters[msg.sender].voted[_votingId] == false,\n        //     \"You have voted before\"\n        // );\n        if (voters[msg.sender].voted[_votingId] == true) {\n            revert Voting__alreadyVoted();\n        }\n\n        voters[msg.sender].voted[_votingId] = true;\n        votedUsers[_votingId] += 1;\n    }\n\n    function retractVote() public nonReentrant votingStatusTrue isVoter {\n        // require(\n        //     voters[msg.sender].voted[_votingId] == true,\n        //     \"You have not voted yet\"\n        // );\n        if (voters[msg.sender].voted[_votingId] == false) {\n            revert Voting__notYetVoted();\n        }\n\n        voters[msg.sender].voted[_votingId] == false;\n        votedUsers[_votingId] -= 1;\n    }\n\n    function getVotingResult()\n        external\n        view\n        onlyTalax\n        votingStatusTrue\n        returns (bool)\n    {\n        // require(totalVoters > 1, \"Not enough voters\");\n        if (totalVoters <= 1) {\n            revert Voting__notEnoughVoters();\n        }\n        uint256 half_voters = SafeMath.div(SafeMath.mul(totalVoters, 5), 10);\n\n        if (votedUsers[_votingId] > half_voters) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function stopVoting() external onlyTalax votingStatusTrue {\n        _votingStatus = false;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADD SSTORE DUP15 CALL BYTE BASEFEE 0xAA CREATE GAS AND PUSH22 0xB79EEBEEBC9986DDA7DC9FFF4A6F2A14C0B05CA86473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "467:6301:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADD SSTORE DUP15 CALL BYTE BASEFEE 0xAA CREATE GAS AND PUSH22 0xB79EEBEEBC9986DDA7DC9FFF4A6F2A14C0B05CA86473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "467:6301:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stakable.sol": {
				"Stakable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Airdrop__claimableOnceAWeek",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Function__notAVoter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Function__notAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Function__votingNotAvailable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__airdropExceed20Percent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__cannotStakeNothing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__noStakingFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__penaltyExceed3Percent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__userIsStaker",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__alreadyVoted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__notEnoughVoters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__notYetVoted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__votingIsRunning",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AirdropChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_talax",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropWeek",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeAirdropPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changePenaltyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimAirdrop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getVoters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVotingResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penalty",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimableAirdrop",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "latestClaimDrop",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake",
											"name": "stake",
											"type": "tuple"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retractVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakePeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdropSince",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "votingRight",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakable.sol\":880:13543  contract Stakable is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakable.sol\":1566:1766  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":1673:1675  15 */\n  0x0f\n    /* \"contracts/Stakable.sol\":1652:1670  stakingPenaltyRate */\n  0x01\n    /* \"contracts/Stakable.sol\":1652:1675  stakingPenaltyRate = 15 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":1699:1701  80 */\n  0x50\n    /* \"contracts/Stakable.sol\":1685:1696  airdropRate */\n  0x02\n    /* \"contracts/Stakable.sol\":1685:1701  airdropRate = 80 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":1720:1730  msg.sender */\n  caller\n    /* \"contracts/Stakable.sol\":1711:1717  _talax */\n  0x09\n  0x00\n    /* \"contracts/Stakable.sol\":1711:1730  _talax = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":1749:1759  msg.sender */\n  caller\n    /* \"contracts/Stakable.sol\":1740:1746  _owner */\n  0x0a\n  0x00\n    /* \"contracts/Stakable.sol\":1740:1759  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":880:13543  contract Stakable is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakable.sol\":880:13543  contract Stakable is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8891cf0d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc23a5cea\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xc23a5cea\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcb79c2e1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcbb3e152\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd5dbdf1b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf93d4f8a\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xfab2f86b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x8891cf0d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8c63f97f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa143a5f2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb2bdfa7b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb87da76d\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x5f348b4e\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x5f348b4e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5f5300ff\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x632a9a52\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x65f8c6c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x671d2b75\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x71e3db87\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x070c8b74\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x10486b6a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1d77b00b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ec6b60a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2d15cc04\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakable.sol\":12533:12945  function retractVote() public nonReentrant votingStatusTrue isVoter {... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Stakable.sol\":8674:9801  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":4409:4502  function changeTalaxAddress(address talax) external onlyOwner {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/Stakable.sol\":11835:12118  function startVoting() external nonReentrant onlyTalax {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/Stakable.sol\":11627:11776  function getVoters(address user) external view returns (bool, bool) {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":1511:1532  address public _talax */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":1382:1408  uint256 public totalVoters */\n    tag_9:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":12124:12527  function vote() public nonReentrant votingStatusTrue isVoter {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/Stakable.sol\":10577:11305  function claimAirdrop(address user)... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":12951:13439  function getVotingResult()... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":9913:10008  function startAirdropSince() external onlyTalax {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/Stakable.sol\":1251:1277  uint256 public airdropRate */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":5893:6199  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/Stakable.sol\":1459:1504  mapping(uint256 => uint256) public votedUsers */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":1414:1453  mapping(address => Voter) public voters */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":1538:1559  address public _owner */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":1283:1310  uint256 public airdropSince */\n    tag_19:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":7870:8668  function withdrawStake(address user)... */\n    tag_20:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":1212:1245  uint256 public stakingPenaltyRate */\n    tag_21:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":11311:11515  function airdropWeek() public view returns (uint256) {... */\n    tag_22:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":10014:10248  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n    tag_23:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/Stakable.sol\":4713:5887  function stake(... */\n    tag_24:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/Stakable.sol\":13445:13541  function stopVoting() external onlyTalax votingStatusTrue {... */\n    tag_25:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      stop\n        /* \"contracts/Stakable.sol\":12533:12945  function retractVote() public nonReentrant votingStatusTrue isVoter {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":4259:4279  _checkVotingStatus() */\n      tag_112\n        /* \"contracts/Stakable.sol\":4259:4277  _checkVotingStatus */\n      tag_113\n        /* \"contracts/Stakable.sol\":4259:4279  _checkVotingStatus() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/Stakable.sol\":3977:3987  _isVoter() */\n      tag_115\n        /* \"contracts/Stakable.sol\":3977:3985  _isVoter */\n      tag_116\n        /* \"contracts/Stakable.sol\":3977:3987  _isVoter() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/Stakable.sol\":12788:12793  false */\n      0x00\n        /* \"contracts/Stakable.sol\":12749:12793  voters[msg.sender].voted[_votingId] == false */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":12749:12755  voters */\n      0x07\n        /* \"contracts/Stakable.sol\":12749:12767  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":12756:12766  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":12749:12767  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":12749:12773  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":12749:12784  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":12774:12783  _votingId */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":12749:12784  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":12749:12793  voters[msg.sender].voted[_votingId] == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":12745:12848  if (voters[msg.sender].voted[_votingId] == false) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"contracts/Stakable.sol\":12816:12837  Voting__notYetVoted() */\n      mload(0x40)\n      0x8b74220000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":12745:12848  if (voters[msg.sender].voted[_votingId] == false) {... */\n    tag_118:\n        /* \"contracts/Stakable.sol\":12897:12902  false */\n      0x00\n        /* \"contracts/Stakable.sol\":12858:12902  voters[msg.sender].voted[_votingId] == false */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":12858:12864  voters */\n      0x07\n        /* \"contracts/Stakable.sol\":12858:12876  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":12865:12875  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":12858:12876  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":12858:12882  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":12858:12893  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":12883:12892  _votingId */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":12858:12893  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":12858:12902  voters[msg.sender].voted[_votingId] == false */\n      pop\n        /* \"contracts/Stakable.sol\":12937:12938  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":12912:12922  votedUsers */\n      0x08\n        /* \"contracts/Stakable.sol\":12912:12933  votedUsers[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":12923:12932  _votingId */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":12912:12933  votedUsers[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable.sol\":12912:12938  votedUsers[_votingId] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":12533:12945  function retractVote() public nonReentrant votingStatusTrue isVoter {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":8674:9801  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_32:\n        /* \"contracts/Stakable.sol\":8717:8738  StakingSummary memory */\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"contracts/Stakable.sol\":8750:8773  Stake memory user_stake */\n      0x00\n        /* \"contracts/Stakable.sol\":8776:8788  stakeholders */\n      0x0b\n        /* \"contracts/Stakable.sol\":8776:8800  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":8789:8799  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":8776:8800  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":8750:8800  Stake memory user_stake = stakeholders[msg.sender] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":8896:8897  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":8875:8885  user_stake */\n      dup2\n        /* \"contracts/Stakable.sol\":8875:8892  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8875:8897  user_stake.amount <= 0 */\n      gt\n        /* \"contracts/Stakable.sol\":8871:8956  if (user_stake.amount <= 0) {... */\n      tag_124\n      jumpi\n        /* \"contracts/Stakable.sol\":8920:8945  Staking__noStakingFound() */\n      mload(0x40)\n      0xb018f08700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":8871:8956  if (user_stake.amount <= 0) {... */\n    tag_124:\n        /* \"contracts/Stakable.sol\":8965:8994  StakingSummary memory summary */\n      0x00\n        /* \"contracts/Stakable.sol\":8997:9029  StakingSummary(0, 0, user_stake) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakable.sol\":9012:9013  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":8997:9029  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":9015:9016  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":8997:9029  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":9018:9028  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":8997:9029  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":8965:9029  StakingSummary memory summary = StakingSummary(0, 0, user_stake) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":9040:9054  uint256 reward */\n      0x00\n        /* \"contracts/Stakable.sol\":9057:9090  _calculateStakeReward(user_stake) */\n      tag_125\n        /* \"contracts/Stakable.sol\":9079:9089  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":9057:9078  _calculateStakeReward */\n      tag_126\n        /* \"contracts/Stakable.sol\":9057:9090  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/Stakable.sol\":9040:9090  uint256 reward = _calculateStakeReward(user_stake) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":9133:9148  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":9105:9112  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":9105:9118  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9105:9130  summary.stake.releaseTime */\n      0x60\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9105:9148  summary.stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stakable.sol\":9101:9417  if (summary.stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/Stakable.sol\":9346:9406  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      tag_128\n        /* \"contracts/Stakable.sol\":9359:9399  SafeMath.mul(reward, stakingPenaltyRate) */\n      tag_129\n        /* \"contracts/Stakable.sol\":9372:9378  reward */\n      dup3\n        /* \"contracts/Stakable.sol\":9380:9398  stakingPenaltyRate */\n      sload(0x01)\n        /* \"contracts/Stakable.sol\":9359:9371  SafeMath.mul */\n      tag_130\n        /* \"contracts/Stakable.sol\":9359:9399  SafeMath.mul(reward, stakingPenaltyRate) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Stakable.sol\":9401:9405  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":9346:9358  SafeMath.div */\n      tag_131\n        /* \"contracts/Stakable.sol\":9346:9406  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/Stakable.sol\":9198:9327  SafeMath.div(... */\n      tag_132\n        /* \"contracts/Stakable.sol\":9232:9283  SafeMath.mul(user_stake.amount, stakingPenaltyRate) */\n      tag_133\n        /* \"contracts/Stakable.sol\":9245:9255  user_stake */\n      dup6\n        /* \"contracts/Stakable.sol\":9245:9262  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9264:9282  stakingPenaltyRate */\n      sload(0x01)\n        /* \"contracts/Stakable.sol\":9232:9244  SafeMath.mul */\n      tag_130\n        /* \"contracts/Stakable.sol\":9232:9283  SafeMath.mul(user_stake.amount, stakingPenaltyRate) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/Stakable.sol\":9305:9309  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":9198:9210  SafeMath.div */\n      tag_131\n        /* \"contracts/Stakable.sol\":9198:9327  SafeMath.div(... */\n      jump\t// in\n    tag_132:\n        /* \"contracts/Stakable.sol\":9198:9406  SafeMath.div(... */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/Stakable.sol\":9164:9171  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":9164:9179  summary.penalty */\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":9164:9406  summary.penalty =... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":9101:9417  if (summary.stake.releaseTime > block.timestamp) {... */\n    tag_127:\n        /* \"contracts/Stakable.sol\":9476:9477  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":9431:9473  _calculateWeek(user_stake.latestClaimDrop) */\n      tag_136\n        /* \"contracts/Stakable.sol\":9446:9456  user_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":9446:9472  user_stake.latestClaimDrop */\n      0xc0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9431:9445  _calculateWeek */\n      tag_137\n        /* \"contracts/Stakable.sol\":9431:9473  _calculateWeek(user_stake.latestClaimDrop) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/Stakable.sol\":9431:9477  _calculateWeek(user_stake.latestClaimDrop) > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":9427:9677  if (_calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"contracts/Stakable.sol\":9493:9508  uint256 airdrop */\n      0x00\n        /* \"contracts/Stakable.sol\":9511:9547  _calculateAirdrop(user_stake.amount) */\n      tag_139\n        /* \"contracts/Stakable.sol\":9529:9539  user_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":9529:9546  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9511:9528  _calculateAirdrop */\n      tag_140\n        /* \"contracts/Stakable.sol\":9511:9547  _calculateAirdrop(user_stake.amount) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/Stakable.sol\":9493:9547  uint256 airdrop = _calculateAirdrop(user_stake.amount) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":9594:9601  airdrop */\n      dup1\n        /* \"contracts/Stakable.sol\":9561:9568  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":9561:9574  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9561:9591  summary.stake.claimableAirdrop */\n      0xa0\n      add\n        /* \"contracts/Stakable.sol\":9561:9601  summary.stake.claimableAirdrop = airdrop */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":9479:9612  {... */\n      pop\n        /* \"contracts/Stakable.sol\":9427:9677  if (_calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n      jump(tag_141)\n    tag_138:\n        /* \"contracts/Stakable.sol\":9665:9666  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":9632:9639  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":9632:9645  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9632:9662  summary.stake.claimableAirdrop */\n      0xa0\n      add\n        /* \"contracts/Stakable.sol\":9632:9666  summary.stake.claimableAirdrop = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":9427:9677  if (_calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n    tag_141:\n        /* \"contracts/Stakable.sol\":9713:9719  reward */\n      dup1\n        /* \"contracts/Stakable.sol\":9687:9694  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":9687:9700  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9687:9710  summary.stake.claimable */\n      0x80\n      add\n        /* \"contracts/Stakable.sol\":9687:9719  summary.stake.claimable = reward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":9752:9762  user_stake */\n      dup3\n        /* \"contracts/Stakable.sol\":9752:9769  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9729:9736  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":9729:9749  summary.total_amount */\n      0x00\n      add\n        /* \"contracts/Stakable.sol\":9729:9769  summary.total_amount = user_stake.amount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":9787:9794  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":9780:9794  return summary */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":8674:9801  function hasStake() external view returns (StakingSummary memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":4409:4502  function changeTalaxAddress(address talax) external onlyOwner {... */\n    tag_38:\n        /* \"contracts/Stakable.sol\":3678:3687  isOwner() */\n      tag_143\n        /* \"contracts/Stakable.sol\":3678:3685  isOwner */\n      tag_144\n        /* \"contracts/Stakable.sol\":3678:3687  isOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Stakable.sol\":4490:4495  talax */\n      dup1\n        /* \"contracts/Stakable.sol\":4481:4487  _talax */\n      0x09\n      0x00\n        /* \"contracts/Stakable.sol\":4481:4495  _talax = talax */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":4409:4502  function changeTalaxAddress(address talax) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":11835:12118  function startVoting() external nonReentrant onlyTalax {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_110\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      tag_150\n        /* \"contracts/Stakable.sol\":3416:3423  isTalax */\n      tag_151\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/Stakable.sol\":11994:11998  true */\n      0x01\n        /* \"contracts/Stakable.sol\":11977:11998  _votingStatus == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":11977:11990  _votingStatus */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":11977:11998  _votingStatus == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":11973:12057  if (_votingStatus == true) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"contracts/Stakable.sol\":12021:12046  Voting__votingIsRunning() */\n      mload(0x40)\n      0x6da4cd2e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":11973:12057  if (_votingStatus == true) {... */\n    tag_153:\n        /* \"contracts/Stakable.sol\":12083:12087  true */\n      0x01\n        /* \"contracts/Stakable.sol\":12067:12080  _votingStatus */\n      0x04\n      0x00\n        /* \"contracts/Stakable.sol\":12067:12087  _votingStatus = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":12110:12111  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":12097:12106  _votingId */\n      0x05\n      0x00\n        /* \"contracts/Stakable.sol\":12097:12111  _votingId += 1 */\n      dup3\n      dup3\n      sload\n      tag_154\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_154:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":11835:12118  function startVoting() external nonReentrant onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":11627:11776  function getVoters(address user) external view returns (bool, bool) {... */\n    tag_43:\n        /* \"contracts/Stakable.sol\":11683:11687  bool */\n      0x00\n        /* \"contracts/Stakable.sol\":11689:11693  bool */\n      dup1\n        /* \"contracts/Stakable.sol\":11713:11719  voters */\n      0x07\n        /* \"contracts/Stakable.sol\":11713:11725  voters[user] */\n      0x00\n        /* \"contracts/Stakable.sol\":11720:11724  user */\n      dup5\n        /* \"contracts/Stakable.sol\":11713:11725  voters[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":11713:11737  voters[user].votingRight */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":11739:11745  voters */\n      0x07\n        /* \"contracts/Stakable.sol\":11739:11751  voters[user] */\n      0x00\n        /* \"contracts/Stakable.sol\":11746:11750  user */\n      dup6\n        /* \"contracts/Stakable.sol\":11739:11751  voters[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":11739:11757  voters[user].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":11739:11768  voters[user].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":11758:11767  _votingId */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":11739:11768  voters[user].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":11705:11769  return (voters[user].votingRight, voters[user].voted[_votingId]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":11627:11776  function getVoters(address user) external view returns (bool, bool) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1511:1532  address public _talax */\n    tag_47:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1382:1408  uint256 public totalVoters */\n    tag_51:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":12124:12527  function vote() public nonReentrant votingStatusTrue isVoter {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_110\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":4259:4279  _checkVotingStatus() */\n      tag_160\n        /* \"contracts/Stakable.sol\":4259:4277  _checkVotingStatus */\n      tag_113\n        /* \"contracts/Stakable.sol\":4259:4279  _checkVotingStatus() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/Stakable.sol\":3977:3987  _isVoter() */\n      tag_162\n        /* \"contracts/Stakable.sol\":3977:3985  _isVoter */\n      tag_116\n        /* \"contracts/Stakable.sol\":3977:3987  _isVoter() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/Stakable.sol\":12372:12376  true */\n      0x01\n        /* \"contracts/Stakable.sol\":12333:12376  voters[msg.sender].voted[_votingId] == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":12333:12339  voters */\n      0x07\n        /* \"contracts/Stakable.sol\":12333:12351  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":12340:12350  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":12333:12351  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":12333:12357  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":12333:12368  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":12358:12367  _votingId */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":12333:12368  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":12333:12376  voters[msg.sender].voted[_votingId] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":12329:12432  if (voters[msg.sender].voted[_votingId] == true) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/Stakable.sol\":12399:12421  Voting__alreadyVoted() */\n      mload(0x40)\n      0x740e33b000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":12329:12432  if (voters[msg.sender].voted[_votingId] == true) {... */\n    tag_164:\n        /* \"contracts/Stakable.sol\":12480:12484  true */\n      0x01\n        /* \"contracts/Stakable.sol\":12442:12448  voters */\n      0x07\n        /* \"contracts/Stakable.sol\":12442:12460  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":12449:12459  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":12442:12460  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":12442:12466  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":12442:12477  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":12467:12476  _votingId */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":12442:12477  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable.sol\":12442:12484  voters[msg.sender].voted[_votingId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":12519:12520  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":12494:12504  votedUsers */\n      0x08\n        /* \"contracts/Stakable.sol\":12494:12515  votedUsers[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":12505:12514  _votingId */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":12494:12515  votedUsers[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable.sol\":12494:12520  votedUsers[_votingId] += 1 */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":12124:12527  function vote() public nonReentrant votingStatusTrue isVoter {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10577:11305  function claimAirdrop(address user)... */\n    tag_58:\n        /* \"contracts/Stakable.sol\":10678:10685  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      tag_167\n        /* \"contracts/Stakable.sol\":3416:3423  isTalax */\n      tag_151\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/Stakable.sol\":10746:10765  Stake memory staker */\n      0x00\n        /* \"contracts/Stakable.sol\":10768:10780  stakeholders */\n      0x0b\n        /* \"contracts/Stakable.sol\":10768:10786  stakeholders[user] */\n      0x00\n        /* \"contracts/Stakable.sol\":10781:10785  user */\n      dup5\n        /* \"contracts/Stakable.sol\":10768:10786  stakeholders[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":10746:10786  Stake memory staker = stakeholders[user] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":10817:10818  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":10801:10807  staker */\n      dup2\n        /* \"contracts/Stakable.sol\":10801:10814  staker.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10801:10818  staker.amount > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":10797:11299  if (staker.amount > 0) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"contracts/Stakable.sol\":11028:11029  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":10986:11024  _calculateWeek(staker.latestClaimDrop) */\n      tag_170\n        /* \"contracts/Stakable.sol\":11001:11007  staker */\n      dup3\n        /* \"contracts/Stakable.sol\":11001:11023  staker.latestClaimDrop */\n      0xc0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10986:11000  _calculateWeek */\n      tag_137\n        /* \"contracts/Stakable.sol\":10986:11024  _calculateWeek(staker.latestClaimDrop) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/Stakable.sol\":10986:11029  _calculateWeek(staker.latestClaimDrop) <= 0 */\n      gt\n        /* \"contracts/Stakable.sol\":10982:11100  if (_calculateWeek(staker.latestClaimDrop) <= 0) {... */\n      tag_171\n      jumpi\n        /* \"contracts/Stakable.sol\":11056:11085  Airdrop__claimableOnceAWeek() */\n      mload(0x40)\n      0xdd8456cc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":10982:11100  if (_calculateWeek(staker.latestClaimDrop) <= 0) {... */\n    tag_171:\n        /* \"contracts/Stakable.sol\":11140:11141  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":11114:11120  staker */\n      dup2\n        /* \"contracts/Stakable.sol\":11114:11137  staker.claimableAirdrop */\n      0xa0\n      add\n        /* \"contracts/Stakable.sol\":11114:11141  staker.claimableAirdrop = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":11180:11195  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":11155:11161  staker */\n      dup2\n        /* \"contracts/Stakable.sol\":11155:11177  staker.latestClaimDrop */\n      0xc0\n      add\n        /* \"contracts/Stakable.sol\":11155:11195  staker.latestClaimDrop = block.timestamp */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":11217:11249  _calculateAirdrop(staker.amount) */\n      tag_172\n        /* \"contracts/Stakable.sol\":11235:11241  staker */\n      dup2\n        /* \"contracts/Stakable.sol\":11235:11248  staker.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11217:11234  _calculateAirdrop */\n      tag_140\n        /* \"contracts/Stakable.sol\":11217:11249  _calculateAirdrop(staker.amount) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/Stakable.sol\":11210:11249  return _calculateAirdrop(staker.amount) */\n      swap2\n      pop\n      pop\n      jump(tag_168)\n        /* \"contracts/Stakable.sol\":10797:11299  if (staker.amount > 0) {... */\n    tag_169:\n        /* \"contracts/Stakable.sol\":11287:11288  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":11280:11288  return 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":3435:3436  _ */\n    tag_168:\n        /* \"contracts/Stakable.sol\":10577:11305  function claimAirdrop(address user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":12951:13439  function getVotingResult()... */\n    tag_61:\n        /* \"contracts/Stakable.sol\":13068:13072  bool */\n      0x00\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      tag_175\n        /* \"contracts/Stakable.sol\":3416:3423  isTalax */\n      tag_151\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/Stakable.sol\":4259:4279  _checkVotingStatus() */\n      tag_177\n        /* \"contracts/Stakable.sol\":4259:4277  _checkVotingStatus */\n      tag_113\n        /* \"contracts/Stakable.sol\":4259:4279  _checkVotingStatus() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/Stakable.sol\":13165:13166  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":13150:13161  totalVoters */\n      sload(0x06)\n        /* \"contracts/Stakable.sol\":13150:13166  totalVoters <= 1 */\n      gt\n        /* \"contracts/Stakable.sol\":13146:13225  if (totalVoters <= 1) {... */\n      tag_179\n      jumpi\n        /* \"contracts/Stakable.sol\":13189:13214  Voting__notEnoughVoters() */\n      mload(0x40)\n      0x2f9686de00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":13146:13225  if (totalVoters <= 1) {... */\n    tag_179:\n        /* \"contracts/Stakable.sol\":13234:13253  uint256 half_voters */\n      0x00\n        /* \"contracts/Stakable.sol\":13256:13302  SafeMath.div(SafeMath.mul(totalVoters, 5), 10) */\n      tag_180\n        /* \"contracts/Stakable.sol\":13269:13297  SafeMath.mul(totalVoters, 5) */\n      tag_181\n        /* \"contracts/Stakable.sol\":13282:13293  totalVoters */\n      sload(0x06)\n        /* \"contracts/Stakable.sol\":13295:13296  5 */\n      0x05\n        /* \"contracts/Stakable.sol\":13269:13281  SafeMath.mul */\n      tag_130\n        /* \"contracts/Stakable.sol\":13269:13297  SafeMath.mul(totalVoters, 5) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/Stakable.sol\":13299:13301  10 */\n      0x0a\n        /* \"contracts/Stakable.sol\":13256:13268  SafeMath.div */\n      tag_131\n        /* \"contracts/Stakable.sol\":13256:13302  SafeMath.div(SafeMath.mul(totalVoters, 5), 10) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/Stakable.sol\":13234:13302  uint256 half_voters = SafeMath.div(SafeMath.mul(totalVoters, 5), 10) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":13341:13352  half_voters */\n      dup1\n        /* \"contracts/Stakable.sol\":13317:13327  votedUsers */\n      0x08\n        /* \"contracts/Stakable.sol\":13317:13338  votedUsers[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":13328:13337  _votingId */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":13317:13338  votedUsers[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stakable.sol\":13317:13352  votedUsers[_votingId] > half_voters */\n      gt\n        /* \"contracts/Stakable.sol\":13313:13433  if (votedUsers[_votingId] > half_voters) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"contracts/Stakable.sol\":13375:13379  true */\n      0x01\n        /* \"contracts/Stakable.sol\":13368:13379  return true */\n      swap2\n      pop\n      pop\n      jump(tag_178)\n        /* \"contracts/Stakable.sol\":13313:13433  if (votedUsers[_votingId] > half_voters) {... */\n    tag_182:\n        /* \"contracts/Stakable.sol\":13417:13422  false */\n      0x00\n        /* \"contracts/Stakable.sol\":13410:13422  return false */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":4289:4290  _ */\n    tag_178:\n        /* \"contracts/Stakable.sol\":12951:13439  function getVotingResult()... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":9913:10008  function startAirdropSince() external onlyTalax {... */\n    tag_65:\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      tag_185\n        /* \"contracts/Stakable.sol\":3416:3423  isTalax */\n      tag_151\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/Stakable.sol\":9986:10001  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":9971:9983  airdropSince */\n      0x03\n        /* \"contracts/Stakable.sol\":9971:10001  airdropSince = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":9913:10008  function startAirdropSince() external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1251:1277  uint256 public airdropRate */\n    tag_67:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5893:6199  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n    tag_72:\n        /* \"contracts/Stakable.sol\":3678:3687  isOwner() */\n      tag_188\n        /* \"contracts/Stakable.sol\":3678:3685  isOwner */\n      tag_144\n        /* \"contracts/Stakable.sol\":3678:3687  isOwner() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/Stakable.sol\":6051:6053  30 */\n      0x1e\n        /* \"contracts/Stakable.sol\":6042:6048  amount */\n      dup2\n        /* \"contracts/Stakable.sol\":6042:6053  amount > 30 */\n      gt\n        /* \"contracts/Stakable.sol\":6038:6119  if (amount > 30) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/Stakable.sol\":6076:6108  Staking__penaltyExceed3Percent() */\n      mload(0x40)\n      0xf1a470d700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":6038:6119  if (amount > 30) {... */\n    tag_190:\n        /* \"contracts/Stakable.sol\":6149:6155  amount */\n      dup1\n        /* \"contracts/Stakable.sol\":6128:6146  stakingPenaltyRate */\n      0x01\n        /* \"contracts/Stakable.sol\":6128:6155  stakingPenaltyRate = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":6170:6192  PenaltyChanged(amount) */\n      0xcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a9\n        /* \"contracts/Stakable.sol\":6185:6191  amount */\n      dup2\n        /* \"contracts/Stakable.sol\":6170:6192  PenaltyChanged(amount) */\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stakable.sol\":5893:6199  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1459:1504  mapping(uint256 => uint256) public votedUsers */\n    tag_75:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1414:1453  mapping(address => Voter) public voters */\n    tag_79:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1538:1559  address public _owner */\n    tag_82:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1283:1310  uint256 public airdropSince */\n    tag_85:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":7870:8668  function withdrawStake(address user)... */\n    tag_89:\n        /* \"contracts/Stakable.sol\":7980:7987  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":7989:7996  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_110\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      tag_196\n        /* \"contracts/Stakable.sol\":3416:3423  isTalax */\n      tag_151\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/Stakable.sol\":8113:8136  Stake memory user_stake */\n      0x00\n        /* \"contracts/Stakable.sol\":8139:8151  stakeholders */\n      0x0b\n        /* \"contracts/Stakable.sol\":8139:8157  stakeholders[user] */\n      0x00\n        /* \"contracts/Stakable.sol\":8152:8156  user */\n      dup6\n        /* \"contracts/Stakable.sol\":8139:8157  stakeholders[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":8113:8157  Stake memory user_stake = stakeholders[user] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":8175:8187  stakeholders */\n      0x0b\n        /* \"contracts/Stakable.sol\":8175:8193  stakeholders[user] */\n      0x00\n        /* \"contracts/Stakable.sol\":8188:8192  user */\n      dup6\n        /* \"contracts/Stakable.sol\":8175:8193  stakeholders[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable.sol\":8168:8193  delete stakeholders[user] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x06\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":8233:8248  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":8208:8218  user_stake */\n      dup2\n        /* \"contracts/Stakable.sol\":8208:8230  user_stake.releaseTime */\n      0x60\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8208:8248  user_stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stakable.sol\":8204:8518  if (user_stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/Stakable.sol\":8279:8280  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":8264:8275  totalVoters */\n      0x06\n      0x00\n        /* \"contracts/Stakable.sol\":8264:8280  totalVoters -= 1 */\n      dup3\n      dup3\n      sload\n      tag_199\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_199:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":8301:8307  voters */\n      0x07\n        /* \"contracts/Stakable.sol\":8301:8313  voters[user] */\n      0x00\n        /* \"contracts/Stakable.sol\":8308:8312  user */\n      dup6\n        /* \"contracts/Stakable.sol\":8301:8313  voters[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":8301:8319  voters[user].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":8301:8330  voters[user].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":8320:8329  _votingId */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":8301:8330  voters[user].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable.sol\":8294:8330  delete voters[user].voted[_votingId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":8367:8507  _calculateStakingWithPenalty(... */\n      tag_200\n        /* \"contracts/Stakable.sol\":8417:8427  user_stake */\n      dup2\n        /* \"contracts/Stakable.sol\":8417:8434  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8456:8489  _calculateStakeReward(user_stake) */\n      tag_201\n        /* \"contracts/Stakable.sol\":8478:8488  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":8456:8477  _calculateStakeReward */\n      tag_126\n        /* \"contracts/Stakable.sol\":8456:8489  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/Stakable.sol\":8367:8395  _calculateStakingWithPenalty */\n      tag_202\n        /* \"contracts/Stakable.sol\":8367:8507  _calculateStakingWithPenalty(... */\n      jump\t// in\n    tag_200:\n        /* \"contracts/Stakable.sol\":8344:8507  return... */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_197)\n        /* \"contracts/Stakable.sol\":8204:8518  if (user_stake.releaseTime > block.timestamp) {... */\n    tag_198:\n        /* \"contracts/Stakable.sol\":8543:8544  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":8528:8539  totalVoters */\n      0x06\n      0x00\n        /* \"contracts/Stakable.sol\":8528:8544  totalVoters -= 1 */\n      dup3\n      dup3\n      sload\n      tag_203\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_203:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":8561:8567  voters */\n      0x07\n        /* \"contracts/Stakable.sol\":8561:8573  voters[user] */\n      0x00\n        /* \"contracts/Stakable.sol\":8568:8572  user */\n      dup6\n        /* \"contracts/Stakable.sol\":8561:8573  voters[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":8561:8579  voters[user].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":8561:8590  voters[user].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":8580:8589  _votingId */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":8561:8590  voters[user].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable.sol\":8554:8590  delete voters[user].voted[_votingId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":8608:8618  user_stake */\n      dup1\n        /* \"contracts/Stakable.sol\":8608:8625  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8627:8660  _calculateStakeReward(user_stake) */\n      tag_204\n        /* \"contracts/Stakable.sol\":8649:8659  user_stake */\n      dup3\n        /* \"contracts/Stakable.sol\":8627:8648  _calculateStakeReward */\n      tag_126\n        /* \"contracts/Stakable.sol\":8627:8660  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/Stakable.sol\":8600:8661  return (user_stake.amount, _calculateStakeReward(user_stake)) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":3435:3436  _ */\n    tag_197:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":7870:8668  function withdrawStake(address user)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1212:1245  uint256 public stakingPenaltyRate */\n    tag_93:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":11311:11515  function airdropWeek() public view returns (uint256) {... */\n    tag_96:\n        /* \"contracts/Stakable.sol\":11355:11362  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":11394:11395  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":11378:11390  airdropSince */\n      sload(0x03)\n        /* \"contracts/Stakable.sol\":11378:11395  airdropSince != 0 */\n      eq\n        /* \"contracts/Stakable.sol\":11374:11509  if (airdropSince != 0) {... */\n      tag_206\n      jumpi\n        /* \"contracts/Stakable.sol\":11453:11459  7 days */\n      0x093a80\n        /* \"contracts/Stakable.sol\":11437:11449  airdropSince */\n      sload(0x03)\n        /* \"contracts/Stakable.sol\":11419:11434  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":11419:11449  block.timestamp - airdropSince */\n      tag_207\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_207:\n        /* \"contracts/Stakable.sol\":11418:11459  (block.timestamp - airdropSince) / 7 days */\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"contracts/Stakable.sol\":11411:11459  return (block.timestamp - airdropSince) / 7 days */\n      swap1\n      pop\n      jump(tag_205)\n        /* \"contracts/Stakable.sol\":11374:11509  if (airdropSince != 0) {... */\n    tag_206:\n        /* \"contracts/Stakable.sol\":11497:11498  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":11490:11498  return 0 */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":11311:11515  function airdropWeek() public view returns (uint256) {... */\n    tag_205:\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10014:10248  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n    tag_100:\n        /* \"contracts/Stakable.sol\":3678:3687  isOwner() */\n      tag_212\n        /* \"contracts/Stakable.sol\":3678:3685  isOwner */\n      tag_144\n        /* \"contracts/Stakable.sol\":3678:3687  isOwner() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/Stakable.sol\":10105:10108  200 */\n      0xc8\n        /* \"contracts/Stakable.sol\":10096:10102  amount */\n      dup2\n        /* \"contracts/Stakable.sol\":10096:10108  amount > 200 */\n      gt\n        /* \"contracts/Stakable.sol\":10092:10175  if (amount > 200) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/Stakable.sol\":10131:10164  Staking__airdropExceed20Percent() */\n      mload(0x40)\n      0xa552cf1000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":10092:10175  if (amount > 200) {... */\n    tag_214:\n        /* \"contracts/Stakable.sol\":10198:10204  amount */\n      dup1\n        /* \"contracts/Stakable.sol\":10184:10195  airdropRate */\n      0x02\n        /* \"contracts/Stakable.sol\":10184:10204  airdropRate = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":10219:10241  AirdropChanged(amount) */\n      0xcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e\n        /* \"contracts/Stakable.sol\":10234:10240  amount */\n      dup2\n        /* \"contracts/Stakable.sol\":10219:10241  AirdropChanged(amount) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stakable.sol\":10014:10248  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":4713:5887  function stake(... */\n    tag_104:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_110\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      tag_220\n        /* \"contracts/Stakable.sol\":3416:3423  isTalax */\n      tag_151\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/Stakable.sol\":5003:5004  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":4993:4999  amount */\n      dup4\n        /* \"contracts/Stakable.sol\":4993:5004  amount <= 0 */\n      gt\n        /* \"contracts/Stakable.sol\":4989:5067  if (amount <= 0) {... */\n      tag_222\n      jumpi\n        /* \"contracts/Stakable.sol\":5027:5056  Staking__cannotStakeNothing() */\n      mload(0x40)\n      0x88b440d600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":4989:5067  if (amount <= 0) {... */\n    tag_222:\n        /* \"contracts/Stakable.sol\":5181:5182  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":5152:5164  stakeholders */\n      0x0b\n        /* \"contracts/Stakable.sol\":5152:5170  stakeholders[user] */\n      0x00\n        /* \"contracts/Stakable.sol\":5165:5169  user */\n      dup7\n        /* \"contracts/Stakable.sol\":5152:5170  stakeholders[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":5152:5177  stakeholders[user].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Stakable.sol\":5152:5182  stakeholders[user].amount != 0 */\n      eq\n        /* \"contracts/Stakable.sol\":5148:5239  if (stakeholders[user].amount != 0) {... */\n      tag_223\n      jumpi\n        /* \"contracts/Stakable.sol\":5205:5228  Staking__userIsStaker() */\n      mload(0x40)\n      0x04462d2700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":5148:5239  if (stakeholders[user].amount != 0) {... */\n    tag_223:\n        /* \"contracts/Stakable.sol\":5264:5265  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":5249:5260  totalVoters */\n      0x06\n      0x00\n        /* \"contracts/Stakable.sol\":5249:5265  totalVoters += 1 */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_224:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":5302:5306  true */\n      0x01\n        /* \"contracts/Stakable.sol\":5275:5281  voters */\n      0x07\n        /* \"contracts/Stakable.sol\":5275:5287  voters[user] */\n      0x00\n        /* \"contracts/Stakable.sol\":5282:5286  user */\n      dup7\n        /* \"contracts/Stakable.sol\":5275:5287  voters[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":5275:5299  voters[user].votingRight */\n      0x00\n      add\n      0x00\n        /* \"contracts/Stakable.sol\":5275:5306  voters[user].votingRight = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":5404:5421  uint256 timestamp */\n      0x00\n        /* \"contracts/Stakable.sol\":5424:5439  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":5404:5439  uint256 timestamp = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":5589:5755  Stake(... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakable.sol\":5608:5614  amount */\n      dup6\n        /* \"contracts/Stakable.sol\":5589:5755  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":5628:5637  timestamp */\n      dup3\n        /* \"contracts/Stakable.sol\":5589:5755  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":5651:5661  rewardRate */\n      dup4\n        /* \"contracts/Stakable.sol\":5589:5755  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":5690:5699  timestamp */\n      dup3\n        /* \"contracts/Stakable.sol\":5676:5687  stakePeriod */\n      dup6\n        /* \"contracts/Stakable.sol\":5676:5699  stakePeriod + timestamp */\n      tag_225\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_225:\n        /* \"contracts/Stakable.sol\":5589:5755  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":5714:5715  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":5589:5755  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":5729:5730  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":5589:5755  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":5744:5745  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":5589:5755  Stake(... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":5568:5580  stakeholders */\n      0x0b\n        /* \"contracts/Stakable.sol\":5568:5586  stakeholders[user] */\n      0x00\n        /* \"contracts/Stakable.sol\":5581:5585  user */\n      dup8\n        /* \"contracts/Stakable.sol\":5568:5586  stakeholders[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":5568:5755  stakeholders[user] = Stake(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":5829:5833  user */\n      dup5\n        /* \"contracts/Stakable.sol\":5822:5880  Staked(user, amount, timestamp, (stakePeriod + timestamp)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n        /* \"contracts/Stakable.sol\":5835:5841  amount */\n      dup6\n        /* \"contracts/Stakable.sol\":5843:5852  timestamp */\n      dup4\n        /* \"contracts/Stakable.sol\":5869:5878  timestamp */\n      dup5\n        /* \"contracts/Stakable.sol\":5855:5866  stakePeriod */\n      dup8\n        /* \"contracts/Stakable.sol\":5855:5878  stakePeriod + timestamp */\n      tag_226\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_226:\n        /* \"contracts/Stakable.sol\":5822:5880  Staked(user, amount, timestamp, (stakePeriod + timestamp)) */\n      mload(0x40)\n      tag_227\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Stakable.sol\":4869:5887  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":4713:5887  function stake(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":13445:13541  function stopVoting() external onlyTalax votingStatusTrue {... */\n    tag_106:\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      tag_230\n        /* \"contracts/Stakable.sol\":3416:3423  isTalax */\n      tag_151\n        /* \"contracts/Stakable.sol\":3416:3425  isTalax() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/Stakable.sol\":4259:4279  _checkVotingStatus() */\n      tag_232\n        /* \"contracts/Stakable.sol\":4259:4277  _checkVotingStatus */\n      tag_113\n        /* \"contracts/Stakable.sol\":4259:4279  _checkVotingStatus() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/Stakable.sol\":13529:13534  false */\n      0x00\n        /* \"contracts/Stakable.sol\":13513:13526  _votingStatus */\n      0x04\n      0x00\n        /* \"contracts/Stakable.sol\":13513:13534  _votingStatus = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":13445:13541  function stopVoting() external onlyTalax votingStatusTrue {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":4011:4215  function _checkVotingStatus() internal view {... */\n    tag_113:\n        /* \"contracts/Stakable.sol\":4132:4145  _votingStatus */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":4127:4209  if (!_votingStatus) {... */\n      tag_235\n      jumpi\n        /* \"contracts/Stakable.sol\":4168:4198  Function__votingNotAvailable() */\n      mload(0x40)\n      0xa1d1891400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":4127:4209  if (!_votingStatus) {... */\n    tag_235:\n        /* \"contracts/Stakable.sol\":4011:4215  function _checkVotingStatus() internal view {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":3711:3942  function _isVoter() internal view {... */\n    tag_116:\n        /* \"contracts/Stakable.sol\":3876:3881  false */\n      0x00\n        /* \"contracts/Stakable.sol\":3842:3881  voters[msg.sender].votingRight == false */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":3842:3848  voters */\n      0x07\n        /* \"contracts/Stakable.sol\":3842:3860  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":3849:3859  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":3842:3860  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":3842:3872  voters[msg.sender].votingRight */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":3842:3881  voters[msg.sender].votingRight == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":3838:3936  if (voters[msg.sender].votingRight == false) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"contracts/Stakable.sol\":3904:3925  Function__notAVoter() */\n      mload(0x40)\n      0x1e567dd400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":3838:3936  if (voters[msg.sender].votingRight == false) {... */\n    tag_237:\n        /* \"contracts/Stakable.sol\":3711:3942  function _isVoter() internal view {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":6560:6997  function _calculateStakeReward(Stake memory user_stake)... */\n    tag_126:\n        /* \"contracts/Stakable.sol\":6663:6670  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":6711:6712  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":6690:6700  user_stake */\n      dup3\n        /* \"contracts/Stakable.sol\":6690:6707  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6690:6712  user_stake.amount == 0 */\n      eq\n        /* \"contracts/Stakable.sol\":6686:6747  if (user_stake.amount == 0) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"contracts/Stakable.sol\":6735:6736  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":6728:6736  return 0 */\n      swap1\n      pop\n      jump(tag_238)\n        /* \"contracts/Stakable.sol\":6686:6747  if (user_stake.amount == 0) {... */\n    tag_239:\n        /* \"contracts/Stakable.sol\":6986:6990  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stakable.sol\":6939:6982  _calculateStakingDuration(user_stake.since) */\n      tag_240\n        /* \"contracts/Stakable.sol\":6965:6975  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":6965:6981  user_stake.since */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6939:6964  _calculateStakingDuration */\n      tag_241\n        /* \"contracts/Stakable.sol\":6939:6982  _calculateStakingDuration(user_stake.since) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/Stakable.sol\":6900:6910  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":6900:6920  user_stake.rewardAPY */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6864:6874  user_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":6864:6881  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6864:6920  user_stake.amount *... */\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"contracts/Stakable.sol\":6864:6982  user_stake.amount *... */\n      tag_244\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_244:\n        /* \"contracts/Stakable.sol\":6863:6990  (user_stake.amount *... */\n      tag_245\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_245:\n        /* \"contracts/Stakable.sol\":6844:6990  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":6560:6997  function _calculateStakeReward(Stake memory user_stake)... */\n    tag_238:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_247\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_249\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10254:10386  function _calculateWeek(uint256 input) internal view returns (uint256) {... */\n    tag_137:\n        /* \"contracts/Stakable.sol\":10316:10323  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":10342:10379  (block.timestamp - input).div(7 days) */\n      tag_251\n        /* \"contracts/Stakable.sol\":10372:10378  7 days */\n      0x093a80\n        /* \"contracts/Stakable.sol\":10361:10366  input */\n      dup4\n        /* \"contracts/Stakable.sol\":10343:10358  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":10343:10366  block.timestamp - input */\n      tag_252\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_252:\n        /* \"contracts/Stakable.sol\":10342:10371  (block.timestamp - input).div */\n      tag_131\n      swap1\n        /* \"contracts/Stakable.sol\":10342:10379  (block.timestamp - input).div(7 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_251:\n        /* \"contracts/Stakable.sol\":10335:10379  return (block.timestamp - input).div(7 days) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":10254:10386  function _calculateWeek(uint256 input) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10392:10571  function _calculateAirdrop(uint256 stakeAmount)... */\n    tag_140:\n        /* \"contracts/Stakable.sol\":10487:10494  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":10556:10564  52 weeks */\n      0x01dfe200\n        /* \"contracts/Stakable.sol\":10548:10552  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":10533:10544  airdropRate */\n      sload(0x02)\n        /* \"contracts/Stakable.sol\":10519:10530  stakeAmount */\n      dup5\n        /* \"contracts/Stakable.sol\":10519:10544  stakeAmount * airdropRate */\n      tag_254\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_254:\n        /* \"contracts/Stakable.sol\":10518:10552  (stakeAmount * airdropRate) / 1000 */\n      tag_255\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_255:\n        /* \"contracts/Stakable.sol\":10517:10564  ((stakeAmount * airdropRate) / 1000) / 52 weeks */\n      tag_256\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_256:\n        /* \"contracts/Stakable.sol\":10510:10564  return ((stakeAmount * airdropRate) / 1000) / 52 weeks */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":10392:10571  function _calculateAirdrop(uint256 stakeAmount)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":3449:3641  function isOwner() internal view {... */\n    tag_144:\n        /* \"contracts/Stakable.sol\":3570:3576  _owner */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stakable.sol\":3556:3576  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stakable.sol\":3556:3566  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":3556:3576  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Stakable.sol\":3552:3635  if (msg.sender != _owner) {... */\n      tag_258\n      jumpi\n        /* \"contracts/Stakable.sol\":3599:3624  Function__notAuthorized() */\n      mload(0x40)\n      0x2b4cf15200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":3552:3635  if (msg.sender != _owner) {... */\n    tag_258:\n        /* \"contracts/Stakable.sol\":3449:3641  function isOwner() internal view {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":3187:3379  function isTalax() internal view {... */\n    tag_151:\n        /* \"contracts/Stakable.sol\":3308:3314  _talax */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stakable.sol\":3294:3314  msg.sender != _talax */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stakable.sol\":3294:3304  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":3294:3314  msg.sender != _talax */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Stakable.sol\":3290:3373  if (msg.sender != _talax) {... */\n      tag_260\n      jumpi\n        /* \"contracts/Stakable.sol\":3337:3362  Function__notAuthorized() */\n      mload(0x40)\n      0x2b4cf15200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":3290:3373  if (msg.sender != _talax) {... */\n    tag_260:\n        /* \"contracts/Stakable.sol\":3187:3379  function isTalax() internal view {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":7003:7524  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n    tag_202:\n        /* \"contracts/Stakable.sol\":7120:7127  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":7129:7136  uint256 */\n      dup1\n        /* \"contracts/Stakable.sol\":7166:7167  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":7156:7162  amount */\n      dup5\n        /* \"contracts/Stakable.sol\":7156:7167  amount == 0 */\n      eq\n        /* \"contracts/Stakable.sol\":7152:7207  if (amount == 0) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"contracts/Stakable.sol\":7191:7192  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":7194:7195  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":7183:7196  return (0, 0) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_261)\n        /* \"contracts/Stakable.sol\":7152:7207  if (amount == 0) {... */\n    tag_262:\n        /* \"contracts/Stakable.sol\":7237:7365  SafeMath.sub(... */\n      tag_263\n        /* \"contracts/Stakable.sol\":7267:7273  amount */\n      dup5\n        /* \"contracts/Stakable.sol\":7291:7351  SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000) */\n      tag_264\n        /* \"contracts/Stakable.sol\":7304:7344  SafeMath.mul(amount, stakingPenaltyRate) */\n      tag_265\n        /* \"contracts/Stakable.sol\":7317:7323  amount */\n      dup8\n        /* \"contracts/Stakable.sol\":7325:7343  stakingPenaltyRate */\n      sload(0x01)\n        /* \"contracts/Stakable.sol\":7304:7316  SafeMath.mul */\n      tag_130\n        /* \"contracts/Stakable.sol\":7304:7344  SafeMath.mul(amount, stakingPenaltyRate) */\n      jump\t// in\n    tag_265:\n        /* \"contracts/Stakable.sol\":7346:7350  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":7291:7303  SafeMath.div */\n      tag_131\n        /* \"contracts/Stakable.sol\":7291:7351  SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/Stakable.sol\":7237:7249  SafeMath.sub */\n      tag_266\n        /* \"contracts/Stakable.sol\":7237:7365  SafeMath.sub(... */\n      jump\t// in\n    tag_263:\n        /* \"contracts/Stakable.sol\":7379:7507  SafeMath.sub(... */\n      tag_267\n        /* \"contracts/Stakable.sol\":7409:7415  reward */\n      dup5\n        /* \"contracts/Stakable.sol\":7433:7493  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      tag_268\n        /* \"contracts/Stakable.sol\":7446:7486  SafeMath.mul(reward, stakingPenaltyRate) */\n      tag_269\n        /* \"contracts/Stakable.sol\":7459:7465  reward */\n      dup8\n        /* \"contracts/Stakable.sol\":7467:7485  stakingPenaltyRate */\n      sload(0x01)\n        /* \"contracts/Stakable.sol\":7446:7458  SafeMath.mul */\n      tag_130\n        /* \"contracts/Stakable.sol\":7446:7486  SafeMath.mul(reward, stakingPenaltyRate) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/Stakable.sol\":7488:7492  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":7433:7445  SafeMath.div */\n      tag_131\n        /* \"contracts/Stakable.sol\":7433:7493  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      jump\t// in\n    tag_268:\n        /* \"contracts/Stakable.sol\":7379:7391  SafeMath.sub */\n      tag_266\n        /* \"contracts/Stakable.sol\":7379:7507  SafeMath.sub(... */\n      jump\t// in\n    tag_267:\n        /* \"contracts/Stakable.sol\":7216:7517  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":7003:7524  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n    tag_261:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":6205:6554  function _calculateStakingDuration(uint256 since)... */\n    tag_241:\n        /* \"contracts/Stakable.sol\":6302:6309  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":6396:6547  SafeMath.div(... */\n      tag_271\n        /* \"contracts/Stakable.sol\":6454:6458  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stakable.sol\":6445:6450  since */\n      dup4\n        /* \"contracts/Stakable.sol\":6427:6442  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":6427:6450  block.timestamp - since */\n      tag_272\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_272:\n        /* \"contracts/Stakable.sol\":6426:6458  (block.timestamp - since) * 1e24 */\n      tag_273\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_273:\n        /* \"contracts/Stakable.sol\":6476:6484  365 days */\n      0x01e13380\n        /* \"contracts/Stakable.sol\":6396:6547  SafeMath.div(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      0x4572726f722063616e6e6f74206469766964652074696d657374616d70000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":6396:6408  SafeMath.div */\n      tag_274\n        /* \"contracts/Stakable.sol\":6396:6547  SafeMath.div(... */\n      jump\t// in\n    tag_271:\n        /* \"contracts/Stakable.sol\":6377:6547  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":6205:6554  function _calculateStakingDuration(uint256 since)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_276\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5776:5783  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5831:5832  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5828  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5832  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5834:5846  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5819:5847  require(b > 0, errorMessage) */\n      swap1\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5872:5873  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5869  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5873  a / b */\n      dup2\n      tag_281\n      jumpi\n      tag_282\n      tag_283\n      jump\t// in\n    tag_282:\n    tag_281:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5861:5873  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_122:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_284\n      tag_285\n      jump\t// in\n    tag_284:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_285:\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_286:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:198   */\n    tag_287:\n        /* \"#utility.yul\":167:191   */\n      tag_314\n        /* \"#utility.yul\":185:190   */\n      dup2\n        /* \"#utility.yul\":167:191   */\n      tag_286\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":162:165   */\n      dup3\n        /* \"#utility.yul\":155:192   */\n      mstore\n        /* \"#utility.yul\":90:198   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":258:1662   */\n    tag_288:\n        /* \"#utility.yul\":389:393   */\n      0xe0\n        /* \"#utility.yul\":384:387   */\n      dup3\n        /* \"#utility.yul\":380:394   */\n      add\n        /* \"#utility.yul\":478:482   */\n      0x00\n        /* \"#utility.yul\":471:476   */\n      dup3\n        /* \"#utility.yul\":467:483   */\n      add\n        /* \"#utility.yul\":461:484   */\n      mload\n        /* \"#utility.yul\":497:560   */\n      tag_316\n        /* \"#utility.yul\":554:558   */\n      0x00\n        /* \"#utility.yul\":549:552   */\n      dup6\n        /* \"#utility.yul\":545:559   */\n      add\n        /* \"#utility.yul\":531:543   */\n      dup3\n        /* \"#utility.yul\":497:560   */\n      tag_287\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":404:570   */\n      pop\n        /* \"#utility.yul\":653:657   */\n      0x20\n        /* \"#utility.yul\":646:651   */\n      dup3\n        /* \"#utility.yul\":642:658   */\n      add\n        /* \"#utility.yul\":636:659   */\n      mload\n        /* \"#utility.yul\":672:735   */\n      tag_317\n        /* \"#utility.yul\":729:733   */\n      0x20\n        /* \"#utility.yul\":724:727   */\n      dup6\n        /* \"#utility.yul\":720:734   */\n      add\n        /* \"#utility.yul\":706:718   */\n      dup3\n        /* \"#utility.yul\":672:735   */\n      tag_287\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":580:745   */\n      pop\n        /* \"#utility.yul\":832:836   */\n      0x40\n        /* \"#utility.yul\":825:830   */\n      dup3\n        /* \"#utility.yul\":821:837   */\n      add\n        /* \"#utility.yul\":815:838   */\n      mload\n        /* \"#utility.yul\":851:914   */\n      tag_318\n        /* \"#utility.yul\":908:912   */\n      0x40\n        /* \"#utility.yul\":903:906   */\n      dup6\n        /* \"#utility.yul\":899:913   */\n      add\n        /* \"#utility.yul\":885:897   */\n      dup3\n        /* \"#utility.yul\":851:914   */\n      tag_287\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":755:924   */\n      pop\n        /* \"#utility.yul\":1013:1017   */\n      0x60\n        /* \"#utility.yul\":1006:1011   */\n      dup3\n        /* \"#utility.yul\":1002:1018   */\n      add\n        /* \"#utility.yul\":996:1019   */\n      mload\n        /* \"#utility.yul\":1032:1095   */\n      tag_319\n        /* \"#utility.yul\":1089:1093   */\n      0x60\n        /* \"#utility.yul\":1084:1087   */\n      dup6\n        /* \"#utility.yul\":1080:1094   */\n      add\n        /* \"#utility.yul\":1066:1078   */\n      dup3\n        /* \"#utility.yul\":1032:1095   */\n      tag_287\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":934:1105   */\n      pop\n        /* \"#utility.yul\":1192:1196   */\n      0x80\n        /* \"#utility.yul\":1185:1190   */\n      dup3\n        /* \"#utility.yul\":1181:1197   */\n      add\n        /* \"#utility.yul\":1175:1198   */\n      mload\n        /* \"#utility.yul\":1211:1274   */\n      tag_320\n        /* \"#utility.yul\":1268:1272   */\n      0x80\n        /* \"#utility.yul\":1263:1266   */\n      dup6\n        /* \"#utility.yul\":1259:1273   */\n      add\n        /* \"#utility.yul\":1245:1257   */\n      dup3\n        /* \"#utility.yul\":1211:1274   */\n      tag_287\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1115:1284   */\n      pop\n        /* \"#utility.yul\":1378:1382   */\n      0xa0\n        /* \"#utility.yul\":1371:1376   */\n      dup3\n        /* \"#utility.yul\":1367:1383   */\n      add\n        /* \"#utility.yul\":1361:1384   */\n      mload\n        /* \"#utility.yul\":1397:1460   */\n      tag_321\n        /* \"#utility.yul\":1454:1458   */\n      0xa0\n        /* \"#utility.yul\":1449:1452   */\n      dup6\n        /* \"#utility.yul\":1445:1459   */\n      add\n        /* \"#utility.yul\":1431:1443   */\n      dup3\n        /* \"#utility.yul\":1397:1460   */\n      tag_287\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1294:1470   */\n      pop\n        /* \"#utility.yul\":1563:1567   */\n      0xc0\n        /* \"#utility.yul\":1556:1561   */\n      dup3\n        /* \"#utility.yul\":1552:1568   */\n      add\n        /* \"#utility.yul\":1546:1569   */\n      mload\n        /* \"#utility.yul\":1582:1645   */\n      tag_322\n        /* \"#utility.yul\":1639:1643   */\n      0xc0\n        /* \"#utility.yul\":1634:1637   */\n      dup6\n        /* \"#utility.yul\":1630:1644   */\n      add\n        /* \"#utility.yul\":1616:1628   */\n      dup3\n        /* \"#utility.yul\":1582:1645   */\n      tag_287\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1480:1655   */\n      pop\n        /* \"#utility.yul\":358:1662   */\n      pop\n        /* \"#utility.yul\":258:1662   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1740:2491   */\n    tag_289:\n        /* \"#utility.yul\":1899:1905   */\n      0x0120\n        /* \"#utility.yul\":1894:1897   */\n      dup3\n        /* \"#utility.yul\":1890:1906   */\n      add\n        /* \"#utility.yul\":1996:2000   */\n      0x00\n        /* \"#utility.yul\":1989:1994   */\n      dup3\n        /* \"#utility.yul\":1985:2001   */\n      add\n        /* \"#utility.yul\":1979:2002   */\n      mload\n        /* \"#utility.yul\":2015:2078   */\n      tag_324\n        /* \"#utility.yul\":2072:2076   */\n      0x00\n        /* \"#utility.yul\":2067:2070   */\n      dup6\n        /* \"#utility.yul\":2063:2077   */\n      add\n        /* \"#utility.yul\":2049:2061   */\n      dup3\n        /* \"#utility.yul\":2015:2078   */\n      tag_287\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1916:2088   */\n      pop\n        /* \"#utility.yul\":2173:2177   */\n      0x20\n        /* \"#utility.yul\":2166:2171   */\n      dup3\n        /* \"#utility.yul\":2162:2178   */\n      add\n        /* \"#utility.yul\":2156:2179   */\n      mload\n        /* \"#utility.yul\":2192:2255   */\n      tag_325\n        /* \"#utility.yul\":2249:2253   */\n      0x20\n        /* \"#utility.yul\":2244:2247   */\n      dup6\n        /* \"#utility.yul\":2240:2254   */\n      add\n        /* \"#utility.yul\":2226:2238   */\n      dup3\n        /* \"#utility.yul\":2192:2255   */\n      tag_287\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2098:2265   */\n      pop\n        /* \"#utility.yul\":2348:2352   */\n      0x40\n        /* \"#utility.yul\":2341:2346   */\n      dup3\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2331:2354   */\n      mload\n        /* \"#utility.yul\":2367:2474   */\n      tag_326\n        /* \"#utility.yul\":2468:2472   */\n      0x40\n        /* \"#utility.yul\":2463:2466   */\n      dup6\n        /* \"#utility.yul\":2459:2473   */\n      add\n        /* \"#utility.yul\":2445:2457   */\n      dup3\n        /* \"#utility.yul\":2367:2474   */\n      tag_288\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2275:2484   */\n      pop\n        /* \"#utility.yul\":1868:2491   */\n      pop\n        /* \"#utility.yul\":1740:2491   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2497:2844   */\n    tag_34:\n        /* \"#utility.yul\":2652:2656   */\n      0x00\n        /* \"#utility.yul\":2690:2693   */\n      0x0120\n        /* \"#utility.yul\":2679:2688   */\n      dup3\n        /* \"#utility.yul\":2675:2694   */\n      add\n        /* \"#utility.yul\":2667:2694   */\n      swap1\n      pop\n        /* \"#utility.yul\":2704:2837   */\n      tag_328\n        /* \"#utility.yul\":2834:2835   */\n      0x00\n        /* \"#utility.yul\":2823:2832   */\n      dup4\n        /* \"#utility.yul\":2819:2836   */\n      add\n        /* \"#utility.yul\":2810:2816   */\n      dup5\n        /* \"#utility.yul\":2704:2837   */\n      tag_289\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2497:2844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2931:3048   */\n    tag_291:\n        /* \"#utility.yul\":3040:3041   */\n      0x00\n        /* \"#utility.yul\":3037:3038   */\n      dup1\n        /* \"#utility.yul\":3030:3042   */\n      revert\n        /* \"#utility.yul\":3177:3303   */\n    tag_293:\n        /* \"#utility.yul\":3214:3221   */\n      0x00\n        /* \"#utility.yul\":3254:3296   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3247:3252   */\n      dup3\n        /* \"#utility.yul\":3243:3297   */\n      and\n        /* \"#utility.yul\":3232:3297   */\n      swap1\n      pop\n        /* \"#utility.yul\":3177:3303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3309:3405   */\n    tag_294:\n        /* \"#utility.yul\":3346:3353   */\n      0x00\n        /* \"#utility.yul\":3375:3399   */\n      tag_334\n        /* \"#utility.yul\":3393:3398   */\n      dup3\n        /* \"#utility.yul\":3375:3399   */\n      tag_293\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3364:3399   */\n      swap1\n      pop\n        /* \"#utility.yul\":3309:3405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3411:3533   */\n    tag_295:\n        /* \"#utility.yul\":3484:3508   */\n      tag_336\n        /* \"#utility.yul\":3502:3507   */\n      dup2\n        /* \"#utility.yul\":3484:3508   */\n      tag_294\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3477:3482   */\n      dup2\n        /* \"#utility.yul\":3474:3509   */\n      eq\n        /* \"#utility.yul\":3464:3527   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":3523:3524   */\n      0x00\n        /* \"#utility.yul\":3520:3521   */\n      dup1\n        /* \"#utility.yul\":3513:3525   */\n      revert\n        /* \"#utility.yul\":3464:3527   */\n    tag_337:\n        /* \"#utility.yul\":3411:3533   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3539:3678   */\n    tag_296:\n        /* \"#utility.yul\":3585:3590   */\n      0x00\n        /* \"#utility.yul\":3623:3629   */\n      dup2\n        /* \"#utility.yul\":3610:3630   */\n      calldataload\n        /* \"#utility.yul\":3601:3630   */\n      swap1\n      pop\n        /* \"#utility.yul\":3639:3672   */\n      tag_339\n        /* \"#utility.yul\":3666:3671   */\n      dup2\n        /* \"#utility.yul\":3639:3672   */\n      tag_295\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3539:3678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3684:4013   */\n    tag_37:\n        /* \"#utility.yul\":3743:3749   */\n      0x00\n        /* \"#utility.yul\":3792:3794   */\n      0x20\n        /* \"#utility.yul\":3780:3789   */\n      dup3\n        /* \"#utility.yul\":3771:3778   */\n      dup5\n        /* \"#utility.yul\":3767:3790   */\n      sub\n        /* \"#utility.yul\":3763:3795   */\n      slt\n        /* \"#utility.yul\":3760:3879   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":3798:3877   */\n      tag_342\n      tag_291\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3760:3879   */\n    tag_341:\n        /* \"#utility.yul\":3918:3919   */\n      0x00\n        /* \"#utility.yul\":3943:3996   */\n      tag_343\n        /* \"#utility.yul\":3988:3995   */\n      dup5\n        /* \"#utility.yul\":3979:3985   */\n      dup3\n        /* \"#utility.yul\":3968:3977   */\n      dup6\n        /* \"#utility.yul\":3964:3986   */\n      add\n        /* \"#utility.yul\":3943:3996   */\n      tag_296\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3933:3996   */\n      swap2\n      pop\n        /* \"#utility.yul\":3889:4006   */\n      pop\n        /* \"#utility.yul\":3684:4013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4019:4109   */\n    tag_297:\n        /* \"#utility.yul\":4053:4060   */\n      0x00\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4089:4102   */\n      iszero\n        /* \"#utility.yul\":4082:4103   */\n      iszero\n        /* \"#utility.yul\":4071:4103   */\n      swap1\n      pop\n        /* \"#utility.yul\":4019:4109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4115:4224   */\n    tag_298:\n        /* \"#utility.yul\":4196:4217   */\n      tag_346\n        /* \"#utility.yul\":4211:4216   */\n      dup2\n        /* \"#utility.yul\":4196:4217   */\n      tag_297\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4191:4194   */\n      dup3\n        /* \"#utility.yul\":4184:4218   */\n      mstore\n        /* \"#utility.yul\":4115:4224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4230:4538   */\n    tag_45:\n        /* \"#utility.yul\":4339:4343   */\n      0x00\n        /* \"#utility.yul\":4377:4379   */\n      0x40\n        /* \"#utility.yul\":4366:4375   */\n      dup3\n        /* \"#utility.yul\":4362:4380   */\n      add\n        /* \"#utility.yul\":4354:4380   */\n      swap1\n      pop\n        /* \"#utility.yul\":4390:4455   */\n      tag_348\n        /* \"#utility.yul\":4452:4453   */\n      0x00\n        /* \"#utility.yul\":4441:4450   */\n      dup4\n        /* \"#utility.yul\":4437:4454   */\n      add\n        /* \"#utility.yul\":4428:4434   */\n      dup6\n        /* \"#utility.yul\":4390:4455   */\n      tag_298\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4465:4531   */\n      tag_349\n        /* \"#utility.yul\":4527:4529   */\n      0x20\n        /* \"#utility.yul\":4516:4525   */\n      dup4\n        /* \"#utility.yul\":4512:4530   */\n      add\n        /* \"#utility.yul\":4503:4509   */\n      dup5\n        /* \"#utility.yul\":4465:4531   */\n      tag_298\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4230:4538   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4544:4662   */\n    tag_299:\n        /* \"#utility.yul\":4631:4655   */\n      tag_351\n        /* \"#utility.yul\":4649:4654   */\n      dup2\n        /* \"#utility.yul\":4631:4655   */\n      tag_294\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4626:4629   */\n      dup3\n        /* \"#utility.yul\":4619:4656   */\n      mstore\n        /* \"#utility.yul\":4544:4662   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4668:4890   */\n    tag_49:\n        /* \"#utility.yul\":4761:4765   */\n      0x00\n        /* \"#utility.yul\":4799:4801   */\n      0x20\n        /* \"#utility.yul\":4788:4797   */\n      dup3\n        /* \"#utility.yul\":4784:4802   */\n      add\n        /* \"#utility.yul\":4776:4802   */\n      swap1\n      pop\n        /* \"#utility.yul\":4812:4883   */\n      tag_353\n        /* \"#utility.yul\":4880:4881   */\n      0x00\n        /* \"#utility.yul\":4869:4878   */\n      dup4\n        /* \"#utility.yul\":4865:4882   */\n      add\n        /* \"#utility.yul\":4856:4862   */\n      dup5\n        /* \"#utility.yul\":4812:4883   */\n      tag_299\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4668:4890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4896:5014   */\n    tag_300:\n        /* \"#utility.yul\":4983:5007   */\n      tag_355\n        /* \"#utility.yul\":5001:5006   */\n      dup2\n        /* \"#utility.yul\":4983:5007   */\n      tag_286\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4978:4981   */\n      dup3\n        /* \"#utility.yul\":4971:5008   */\n      mstore\n        /* \"#utility.yul\":4896:5014   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5020:5242   */\n    tag_53:\n        /* \"#utility.yul\":5113:5117   */\n      0x00\n        /* \"#utility.yul\":5151:5153   */\n      0x20\n        /* \"#utility.yul\":5140:5149   */\n      dup3\n        /* \"#utility.yul\":5136:5154   */\n      add\n        /* \"#utility.yul\":5128:5154   */\n      swap1\n      pop\n        /* \"#utility.yul\":5164:5235   */\n      tag_357\n        /* \"#utility.yul\":5232:5233   */\n      0x00\n        /* \"#utility.yul\":5221:5230   */\n      dup4\n        /* \"#utility.yul\":5217:5234   */\n      add\n        /* \"#utility.yul\":5208:5214   */\n      dup5\n        /* \"#utility.yul\":5164:5235   */\n      tag_300\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5020:5242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5248:5458   */\n    tag_63:\n        /* \"#utility.yul\":5335:5339   */\n      0x00\n        /* \"#utility.yul\":5373:5375   */\n      0x20\n        /* \"#utility.yul\":5362:5371   */\n      dup3\n        /* \"#utility.yul\":5358:5376   */\n      add\n        /* \"#utility.yul\":5350:5376   */\n      swap1\n      pop\n        /* \"#utility.yul\":5386:5451   */\n      tag_359\n        /* \"#utility.yul\":5448:5449   */\n      0x00\n        /* \"#utility.yul\":5437:5446   */\n      dup4\n        /* \"#utility.yul\":5433:5450   */\n      add\n        /* \"#utility.yul\":5424:5430   */\n      dup5\n        /* \"#utility.yul\":5386:5451   */\n      tag_298\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5248:5458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5464:5586   */\n    tag_301:\n        /* \"#utility.yul\":5537:5561   */\n      tag_361\n        /* \"#utility.yul\":5555:5560   */\n      dup2\n        /* \"#utility.yul\":5537:5561   */\n      tag_286\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5530:5535   */\n      dup2\n        /* \"#utility.yul\":5527:5562   */\n      eq\n        /* \"#utility.yul\":5517:5580   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":5576:5577   */\n      0x00\n        /* \"#utility.yul\":5573:5574   */\n      dup1\n        /* \"#utility.yul\":5566:5578   */\n      revert\n        /* \"#utility.yul\":5517:5580   */\n    tag_362:\n        /* \"#utility.yul\":5464:5586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5592:5731   */\n    tag_302:\n        /* \"#utility.yul\":5638:5643   */\n      0x00\n        /* \"#utility.yul\":5676:5682   */\n      dup2\n        /* \"#utility.yul\":5663:5683   */\n      calldataload\n        /* \"#utility.yul\":5654:5683   */\n      swap1\n      pop\n        /* \"#utility.yul\":5692:5725   */\n      tag_364\n        /* \"#utility.yul\":5719:5724   */\n      dup2\n        /* \"#utility.yul\":5692:5725   */\n      tag_301\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5592:5731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5737:6066   */\n    tag_71:\n        /* \"#utility.yul\":5796:5802   */\n      0x00\n        /* \"#utility.yul\":5845:5847   */\n      0x20\n        /* \"#utility.yul\":5833:5842   */\n      dup3\n        /* \"#utility.yul\":5824:5831   */\n      dup5\n        /* \"#utility.yul\":5820:5843   */\n      sub\n        /* \"#utility.yul\":5816:5848   */\n      slt\n        /* \"#utility.yul\":5813:5932   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":5851:5930   */\n      tag_367\n      tag_291\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5813:5932   */\n    tag_366:\n        /* \"#utility.yul\":5971:5972   */\n      0x00\n        /* \"#utility.yul\":5996:6049   */\n      tag_368\n        /* \"#utility.yul\":6041:6048   */\n      dup5\n        /* \"#utility.yul\":6032:6038   */\n      dup3\n        /* \"#utility.yul\":6021:6030   */\n      dup6\n        /* \"#utility.yul\":6017:6039   */\n      add\n        /* \"#utility.yul\":5996:6049   */\n      tag_302\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5986:6049   */\n      swap2\n      pop\n        /* \"#utility.yul\":5942:6059   */\n      pop\n        /* \"#utility.yul\":5737:6066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6072:6404   */\n    tag_91:\n        /* \"#utility.yul\":6193:6197   */\n      0x00\n        /* \"#utility.yul\":6231:6233   */\n      0x40\n        /* \"#utility.yul\":6220:6229   */\n      dup3\n        /* \"#utility.yul\":6216:6234   */\n      add\n        /* \"#utility.yul\":6208:6234   */\n      swap1\n      pop\n        /* \"#utility.yul\":6244:6315   */\n      tag_370\n        /* \"#utility.yul\":6312:6313   */\n      0x00\n        /* \"#utility.yul\":6301:6310   */\n      dup4\n        /* \"#utility.yul\":6297:6314   */\n      add\n        /* \"#utility.yul\":6288:6294   */\n      dup6\n        /* \"#utility.yul\":6244:6315   */\n      tag_300\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6325:6397   */\n      tag_371\n        /* \"#utility.yul\":6393:6395   */\n      0x20\n        /* \"#utility.yul\":6382:6391   */\n      dup4\n        /* \"#utility.yul\":6378:6396   */\n      add\n        /* \"#utility.yul\":6369:6375   */\n      dup5\n        /* \"#utility.yul\":6325:6397   */\n      tag_300\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6072:6404   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6410:7175   */\n    tag_103:\n        /* \"#utility.yul\":6496:6502   */\n      0x00\n        /* \"#utility.yul\":6504:6510   */\n      dup1\n        /* \"#utility.yul\":6512:6518   */\n      0x00\n        /* \"#utility.yul\":6520:6526   */\n      dup1\n        /* \"#utility.yul\":6569:6572   */\n      0x80\n        /* \"#utility.yul\":6557:6566   */\n      dup6\n        /* \"#utility.yul\":6548:6555   */\n      dup8\n        /* \"#utility.yul\":6544:6567   */\n      sub\n        /* \"#utility.yul\":6540:6573   */\n      slt\n        /* \"#utility.yul\":6537:6657   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":6576:6655   */\n      tag_374\n      tag_291\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6537:6657   */\n    tag_373:\n        /* \"#utility.yul\":6696:6697   */\n      0x00\n        /* \"#utility.yul\":6721:6774   */\n      tag_375\n        /* \"#utility.yul\":6766:6773   */\n      dup8\n        /* \"#utility.yul\":6757:6763   */\n      dup3\n        /* \"#utility.yul\":6746:6755   */\n      dup9\n        /* \"#utility.yul\":6742:6764   */\n      add\n        /* \"#utility.yul\":6721:6774   */\n      tag_296\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6711:6774   */\n      swap5\n      pop\n        /* \"#utility.yul\":6667:6784   */\n      pop\n        /* \"#utility.yul\":6823:6825   */\n      0x20\n        /* \"#utility.yul\":6849:6902   */\n      tag_376\n        /* \"#utility.yul\":6894:6901   */\n      dup8\n        /* \"#utility.yul\":6885:6891   */\n      dup3\n        /* \"#utility.yul\":6874:6883   */\n      dup9\n        /* \"#utility.yul\":6870:6892   */\n      add\n        /* \"#utility.yul\":6849:6902   */\n      tag_302\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6839:6902   */\n      swap4\n      pop\n        /* \"#utility.yul\":6794:6912   */\n      pop\n        /* \"#utility.yul\":6951:6953   */\n      0x40\n        /* \"#utility.yul\":6977:7030   */\n      tag_377\n        /* \"#utility.yul\":7022:7029   */\n      dup8\n        /* \"#utility.yul\":7013:7019   */\n      dup3\n        /* \"#utility.yul\":7002:7011   */\n      dup9\n        /* \"#utility.yul\":6998:7020   */\n      add\n        /* \"#utility.yul\":6977:7030   */\n      tag_302\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6967:7030   */\n      swap3\n      pop\n        /* \"#utility.yul\":6922:7040   */\n      pop\n        /* \"#utility.yul\":7079:7081   */\n      0x60\n        /* \"#utility.yul\":7105:7158   */\n      tag_378\n        /* \"#utility.yul\":7150:7157   */\n      dup8\n        /* \"#utility.yul\":7141:7147   */\n      dup3\n        /* \"#utility.yul\":7130:7139   */\n      dup9\n        /* \"#utility.yul\":7126:7148   */\n      add\n        /* \"#utility.yul\":7105:7158   */\n      tag_302\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7095:7158   */\n      swap2\n      pop\n        /* \"#utility.yul\":7050:7168   */\n      pop\n        /* \"#utility.yul\":6410:7175   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7181:7350   */\n    tag_303:\n        /* \"#utility.yul\":7265:7276   */\n      0x00\n        /* \"#utility.yul\":7299:7305   */\n      dup3\n        /* \"#utility.yul\":7294:7297   */\n      dup3\n        /* \"#utility.yul\":7287:7306   */\n      mstore\n        /* \"#utility.yul\":7339:7343   */\n      0x20\n        /* \"#utility.yul\":7334:7337   */\n      dup3\n        /* \"#utility.yul\":7330:7344   */\n      add\n        /* \"#utility.yul\":7315:7344   */\n      swap1\n      pop\n        /* \"#utility.yul\":7181:7350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7356:7537   */\n    tag_304:\n        /* \"#utility.yul\":7496:7529   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7492:7493   */\n      0x00\n        /* \"#utility.yul\":7484:7490   */\n      dup3\n        /* \"#utility.yul\":7480:7494   */\n      add\n        /* \"#utility.yul\":7473:7530   */\n      mstore\n        /* \"#utility.yul\":7356:7537   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7543:7909   */\n    tag_305:\n        /* \"#utility.yul\":7685:7688   */\n      0x00\n        /* \"#utility.yul\":7706:7773   */\n      tag_382\n        /* \"#utility.yul\":7770:7772   */\n      0x1f\n        /* \"#utility.yul\":7765:7768   */\n      dup4\n        /* \"#utility.yul\":7706:7773   */\n      tag_303\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7699:7773   */\n      swap2\n      pop\n        /* \"#utility.yul\":7782:7875   */\n      tag_383\n        /* \"#utility.yul\":7871:7874   */\n      dup3\n        /* \"#utility.yul\":7782:7875   */\n      tag_304\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7900:7902   */\n      0x20\n        /* \"#utility.yul\":7895:7898   */\n      dup3\n        /* \"#utility.yul\":7891:7903   */\n      add\n        /* \"#utility.yul\":7884:7903   */\n      swap1\n      pop\n        /* \"#utility.yul\":7543:7909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7915:8334   */\n    tag_110:\n        /* \"#utility.yul\":8081:8085   */\n      0x00\n        /* \"#utility.yul\":8119:8121   */\n      0x20\n        /* \"#utility.yul\":8108:8117   */\n      dup3\n        /* \"#utility.yul\":8104:8122   */\n      add\n        /* \"#utility.yul\":8096:8122   */\n      swap1\n      pop\n        /* \"#utility.yul\":8168:8177   */\n      dup2\n        /* \"#utility.yul\":8162:8166   */\n      dup2\n        /* \"#utility.yul\":8158:8178   */\n      sub\n        /* \"#utility.yul\":8154:8155   */\n      0x00\n        /* \"#utility.yul\":8143:8152   */\n      dup4\n        /* \"#utility.yul\":8139:8156   */\n      add\n        /* \"#utility.yul\":8132:8179   */\n      mstore\n        /* \"#utility.yul\":8196:8327   */\n      tag_385\n        /* \"#utility.yul\":8322:8326   */\n      dup2\n        /* \"#utility.yul\":8196:8327   */\n      tag_305\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8188:8327   */\n      swap1\n      pop\n        /* \"#utility.yul\":7915:8334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8340:8520   */\n    tag_306:\n        /* \"#utility.yul\":8388:8465   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8385:8386   */\n      0x00\n        /* \"#utility.yul\":8378:8466   */\n      mstore\n        /* \"#utility.yul\":8485:8489   */\n      0x11\n        /* \"#utility.yul\":8482:8483   */\n      0x04\n        /* \"#utility.yul\":8475:8490   */\n      mstore\n        /* \"#utility.yul\":8509:8513   */\n      0x24\n        /* \"#utility.yul\":8506:8507   */\n      0x00\n        /* \"#utility.yul\":8499:8514   */\n      revert\n        /* \"#utility.yul\":8526:8717   */\n    tag_120:\n        /* \"#utility.yul\":8566:8570   */\n      0x00\n        /* \"#utility.yul\":8586:8606   */\n      tag_388\n        /* \"#utility.yul\":8604:8605   */\n      dup3\n        /* \"#utility.yul\":8586:8606   */\n      tag_286\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8581:8606   */\n      swap2\n      pop\n        /* \"#utility.yul\":8620:8640   */\n      tag_389\n        /* \"#utility.yul\":8638:8639   */\n      dup4\n        /* \"#utility.yul\":8620:8640   */\n      tag_286\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8615:8640   */\n      swap3\n      pop\n        /* \"#utility.yul\":8659:8660   */\n      dup3\n        /* \"#utility.yul\":8656:8657   */\n      dup3\n        /* \"#utility.yul\":8653:8661   */\n      lt\n        /* \"#utility.yul\":8650:8684   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":8664:8682   */\n      tag_391\n      tag_306\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8650:8684   */\n    tag_390:\n        /* \"#utility.yul\":8709:8710   */\n      dup3\n        /* \"#utility.yul\":8706:8707   */\n      dup3\n        /* \"#utility.yul\":8702:8711   */\n      sub\n        /* \"#utility.yul\":8694:8711   */\n      swap1\n      pop\n        /* \"#utility.yul\":8526:8717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8723:9028   */\n    tag_135:\n        /* \"#utility.yul\":8763:8766   */\n      0x00\n        /* \"#utility.yul\":8782:8802   */\n      tag_393\n        /* \"#utility.yul\":8800:8801   */\n      dup3\n        /* \"#utility.yul\":8782:8802   */\n      tag_286\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8777:8802   */\n      swap2\n      pop\n        /* \"#utility.yul\":8816:8836   */\n      tag_394\n        /* \"#utility.yul\":8834:8835   */\n      dup4\n        /* \"#utility.yul\":8816:8836   */\n      tag_286\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8811:8836   */\n      swap3\n      pop\n        /* \"#utility.yul\":8970:8971   */\n      dup3\n        /* \"#utility.yul\":8902:8968   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8898:8972   */\n      sub\n        /* \"#utility.yul\":8895:8896   */\n      dup3\n        /* \"#utility.yul\":8892:8973   */\n      gt\n        /* \"#utility.yul\":8889:8996   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":8976:8994   */\n      tag_396\n      tag_306\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8889:8996   */\n    tag_395:\n        /* \"#utility.yul\":9020:9021   */\n      dup3\n        /* \"#utility.yul\":9017:9018   */\n      dup3\n        /* \"#utility.yul\":9013:9022   */\n      add\n        /* \"#utility.yul\":9006:9022   */\n      swap1\n      pop\n        /* \"#utility.yul\":8723:9028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9034:9214   */\n    tag_283:\n        /* \"#utility.yul\":9082:9159   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9079:9080   */\n      0x00\n        /* \"#utility.yul\":9072:9160   */\n      mstore\n        /* \"#utility.yul\":9179:9183   */\n      0x12\n        /* \"#utility.yul\":9176:9177   */\n      0x04\n        /* \"#utility.yul\":9169:9184   */\n      mstore\n        /* \"#utility.yul\":9203:9207   */\n      0x24\n        /* \"#utility.yul\":9200:9201   */\n      0x00\n        /* \"#utility.yul\":9193:9208   */\n      revert\n        /* \"#utility.yul\":9220:9405   */\n    tag_209:\n        /* \"#utility.yul\":9260:9261   */\n      0x00\n        /* \"#utility.yul\":9277:9297   */\n      tag_399\n        /* \"#utility.yul\":9295:9296   */\n      dup3\n        /* \"#utility.yul\":9277:9297   */\n      tag_286\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9272:9297   */\n      swap2\n      pop\n        /* \"#utility.yul\":9311:9331   */\n      tag_400\n        /* \"#utility.yul\":9329:9330   */\n      dup4\n        /* \"#utility.yul\":9311:9331   */\n      tag_286\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9306:9331   */\n      swap3\n      pop\n        /* \"#utility.yul\":9350:9351   */\n      dup3\n        /* \"#utility.yul\":9340:9375   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9355:9373   */\n      tag_402\n      tag_283\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9340:9375   */\n    tag_401:\n        /* \"#utility.yul\":9397:9398   */\n      dup3\n        /* \"#utility.yul\":9394:9395   */\n      dup3\n        /* \"#utility.yul\":9390:9399   */\n      div\n        /* \"#utility.yul\":9385:9399   */\n      swap1\n      pop\n        /* \"#utility.yul\":9220:9405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9411:9853   */\n    tag_228:\n        /* \"#utility.yul\":9560:9564   */\n      0x00\n        /* \"#utility.yul\":9598:9600   */\n      0x60\n        /* \"#utility.yul\":9587:9596   */\n      dup3\n        /* \"#utility.yul\":9583:9601   */\n      add\n        /* \"#utility.yul\":9575:9601   */\n      swap1\n      pop\n        /* \"#utility.yul\":9611:9682   */\n      tag_404\n        /* \"#utility.yul\":9679:9680   */\n      0x00\n        /* \"#utility.yul\":9668:9677   */\n      dup4\n        /* \"#utility.yul\":9664:9681   */\n      add\n        /* \"#utility.yul\":9655:9661   */\n      dup7\n        /* \"#utility.yul\":9611:9682   */\n      tag_300\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9692:9764   */\n      tag_405\n        /* \"#utility.yul\":9760:9762   */\n      0x20\n        /* \"#utility.yul\":9749:9758   */\n      dup4\n        /* \"#utility.yul\":9745:9763   */\n      add\n        /* \"#utility.yul\":9736:9742   */\n      dup6\n        /* \"#utility.yul\":9692:9764   */\n      tag_300\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9774:9846   */\n      tag_406\n        /* \"#utility.yul\":9842:9844   */\n      0x40\n        /* \"#utility.yul\":9831:9840   */\n      dup4\n        /* \"#utility.yul\":9827:9845   */\n      add\n        /* \"#utility.yul\":9818:9824   */\n      dup5\n        /* \"#utility.yul\":9774:9846   */\n      tag_300\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9411:9853   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9859:10207   */\n    tag_243:\n        /* \"#utility.yul\":9899:9906   */\n      0x00\n        /* \"#utility.yul\":9922:9942   */\n      tag_408\n        /* \"#utility.yul\":9940:9941   */\n      dup3\n        /* \"#utility.yul\":9922:9942   */\n      tag_286\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9917:9942   */\n      swap2\n      pop\n        /* \"#utility.yul\":9956:9976   */\n      tag_409\n        /* \"#utility.yul\":9974:9975   */\n      dup4\n        /* \"#utility.yul\":9956:9976   */\n      tag_286\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9951:9976   */\n      swap3\n      pop\n        /* \"#utility.yul\":10144:10145   */\n      dup2\n        /* \"#utility.yul\":10076:10142   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10072:10146   */\n      div\n        /* \"#utility.yul\":10069:10070   */\n      dup4\n        /* \"#utility.yul\":10066:10147   */\n      gt\n        /* \"#utility.yul\":10061:10062   */\n      dup3\n        /* \"#utility.yul\":10054:10063   */\n      iszero\n        /* \"#utility.yul\":10047:10064   */\n      iszero\n        /* \"#utility.yul\":10043:10148   */\n      and\n        /* \"#utility.yul\":10040:10171   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":10151:10169   */\n      tag_411\n      tag_306\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10040:10171   */\n    tag_410:\n        /* \"#utility.yul\":10199:10200   */\n      dup3\n        /* \"#utility.yul\":10196:10197   */\n      dup3\n        /* \"#utility.yul\":10192:10201   */\n      mul\n        /* \"#utility.yul\":10181:10201   */\n      swap1\n      pop\n        /* \"#utility.yul\":9859:10207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10213:10312   */\n    tag_307:\n        /* \"#utility.yul\":10265:10271   */\n      0x00\n        /* \"#utility.yul\":10299:10304   */\n      dup2\n        /* \"#utility.yul\":10293:10305   */\n      mload\n        /* \"#utility.yul\":10283:10305   */\n      swap1\n      pop\n        /* \"#utility.yul\":10213:10312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10318:10625   */\n    tag_308:\n        /* \"#utility.yul\":10386:10387   */\n      0x00\n        /* \"#utility.yul\":10396:10509   */\n    tag_414:\n        /* \"#utility.yul\":10410:10416   */\n      dup4\n        /* \"#utility.yul\":10407:10408   */\n      dup2\n        /* \"#utility.yul\":10404:10417   */\n      lt\n        /* \"#utility.yul\":10396:10509   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":10495:10496   */\n      dup1\n        /* \"#utility.yul\":10490:10493   */\n      dup3\n        /* \"#utility.yul\":10486:10497   */\n      add\n        /* \"#utility.yul\":10480:10498   */\n      mload\n        /* \"#utility.yul\":10476:10477   */\n      dup2\n        /* \"#utility.yul\":10471:10474   */\n      dup5\n        /* \"#utility.yul\":10467:10478   */\n      add\n        /* \"#utility.yul\":10460:10499   */\n      mstore\n        /* \"#utility.yul\":10432:10434   */\n      0x20\n        /* \"#utility.yul\":10429:10430   */\n      dup2\n        /* \"#utility.yul\":10425:10435   */\n      add\n        /* \"#utility.yul\":10420:10435   */\n      swap1\n      pop\n        /* \"#utility.yul\":10396:10509   */\n      jump(tag_414)\n    tag_416:\n        /* \"#utility.yul\":10527:10533   */\n      dup4\n        /* \"#utility.yul\":10524:10525   */\n      dup2\n        /* \"#utility.yul\":10521:10534   */\n      gt\n        /* \"#utility.yul\":10518:10619   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":10607:10608   */\n      0x00\n        /* \"#utility.yul\":10598:10604   */\n      dup5\n        /* \"#utility.yul\":10593:10596   */\n      dup5\n        /* \"#utility.yul\":10589:10605   */\n      add\n        /* \"#utility.yul\":10582:10609   */\n      mstore\n        /* \"#utility.yul\":10518:10619   */\n    tag_417:\n        /* \"#utility.yul\":10367:10625   */\n      pop\n        /* \"#utility.yul\":10318:10625   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10631:10733   */\n    tag_309:\n        /* \"#utility.yul\":10672:10678   */\n      0x00\n        /* \"#utility.yul\":10723:10725   */\n      0x1f\n        /* \"#utility.yul\":10719:10726   */\n      not\n        /* \"#utility.yul\":10714:10716   */\n      0x1f\n        /* \"#utility.yul\":10707:10712   */\n      dup4\n        /* \"#utility.yul\":10703:10717   */\n      add\n        /* \"#utility.yul\":10699:10727   */\n      and\n        /* \"#utility.yul\":10689:10727   */\n      swap1\n      pop\n        /* \"#utility.yul\":10631:10733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10739:11103   */\n    tag_310:\n        /* \"#utility.yul\":10827:10830   */\n      0x00\n        /* \"#utility.yul\":10855:10894   */\n      tag_420\n        /* \"#utility.yul\":10888:10893   */\n      dup3\n        /* \"#utility.yul\":10855:10894   */\n      tag_307\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10910:10981   */\n      tag_421\n        /* \"#utility.yul\":10974:10980   */\n      dup2\n        /* \"#utility.yul\":10969:10972   */\n      dup6\n        /* \"#utility.yul\":10910:10981   */\n      tag_303\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":10903:10981   */\n      swap4\n      pop\n        /* \"#utility.yul\":10990:11042   */\n      tag_422\n        /* \"#utility.yul\":11035:11041   */\n      dup2\n        /* \"#utility.yul\":11030:11033   */\n      dup6\n        /* \"#utility.yul\":11023:11027   */\n      0x20\n        /* \"#utility.yul\":11016:11021   */\n      dup7\n        /* \"#utility.yul\":11012:11028   */\n      add\n        /* \"#utility.yul\":10990:11042   */\n      tag_308\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":11067:11096   */\n      tag_423\n        /* \"#utility.yul\":11089:11095   */\n      dup2\n        /* \"#utility.yul\":11067:11096   */\n      tag_309\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11062:11065   */\n      dup5\n        /* \"#utility.yul\":11058:11097   */\n      add\n        /* \"#utility.yul\":11051:11097   */\n      swap2\n      pop\n        /* \"#utility.yul\":10831:11103   */\n      pop\n        /* \"#utility.yul\":10739:11103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11109:11422   */\n    tag_280:\n        /* \"#utility.yul\":11222:11226   */\n      0x00\n        /* \"#utility.yul\":11260:11262   */\n      0x20\n        /* \"#utility.yul\":11249:11258   */\n      dup3\n        /* \"#utility.yul\":11245:11263   */\n      add\n        /* \"#utility.yul\":11237:11263   */\n      swap1\n      pop\n        /* \"#utility.yul\":11309:11318   */\n      dup2\n        /* \"#utility.yul\":11303:11307   */\n      dup2\n        /* \"#utility.yul\":11299:11319   */\n      sub\n        /* \"#utility.yul\":11295:11296   */\n      0x00\n        /* \"#utility.yul\":11284:11293   */\n      dup4\n        /* \"#utility.yul\":11280:11297   */\n      add\n        /* \"#utility.yul\":11273:11320   */\n      mstore\n        /* \"#utility.yul\":11337:11415   */\n      tag_425\n        /* \"#utility.yul\":11410:11414   */\n      dup2\n        /* \"#utility.yul\":11401:11407   */\n      dup5\n        /* \"#utility.yul\":11337:11415   */\n      tag_310\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11329:11415   */\n      swap1\n      pop\n        /* \"#utility.yul\":11109:11422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ed49ba54f441f32b75faa77f3af7d3cdbf0397a5ee369570ccb9efe06684340364736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001600081905550600f600181905550605060028190555033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ef7806100ba6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638891cf0d116100c3578063c23a5cea1161007c578063c23a5cea14610345578063cb79c2e114610376578063cbb3e15214610394578063d5dbdf1b146103b2578063f93d4f8a146103ce578063fab2f86b146103ea5761014d565b80638891cf0d1461026f5780638c63f97f1461028d578063a143a5f2146102a9578063a3ec138d146102d9578063b2bdfa7b14610309578063b87da76d146103275761014d565b80635f348b4e116101155780635f348b4e146101d15780635f5300ff146101ef578063632a9a521461020d57806365f8c6c514610217578063671d2b751461024757806371e3db87146102655761014d565b8063070c8b741461015257806310486b6a1461015c5780631d77b00b1461017a5780631ec6b60a146101965780632d15cc04146101a0575b600080fd5b61015a6103f4565b005b610164610590565b60405161017191906119a8565b60405180910390f35b610194600480360381019061018f9190611a27565b61075d565b005b61019e6107a9565b005b6101ba60048036038101906101b59190611a27565b61088c565b6040516101c8929190611a6f565b60405180910390f35b6101d961094b565b6040516101e69190611aa7565b60405180910390f35b6101f7610971565b6040516102049190611ad1565b60405180910390f35b610215610977565b005b610231600480360381019061022c9190611a27565b610b1b565b60405161023e9190611ad1565b60405180910390f35b61024f610c41565b60405161025c9190611aec565b60405180910390f35b61026d610cda565b005b610277610ceb565b6040516102849190611ad1565b60405180910390f35b6102a760048036038101906102a29190611b33565b610cf1565b005b6102c360048036038101906102be9190611b33565b610d75565b6040516102d09190611ad1565b60405180910390f35b6102f360048036038101906102ee9190611a27565b610d8d565b6040516103009190611aec565b60405180910390f35b610311610db8565b60405161031e9190611aa7565b60405180910390f35b61032f610dde565b60405161033c9190611ad1565b60405180910390f35b61035f600480360381019061035a9190611a27565b610de4565b60405161036d929190611b60565b60405180910390f35b61037e611096565b60405161038b9190611ad1565b60405180910390f35b61039c61109c565b6040516103a99190611ad1565b60405180910390f35b6103cc60048036038101906103c79190611b33565b6110d2565b005b6103e860048036038101906103e39190611b89565b611156565b005b6103f2611411565b005b6002600054141561043a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043190611c4d565b60405180910390fd5b600260008190555061044a61143e565b610452611486565b60001515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600554815260200190815260200160002060009054906101000a900460ff16151514156104f3576040517f8b74220000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60001515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600554815260200190815260200160002060009054906101000a905050506001600860006005548152602001908152602001600020600082825461057f9190611c9c565b925050819055506001600081905550565b61059861185a565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050600081600001511161066a576040517fb018f08700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180606001604052806000815260200160008152602001838152509050600061069683611516565b90504282604001516060015111156106ee576106bf6106b782600154611576565b6103e861158c565b6106da6106d28560000151600154611576565b6103e861158c565b6106e49190611cd0565b8260200181815250505b60006106fd8460c001516115a2565b111561072857600061071284600001516115cc565b905080836040015160a001818152505050610738565b6000826040015160a00181815250505b8082604001516080018181525050826000015182600001818152505081935050505090565b6107656115ff565b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260005414156107ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e690611c4d565b60405180910390fd5b60026000819055506107ff611688565b60011515600460009054906101000a900460ff161515141561084d576040517f6da4cd2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600460006101000a81548160ff02191690831515021790555060016005600082825461087b9190611cd0565b925050819055506001600081905550565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600554815260200190815260200160002060009054906101000a900460ff1691509150915091565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600260005414156109bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b490611c4d565b60405180910390fd5b60026000819055506109cd61143e565b6109d5611486565b60011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600554815260200190815260200160002060009054906101000a900460ff1615151415610a76576040517f740e33b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600554815260200190815260200160002060006101000a81548160ff02191690831515021790555060016008600060055481526020019081526020016000206000828254610b0a9190611cd0565b925050819055506001600081905550565b6000610b25611688565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050600081600001511115610c36576000610bd58260c001516115a2565b11610c0c576040517fdd8456cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160a0018181525050428160c0018181525050610c2e81600001516115cc565b915050610c3c565b60009150505b919050565b6000610c4b611688565b610c5361143e565b600160065411610c8f576040517f2f9686de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ca8610ca16006546005611576565b600a61158c565b905080600860006005548152602001908152602001600020541115610cd1576001915050610cd7565b60009150505b90565b610ce2611688565b42600381905550565b60025481565b610cf96115ff565b601e811115610d34576040517ff1a470d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001819055507fcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a981604051610d6a9190611ad1565b60405180910390a150565b60086020528060005260406000206000915090505481565b60076020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60008060026000541415610e2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2490611c4d565b60405180910390fd5b6002600081905550610e3d611688565b6000600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160009055600382016000905560048201600090556005820160009055600682016000905550504281606001511115610ff657600160066000828254610f6a9190611c9c565b92505081905550600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600554815260200190815260200160002060006101000a81549060ff0219169055610fec8160000151610fe783611516565b611711565b9250925050611089565b6001600660008282546110099190611c9c565b92505081905550600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600554815260200190815260200160002060006101000a81549060ff0219169055806000015161108382611516565b92509250505b6001600081905550915091565b60015481565b600080600354146110ca5762093a80600354426110b99190611c9c565b6110c39190611d55565b90506110cf565b600090505b90565b6110da6115ff565b60c8811115611115576040517fa552cf1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806002819055507fcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e8160405161114b9190611ad1565b60405180910390a150565b6002600054141561119c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119390611c4d565b60405180910390fd5b60026000819055506111ac611688565b600083116111e6576040517f88b440d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414611262576040517f04462d2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660008282546112759190611cd0565b925050819055506001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060004290506040518060e0016040528085815260200182815260200183815260200182856113059190611cd0565b815260200160008152602001600081526020016000815250600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601559050508473ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed858384876113eb9190611cd0565b6040516113fa93929190611d86565b60405180910390a250600160008190555050505050565b611419611688565b61142161143e565b6000600460006101000a81548160ff021916908315150217905550565b600460009054906101000a900460ff16611484576040517fa1d1891400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60001515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615151415611514576040517f1e567dd400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000808260000151141561152d5760009050611571565b6a52b7d2dcc80cd2e40000006115468360200151611775565b8360400151846000015161155a9190611dbd565b6115649190611dbd565b61156e9190611d55565b90505b919050565b600081836115849190611dbd565b905092915050565b6000818361159a9190611d55565b905092915050565b60006115c562093a8083426115b79190611c9c565b61158c90919063ffffffff16565b9050919050565b60006301dfe2006103e8600254846115e49190611dbd565b6115ee9190611d55565b6115f89190611d55565b9050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611686576040517f2b4cf15200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461170f576040517f2b4cf15200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000806000841415611729576000809150915061176e565b6117498461174461173c87600154611576565b6103e861158c565b6117e2565b6117698461176461175c87600154611576565b6103e861158c565b6117e2565b915091505b9250929050565b60006117db69d3c21bcecceda100000083426117919190611c9c565b61179b9190611dbd565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d700000008152506117f8565b9050919050565b600081836117f09190611c9c565b905092915050565b6000808311829061183f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118369190611e9f565b60405180910390fd5b508284816118505761184f611d26565b5b0490509392505050565b6040518060600160405280600081526020016000815260200161187b611881565b81525090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000819050919050565b6118d1816118be565b82525050565b60e0820160008201516118ed60008501826118c8565b50602082015161190060208501826118c8565b50604082015161191360408501826118c8565b50606082015161192660608501826118c8565b50608082015161193960808501826118c8565b5060a082015161194c60a08501826118c8565b5060c082015161195f60c08501826118c8565b50505050565b6101208201600082015161197c60008501826118c8565b50602082015161198f60208501826118c8565b5060408201516119a260408501826118d7565b50505050565b6000610120820190506119be6000830184611965565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119f4826119c9565b9050919050565b611a04816119e9565b8114611a0f57600080fd5b50565b600081359050611a21816119fb565b92915050565b600060208284031215611a3d57611a3c6119c4565b5b6000611a4b84828501611a12565b91505092915050565b60008115159050919050565b611a6981611a54565b82525050565b6000604082019050611a846000830185611a60565b611a916020830184611a60565b9392505050565b611aa1816119e9565b82525050565b6000602082019050611abc6000830184611a98565b92915050565b611acb816118be565b82525050565b6000602082019050611ae66000830184611ac2565b92915050565b6000602082019050611b016000830184611a60565b92915050565b611b10816118be565b8114611b1b57600080fd5b50565b600081359050611b2d81611b07565b92915050565b600060208284031215611b4957611b486119c4565b5b6000611b5784828501611b1e565b91505092915050565b6000604082019050611b756000830185611ac2565b611b826020830184611ac2565b9392505050565b60008060008060808587031215611ba357611ba26119c4565b5b6000611bb187828801611a12565b9450506020611bc287828801611b1e565b9350506040611bd387828801611b1e565b9250506060611be487828801611b1e565b91505092959194509250565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611c37601f83611bf0565b9150611c4282611c01565b602082019050919050565b60006020820190508181036000830152611c6681611c2a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ca7826118be565b9150611cb2836118be565b925082821015611cc557611cc4611c6d565b5b828203905092915050565b6000611cdb826118be565b9150611ce6836118be565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d1b57611d1a611c6d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611d60826118be565b9150611d6b836118be565b925082611d7b57611d7a611d26565b5b828204905092915050565b6000606082019050611d9b6000830186611ac2565b611da86020830185611ac2565b611db56040830184611ac2565b949350505050565b6000611dc8826118be565b9150611dd3836118be565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e0c57611e0b611c6d565b5b828202905092915050565b600081519050919050565b60005b83811015611e40578082015181840152602081019050611e25565b83811115611e4f576000848401525b50505050565b6000601f19601f8301169050919050565b6000611e7182611e17565b611e7b8185611bf0565b9350611e8b818560208601611e22565b611e9481611e55565b840191505092915050565b60006020820190508181036000830152611eb98184611e66565b90509291505056fea2646970667358221220ed49ba54f441f32b75faa77f3af7d3cdbf0397a5ee369570ccb9efe06684340364736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x50 PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1EF7 DUP1 PUSH2 0xBA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8891CF0D GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC23A5CEA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xF93D4F8A EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x3EA JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x327 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x5F348B4E GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x5F348B4E EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x71E3DB87 EQ PUSH2 0x265 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x3F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH2 0x7A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP3 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0xCDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x277 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36D SWAP3 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH2 0x1156 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F2 PUSH2 0x1411 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x44A PUSH2 0x143E JUMP JUMPDEST PUSH2 0x452 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8B74220000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x598 PUSH2 0x185A JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB018F08700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x696 DUP4 PUSH2 0x1516 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x6EE JUMPI PUSH2 0x6BF PUSH2 0x6B7 DUP3 PUSH1 0x1 SLOAD PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x6DA PUSH2 0x6D2 DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 PUSH2 0x6FD DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0x15A2 JUMP JUMPDEST GT ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 PUSH2 0x712 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x15CC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0x738 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x765 PUSH2 0x15FF JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x7EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x7FF PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DA4CD2E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B4 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x9CD PUSH2 0x143E JUMP JUMPDEST PUSH2 0x9D5 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x740E33B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0xC36 JUMPI PUSH1 0x0 PUSH2 0xBD5 DUP3 PUSH1 0xC0 ADD MLOAD PUSH2 0x15A2 JUMP JUMPDEST GT PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD8456CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xC2E DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0x15CC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4B PUSH2 0x1688 JUMP JUMPDEST PUSH2 0xC53 PUSH2 0x143E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD GT PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x2F9686DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA8 PUSH2 0xCA1 PUSH1 0x6 SLOAD PUSH1 0x5 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0xA PUSH2 0x158C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xCD1 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xCD7 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE2 PUSH2 0x1688 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCF9 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF1A470D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE24 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xE3D PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP TIMESTAMP DUP2 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF6A SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH2 0xFEC DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0xFE7 DUP4 PUSH2 0x1516 JUMP JUMPDEST PUSH2 0x1711 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1009 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x1083 DUP3 PUSH2 0x1516 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD EQ PUSH2 0x10CA JUMPI PUSH3 0x93A80 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10DA PUSH2 0x15FF JUMP JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0x1115 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA552CF1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E DUP2 PUSH1 0x40 MLOAD PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x119C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1193 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x11AC PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x88B440D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x1262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4462D2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP6 PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP4 DUP5 DUP8 PUSH2 0x13EB SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1419 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0x1421 PUSH2 0x143E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D1891400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E567DD400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x152D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1571 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1546 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1775 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x155A SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x1564 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x156E SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1584 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x159A SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C5 PUSH3 0x93A80 DUP4 TIMESTAMP PUSH2 0x15B7 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x158C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0x15E4 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x15EE SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2B4CF15200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x170F JUMPI PUSH1 0x40 MLOAD PUSH32 0x2B4CF15200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x1729 JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x176E JUMP JUMPDEST PUSH2 0x1749 DUP5 PUSH2 0x1744 PUSH2 0x173C DUP8 PUSH1 0x1 SLOAD PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x17E2 JUMP JUMPDEST PUSH2 0x1769 DUP5 PUSH2 0x1764 PUSH2 0x175C DUP8 PUSH1 0x1 SLOAD PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DB PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x1791 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x179B SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x17F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x17F0 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x183F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1836 SWAP2 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x1850 JUMPI PUSH2 0x184F PUSH2 0x1D26 JUMP JUMPDEST JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x187B PUSH2 0x1881 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D1 DUP2 PUSH2 0x18BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x18ED PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1900 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1913 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1926 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1939 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x194C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x195F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x197C PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x198F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x19A2 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x18D7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x19BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1965 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F4 DUP3 PUSH2 0x19C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A04 DUP2 PUSH2 0x19E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A21 DUP2 PUSH2 0x19FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH2 0x1A3C PUSH2 0x19C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4B DUP5 DUP3 DUP6 ADD PUSH2 0x1A12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A69 DUP2 PUSH2 0x1A54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A84 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x1A91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A60 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1AA1 DUP2 PUSH2 0x19E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ACB DUP2 PUSH2 0x18BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B01 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x18BE JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2D DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH2 0x1B48 PUSH2 0x19C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B57 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AC2 JUMP JUMPDEST PUSH2 0x1B82 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AC2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BA3 JUMPI PUSH2 0x1BA2 PUSH2 0x19C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BB1 DUP8 DUP3 DUP9 ADD PUSH2 0x1A12 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BC2 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BD3 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1BE4 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C37 PUSH1 0x1F DUP4 PUSH2 0x1BF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C42 DUP3 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C66 DUP2 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CA7 DUP3 PUSH2 0x18BE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB2 DUP4 PUSH2 0x18BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1CC5 JUMPI PUSH2 0x1CC4 PUSH2 0x1C6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDB DUP3 PUSH2 0x18BE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE6 DUP4 PUSH2 0x18BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D1A PUSH2 0x1C6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D60 DUP3 PUSH2 0x18BE JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6B DUP4 PUSH2 0x18BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D7B JUMPI PUSH2 0x1D7A PUSH2 0x1D26 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D9B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AC2 JUMP JUMPDEST PUSH2 0x1DA8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AC2 JUMP JUMPDEST PUSH2 0x1DB5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AC2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC8 DUP3 PUSH2 0x18BE JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD3 DUP4 PUSH2 0x18BE JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E0B PUSH2 0x1C6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E40 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E25 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E4F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E71 DUP3 PUSH2 0x1E17 JUMP JUMPDEST PUSH2 0x1E7B DUP2 DUP6 PUSH2 0x1BF0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E8B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0x1E94 DUP2 PUSH2 0x1E55 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB9 DUP2 DUP5 PUSH2 0x1E66 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0x49 0xBA SLOAD DELEGATECALL COINBASE RETURN 0x2B PUSH22 0xFAA77F3AF7D3CDBF0397A5EE369570CCB9EFE0668434 SUB PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "880:12663:2:-:0;;;1566:200;;;;;;;;;;1701:1:0;1806:7;:22;;;;1673:2:2;1652:18;:23;;;;1699:2;1685:11;:16;;;;1720:10;1711:6;;:19;;;;;;;;;;;;;;;;;;1749:10;1740:6;;:19;;;;;;;;;;;;;;;;;;880:12663;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateAirdrop_1053": {
									"entryPoint": 5580,
									"id": 1053,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakeReward_740": {
									"entryPoint": 5398,
									"id": 740,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingDuration_709": {
									"entryPoint": 6005,
									"id": 709,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingWithPenalty_789": {
									"entryPoint": 5905,
									"id": 789,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_calculateWeek_1035": {
									"entryPoint": 5538,
									"id": 1035,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkVotingStatus_566": {
									"entryPoint": 5182,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_isVoter_548": {
									"entryPoint": 5254,
									"id": 548,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_owner_422": {
									"entryPoint": 3512,
									"id": 422,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_talax_420": {
									"entryPoint": 2379,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropRate_401": {
									"entryPoint": 3307,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropSince_403": {
									"entryPoint": 3550,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropWeek_1130": {
									"entryPoint": 4252,
									"id": 1130,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@changeAirdropPercentage_1018": {
									"entryPoint": 4306,
									"id": 1018,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePenaltyFee_688": {
									"entryPoint": 3313,
									"id": 688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeTalaxAddress_585": {
									"entryPoint": 1885,
									"id": 585,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimAirdrop_1108": {
									"entryPoint": 2843,
									"id": 1108,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_260": {
									"entryPoint": 5516,
									"id": 260,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_325": {
									"entryPoint": 6136,
									"id": 325,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getVoters_1152": {
									"entryPoint": 2188,
									"id": 1152,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getVotingResult_1298": {
									"entryPoint": 3137,
									"id": 1298,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasStake_983": {
									"entryPoint": 1424,
									"id": 983,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isOwner_525": {
									"entryPoint": 5631,
									"id": 525,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isTalax_505": {
									"entryPoint": 5768,
									"id": 505,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_245": {
									"entryPoint": 5494,
									"id": 245,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@retractVote_1256": {
									"entryPoint": 1012,
									"id": 1256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_664": {
									"entryPoint": 4438,
									"id": 664,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@stakingPenaltyRate_399": {
									"entryPoint": 4246,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAirdropSince_994": {
									"entryPoint": 3290,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startVoting_1176": {
									"entryPoint": 1961,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopVoting_1310": {
									"entryPoint": 5137,
									"id": 1310,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_230": {
									"entryPoint": 6114,
									"id": 230,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalVoters_409": {
									"entryPoint": 2417,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_1216": {
									"entryPoint": 2423,
									"id": 1216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@votedUsers_418": {
									"entryPoint": 3445,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voters_414": {
									"entryPoint": 3469,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawStake_862": {
									"entryPoint": 3556,
									"id": 862,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_t_address": {
									"entryPoint": 6674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$459_memory_ptr_to_t_struct$_Stake_$459_memory_ptr": {
									"entryPoint": 6359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_StakingSummary_$467_memory_ptr_to_t_struct$_StakingSummary_$467_memory_ptr_fromStack": {
									"entryPoint": 6501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$467_memory_ptr__to_t_struct$_StakingSummary_$467_memory_ptr__fromStack_reversed": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7008,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7558,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6596,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11425:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "145:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "162:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "185:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "167:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "167:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "155:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "155:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "133:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "140:3:3",
														"type": ""
													}
												],
												"src": "90:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "358:1304:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "384:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "389:4:3",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "380:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "372:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "404:166:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "441:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "471:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "478:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "467:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "467:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "461:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "461:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "445:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "531:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "549:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "554:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "497:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "497:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "580:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "616:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "646:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "653:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "642:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "642:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "636:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "636:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "620:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "706:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "724:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "729:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "720:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "672:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "672:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "755:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "795:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "825:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "832:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "821:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "821:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "815:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "815:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "799:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "885:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "903:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "908:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "899:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "899:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "851:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "851:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "851:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "934:171:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "976:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1006:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1013:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1002:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1002:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "996:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "996:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "980:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1066:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1084:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1089:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1080:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1080:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1032:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1032:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1032:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1115:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1155:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1185:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1192:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1181:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1175:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1175:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1159:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1245:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1263:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1268:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1259:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1259:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1211:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1211:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1294:176:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1341:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1371:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1378:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1367:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1367:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1361:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1361:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1345:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1431:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1449:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1454:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1445:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1445:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1397:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1397:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1397:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:175:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1526:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1556:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1563:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1552:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1552:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1546:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1546:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1530:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1616:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1634:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1639:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1630:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1630:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1582:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1582:63:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$459_memory_ptr_to_t_struct$_Stake_$459_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "352:3:3",
														"type": ""
													}
												],
												"src": "258:1404:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1868:623:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1878:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1894:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1899:6:3",
																		"type": "",
																		"value": "0x0120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1890:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1890:16:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "1882:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1916:172:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1959:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1989:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1996:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1985:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1985:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1979:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1979:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1963:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2049:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2067:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2072:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2063:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2063:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2015:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2015:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2015:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2098:167:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2136:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2166:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2173:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2156:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2140:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2226:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2244:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2249:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2240:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2240:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2192:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2192:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2192:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2275:209:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2311:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2341:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2348:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2337:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2337:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2331:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2331:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2315:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2445:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2463:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2468:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2459:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2459:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_Stake_$459_memory_ptr_to_t_struct$_Stake_$459_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2367:77:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2367:107:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2367:107:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingSummary_$467_memory_ptr_to_t_struct$_StakingSummary_$467_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1855:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1862:3:3",
														"type": ""
													}
												],
												"src": "1740:751:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2657:187:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2667:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2679:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2690:3:3",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2675:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2667:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2810:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2823:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2834:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2819:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2819:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingSummary_$467_memory_ptr_to_t_struct$_StakingSummary_$467_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2704:105:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2704:133:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2704:133:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$467_memory_ptr__to_t_struct$_StakingSummary_$467_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2629:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2641:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2652:4:3",
														"type": ""
													}
												],
												"src": "2497:347:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2890:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2900:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2916:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2900:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2883:6:3",
														"type": ""
													}
												],
												"src": "2850:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3020:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3037:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3040:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3030:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3030:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3030:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2931:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3143:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3160:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3153:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3153:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3054:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3222:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3232:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3247:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3254:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3232:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3204:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3214:7:3",
														"type": ""
													}
												],
												"src": "3177:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3354:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3364:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3393:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3375:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3375:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3364:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3336:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3346:7:3",
														"type": ""
													}
												],
												"src": "3309:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3454:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3511:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3520:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3523:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3513:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3513:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3513:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3477:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3502:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3484:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3484:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3474:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3474:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3467:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:43:3"
															},
															"nodeType": "YulIf",
															"src": "3464:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3447:5:3",
														"type": ""
													}
												],
												"src": "3411:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3591:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3601:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3623:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3610:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3601:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3666:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3639:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3639:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3639:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3569:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3577:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3585:5:3",
														"type": ""
													}
												],
												"src": "3539:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3750:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3796:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3798:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3798:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3798:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3771:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3780:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3792:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3763:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:32:3"
															},
															"nodeType": "YulIf",
															"src": "3760:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3889:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3904:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3918:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3908:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3933:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3968:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3979:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3964:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3964:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3988:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3943:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3943:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3933:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3720:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3731:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3743:6:3",
														"type": ""
													}
												],
												"src": "3684:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4061:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4071:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4089:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4089:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4082:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4082:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4071:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4043:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4053:7:3",
														"type": ""
													}
												],
												"src": "4019:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4174:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4191:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4211:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4196:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4184:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4184:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4162:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4169:3:3",
														"type": ""
													}
												],
												"src": "4115:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:194:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4366:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4377:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4362:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4354:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4428:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4441:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4452:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4437:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4437:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4390:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4390:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4390:65:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4503:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4516:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4527:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4512:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4512:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4465:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:66:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4465:66:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4308:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4320:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4328:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4339:4:3",
														"type": ""
													}
												],
												"src": "4230:308:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4609:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4626:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4649:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4631:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4631:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4619:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4619:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4619:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4597:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4604:3:3",
														"type": ""
													}
												],
												"src": "4544:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4776:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4788:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4799:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4784:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4784:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4776:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4856:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4869:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4880:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4865:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4865:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4812:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4812:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4738:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4750:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4761:4:3",
														"type": ""
													}
												],
												"src": "4668:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4961:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4978:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5001:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4983:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4983:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4971:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4971:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4971:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4949:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4956:3:3",
														"type": ""
													}
												],
												"src": "4896:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5118:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5128:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5140:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5151:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5136:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5128:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5208:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5221:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5232:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5217:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5217:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5164:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5164:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5164:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5090:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5102:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5113:4:3",
														"type": ""
													}
												],
												"src": "5020:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5340:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5350:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5362:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5373:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5358:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5350:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5424:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5437:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5448:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5433:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5433:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5386:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5386:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5386:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5312:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5324:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5335:4:3",
														"type": ""
													}
												],
												"src": "5248:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5507:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5564:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5573:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5576:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5566:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5566:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5566:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5530:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5555:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5537:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5537:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5527:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5527:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5520:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5520:43:3"
															},
															"nodeType": "YulIf",
															"src": "5517:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5500:5:3",
														"type": ""
													}
												],
												"src": "5464:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5644:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5654:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5676:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5663:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5654:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5719:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5692:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5692:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5622:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5630:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5638:5:3",
														"type": ""
													}
												],
												"src": "5592:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5803:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5849:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5851:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5851:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5851:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5824:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5833:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5820:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5820:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5845:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5816:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:32:3"
															},
															"nodeType": "YulIf",
															"src": "5813:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5942:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5957:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5971:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5961:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5986:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6021:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6032:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6017:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6017:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6041:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5996:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5996:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5986:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5773:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5784:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5796:6:3",
														"type": ""
													}
												],
												"src": "5737:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6198:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6208:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6220:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6231:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6216:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6208:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6288:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6301:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6312:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6297:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6297:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6244:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6244:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6244:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6369:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6382:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6393:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6378:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6378:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6325:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6325:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6325:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6162:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6174:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6182:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6193:4:3",
														"type": ""
													}
												],
												"src": "6072:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6527:648:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6574:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6576:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6576:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6576:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6548:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6557:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6544:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6544:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6569:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6540:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6540:33:3"
															},
															"nodeType": "YulIf",
															"src": "6537:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6667:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6682:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6696:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6686:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6711:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6746:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6757:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6742:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6742:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6766:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6721:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6721:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6711:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6794:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6809:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6823:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6813:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6839:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6874:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6885:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6870:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6870:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6894:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6849:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6849:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6839:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6922:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6937:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6951:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6941:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6967:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7002:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7013:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6998:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6998:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7022:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6977:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6977:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6967:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7050:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7065:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7079:2:3",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7069:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7095:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7130:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7141:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7126:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7126:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7150:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7105:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7105:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7095:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6473:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6484:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6496:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6504:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6512:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6520:6:3",
														"type": ""
													}
												],
												"src": "6410:765:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7277:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7294:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7299:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7287:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7287:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7287:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7315:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7334:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7339:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7330:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7315:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7249:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7254:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7265:11:3",
														"type": ""
													}
												],
												"src": "7181:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7462:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7484:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7492:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7480:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7480:14:3"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7496:33:3",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7473:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7473:57:3"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7454:6:3",
														"type": ""
													}
												],
												"src": "7356:181:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7689:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7699:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7765:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7770:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7706:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7706:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7699:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7871:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "7782:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7782:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7782:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7884:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7895:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7900:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7891:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7884:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7677:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7685:3:3",
														"type": ""
													}
												],
												"src": "7543:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8086:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8096:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8108:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8119:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8104:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8104:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8096:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8143:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8154:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8139:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8139:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8162:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8168:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8158:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8158:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8132:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8132:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8188:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8322:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8196:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8196:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8188:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8066:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8081:4:3",
														"type": ""
													}
												],
												"src": "7915:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8368:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8385:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8388:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8378:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8378:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8378:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8482:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8485:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8475:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8475:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8475:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8506:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8509:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8499:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8499:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8499:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8340:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8571:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8581:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8604:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8586:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8586:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8581:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8615:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8638:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8620:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8620:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8615:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8662:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8664:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8664:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8664:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8656:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8659:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8653:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8653:8:3"
															},
															"nodeType": "YulIf",
															"src": "8650:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8694:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8706:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8709:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8702:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8702:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8694:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8557:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8560:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8566:4:3",
														"type": ""
													}
												],
												"src": "8526:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8767:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8777:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8800:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8782:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8777:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8811:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8834:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8816:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8816:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8811:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8974:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8976:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8976:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8976:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8895:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8902:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8970:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8898:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8898:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8892:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8892:81:3"
															},
															"nodeType": "YulIf",
															"src": "8889:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9006:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9017:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9020:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9013:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9013:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9006:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8754:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8757:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8763:3:3",
														"type": ""
													}
												],
												"src": "8723:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9062:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9079:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9082:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9072:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9072:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9072:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9176:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9179:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9169:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9169:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9169:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9200:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9203:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9193:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9193:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9193:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9034:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9262:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9272:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9295:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9277:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9277:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9272:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9306:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9329:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9311:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9311:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9306:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9353:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9355:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9355:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9355:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9350:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9343:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9343:9:3"
															},
															"nodeType": "YulIf",
															"src": "9340:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9385:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9394:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9397:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9390:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9390:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9385:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9251:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9254:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9260:1:3",
														"type": ""
													}
												],
												"src": "9220:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9565:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9575:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9587:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9598:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9583:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9583:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9575:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9655:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9668:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9679:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9664:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9664:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9611:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9611:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9611:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9736:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9749:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9760:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9745:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9745:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9692:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9692:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9692:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9818:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9831:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9842:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9827:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9827:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9774:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9774:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9774:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9521:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9533:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9541:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9549:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9560:4:3",
														"type": ""
													}
												],
												"src": "9411:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9907:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9917:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9940:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9922:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9922:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9917:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9951:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9974:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9956:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9956:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9951:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10149:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10151:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10151:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10151:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10061:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10054:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10054:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10047:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10047:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10069:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10076:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10144:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10072:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10072:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10066:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10066:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10043:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10043:105:3"
															},
															"nodeType": "YulIf",
															"src": "10040:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10181:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10196:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10199:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10192:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10192:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10181:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9890:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9893:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9899:7:3",
														"type": ""
													}
												],
												"src": "9859:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10272:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10283:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10299:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10293:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10293:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10283:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10255:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10265:6:3",
														"type": ""
													}
												],
												"src": "10213:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10367:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10377:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10386:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10381:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10446:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10471:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10476:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10467:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10467:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10490:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10495:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10486:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10486:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10480:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10480:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10460:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10460:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10460:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10407:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10410:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10404:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10404:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10418:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10420:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10429:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10432:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10425:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10425:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10420:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10400:3:3",
																"statements": []
															},
															"src": "10396:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10543:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10593:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10598:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10589:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10589:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10607:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10582:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10582:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10582:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10524:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10527:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10521:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10521:13:3"
															},
															"nodeType": "YulIf",
															"src": "10518:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10349:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10354:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10359:6:3",
														"type": ""
													}
												],
												"src": "10318:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10679:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10689:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10707:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10714:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10703:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10703:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10723:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10719:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10719:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10699:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10699:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10689:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10662:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "10672:6:3",
														"type": ""
													}
												],
												"src": "10631:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10831:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10841:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10888:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10855:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10855:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10845:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10903:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10969:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10974:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10910:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10910:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10903:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11016:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11023:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11012:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11012:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11030:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11035:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10990:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10990:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10990:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11051:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11062:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11089:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11067:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11067:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11058:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11058:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11051:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10812:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10819:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10827:3:3",
														"type": ""
													}
												],
												"src": "10739:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11227:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11237:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11249:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11260:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11245:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11245:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11237:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11284:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11295:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11280:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11280:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11303:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11309:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11299:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11299:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11273:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11273:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11273:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11329:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11401:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11410:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11337:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11337:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11329:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11199:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11211:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11222:4:3",
														"type": ""
													}
												],
												"src": "11109:313:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Stakable.Stake -> struct Stakable.Stake\n    function abi_encode_t_struct$_Stake_$459_memory_ptr_to_t_struct$_Stake_$459_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // rewardAPY\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // releaseTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // claimableAirdrop\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // latestClaimDrop\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    // struct Stakable.StakingSummary -> struct Stakable.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$467_memory_ptr_to_t_struct$_StakingSummary_$467_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // penalty\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stake\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_struct$_Stake_$459_memory_ptr_to_t_struct$_Stake_$459_memory_ptr(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$467_memory_ptr__to_t_struct$_StakingSummary_$467_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_struct$_StakingSummary_$467_memory_ptr_to_t_struct$_StakingSummary_$467_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8891CF0D GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC23A5CEA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xF93D4F8A EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x3EA JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x327 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x5F348B4E GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x5F348B4E EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x71E3DB87 EQ PUSH2 0x265 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x3F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH2 0x7A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP3 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0xCDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x277 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36D SWAP3 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH2 0x1156 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F2 PUSH2 0x1411 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x44A PUSH2 0x143E JUMP JUMPDEST PUSH2 0x452 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8B74220000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x598 PUSH2 0x185A JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB018F08700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x696 DUP4 PUSH2 0x1516 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x6EE JUMPI PUSH2 0x6BF PUSH2 0x6B7 DUP3 PUSH1 0x1 SLOAD PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x6DA PUSH2 0x6D2 DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 PUSH2 0x6FD DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0x15A2 JUMP JUMPDEST GT ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 PUSH2 0x712 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x15CC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0x738 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x765 PUSH2 0x15FF JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x7EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x7FF PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DA4CD2E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B4 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x9CD PUSH2 0x143E JUMP JUMPDEST PUSH2 0x9D5 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x740E33B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0xC36 JUMPI PUSH1 0x0 PUSH2 0xBD5 DUP3 PUSH1 0xC0 ADD MLOAD PUSH2 0x15A2 JUMP JUMPDEST GT PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD8456CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xC2E DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0x15CC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4B PUSH2 0x1688 JUMP JUMPDEST PUSH2 0xC53 PUSH2 0x143E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD GT PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x2F9686DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA8 PUSH2 0xCA1 PUSH1 0x6 SLOAD PUSH1 0x5 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0xA PUSH2 0x158C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xCD1 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xCD7 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE2 PUSH2 0x1688 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCF9 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF1A470D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE24 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xE3D PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP TIMESTAMP DUP2 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF6A SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH2 0xFEC DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0xFE7 DUP4 PUSH2 0x1516 JUMP JUMPDEST PUSH2 0x1711 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1009 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x1083 DUP3 PUSH2 0x1516 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD EQ PUSH2 0x10CA JUMPI PUSH3 0x93A80 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10DA PUSH2 0x15FF JUMP JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0x1115 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA552CF1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E DUP2 PUSH1 0x40 MLOAD PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x119C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1193 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x11AC PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x88B440D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x1262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4462D2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP6 PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP4 DUP5 DUP8 PUSH2 0x13EB SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1419 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0x1421 PUSH2 0x143E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D1891400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E567DD400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x152D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1571 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1546 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1775 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x155A SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x1564 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x156E SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1584 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x159A SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C5 PUSH3 0x93A80 DUP4 TIMESTAMP PUSH2 0x15B7 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x158C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0x15E4 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x15EE SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2B4CF15200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x170F JUMPI PUSH1 0x40 MLOAD PUSH32 0x2B4CF15200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x1729 JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x176E JUMP JUMPDEST PUSH2 0x1749 DUP5 PUSH2 0x1744 PUSH2 0x173C DUP8 PUSH1 0x1 SLOAD PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x17E2 JUMP JUMPDEST PUSH2 0x1769 DUP5 PUSH2 0x1764 PUSH2 0x175C DUP8 PUSH1 0x1 SLOAD PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DB PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x1791 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x179B SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x17F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x17F0 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x183F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1836 SWAP2 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x1850 JUMPI PUSH2 0x184F PUSH2 0x1D26 JUMP JUMPDEST JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x187B PUSH2 0x1881 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D1 DUP2 PUSH2 0x18BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x18ED PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1900 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1913 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1926 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1939 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x194C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x195F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x197C PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x198F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x18C8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x19A2 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x18D7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x19BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1965 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F4 DUP3 PUSH2 0x19C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A04 DUP2 PUSH2 0x19E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A21 DUP2 PUSH2 0x19FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH2 0x1A3C PUSH2 0x19C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4B DUP5 DUP3 DUP6 ADD PUSH2 0x1A12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A69 DUP2 PUSH2 0x1A54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A84 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x1A91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A60 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1AA1 DUP2 PUSH2 0x19E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ACB DUP2 PUSH2 0x18BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B01 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x18BE JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2D DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH2 0x1B48 PUSH2 0x19C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B57 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AC2 JUMP JUMPDEST PUSH2 0x1B82 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AC2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BA3 JUMPI PUSH2 0x1BA2 PUSH2 0x19C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BB1 DUP8 DUP3 DUP9 ADD PUSH2 0x1A12 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BC2 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BD3 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1BE4 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C37 PUSH1 0x1F DUP4 PUSH2 0x1BF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C42 DUP3 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C66 DUP2 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CA7 DUP3 PUSH2 0x18BE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB2 DUP4 PUSH2 0x18BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1CC5 JUMPI PUSH2 0x1CC4 PUSH2 0x1C6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDB DUP3 PUSH2 0x18BE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE6 DUP4 PUSH2 0x18BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D1A PUSH2 0x1C6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D60 DUP3 PUSH2 0x18BE JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6B DUP4 PUSH2 0x18BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D7B JUMPI PUSH2 0x1D7A PUSH2 0x1D26 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D9B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AC2 JUMP JUMPDEST PUSH2 0x1DA8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AC2 JUMP JUMPDEST PUSH2 0x1DB5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AC2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC8 DUP3 PUSH2 0x18BE JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD3 DUP4 PUSH2 0x18BE JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E0B PUSH2 0x1C6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E40 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E25 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E4F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E71 DUP3 PUSH2 0x1E17 JUMP JUMPDEST PUSH2 0x1E7B DUP2 DUP6 PUSH2 0x1BF0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E8B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0x1E94 DUP2 PUSH2 0x1E55 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB9 DUP2 DUP5 PUSH2 0x1E66 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0x49 0xBA SLOAD DELEGATECALL COINBASE RETURN 0x2B PUSH22 0xFAA77F3AF7D3CDBF0397A5EE369570CCB9EFE0668434 SUB PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "880:12663:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12533:412;;;:::i;:::-;;8674:1127;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4409:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11835:283;;;:::i;:::-;;11627:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1511:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1382:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12124:403;;;:::i;:::-;;10577:728;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12951:488;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9913:95;;;:::i;:::-;;1251:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5893:306;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1459:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1414:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1538:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1283:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7870:798;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1212:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11311:204;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10014:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4713:1174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13445:96;;;:::i;:::-;;12533:412;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;4259:20:2::1;:18;:20::i;:::-;3977:10:::2;:8;:10::i;:::-;12788:5:::3;12749:44;;:6;:18;12756:10;12749:18;;;;;;;;;;;;;;;:24;;:35;12774:9;;12749:35;;;;;;;;;;;;;;;;;;;;;:44;;;12745:103;;;12816:21;;;;;;;;;;;;;;12745:103;12897:5;12858:44;;:6;:18;12865:10;12858:18;;;;;;;;;;;;;;;:24;;:35;12883:9;;12858:35;;;;;;;;;;;;;;;;;;::::0;;:44;12937:1:::3;12912:10;:21;12923:9;;12912:21;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;1701:1:0::0;2628:7;:22;;;;12533:412:2:o;8674:1127::-;8717:21;;:::i;:::-;8750:23;8776:12;:24;8789:10;8776:24;;;;;;;;;;;;;;;8750:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8896:1;8875:10;:17;;;:22;8871:85;;8920:25;;;;;;;;;;;;;;8871:85;8965:29;8997:32;;;;;;;;9012:1;8997:32;;;;9015:1;8997:32;;;;9018:10;8997:32;;;8965:64;;9040:14;9057:33;9079:10;9057:21;:33::i;:::-;9040:50;;9133:15;9105:7;:13;;;:25;;;:43;9101:316;;;9346:60;9359:40;9372:6;9380:18;;9359:12;:40::i;:::-;9401:4;9346:12;:60::i;:::-;9198:129;9232:51;9245:10;:17;;;9264:18;;9232:12;:51::i;:::-;9305:4;9198:12;:129::i;:::-;:208;;;;:::i;:::-;9164:7;:15;;:242;;;;;9101:316;9476:1;9431:42;9446:10;:26;;;9431:14;:42::i;:::-;:46;9427:250;;;9493:15;9511:36;9529:10;:17;;;9511;:36::i;:::-;9493:54;;9594:7;9561;:13;;;:30;;:40;;;;;9479:133;9427:250;;;9665:1;9632:7;:13;;;:30;;:34;;;;;9427:250;9713:6;9687:7;:13;;;:23;;:32;;;;;9752:10;:17;;;9729:7;:20;;:40;;;;;9787:7;9780:14;;;;;8674:1127;:::o;4409:93::-;3678:9;:7;:9::i;:::-;4490:5:::1;4481:6;;:14;;;;;;;;;;;;;;;;;;4409:93:::0;:::o;11835:283::-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3416:9:2::1;:7;:9::i;:::-;11994:4:::2;11977:21;;:13;;;;;;;;;;;:21;;;11973:84;;;12021:25;;;;;;;;;;;;;;11973:84;12083:4;12067:13;;:20;;;;;;;;;;;;;;;;;;12110:1;12097:9;;:14;;;;;;;:::i;:::-;;;;;;;;1701:1:0::0;2628:7;:22;;;;11835:283:2:o;11627:149::-;11683:4;11689;11713:6;:12;11720:4;11713:12;;;;;;;;;;;;;;;:24;;;;;;;;;;;;11739:6;:12;11746:4;11739:12;;;;;;;;;;;;;;;:18;;:29;11758:9;;11739:29;;;;;;;;;;;;;;;;;;;;;11705:64;;;;11627:149;;;:::o;1511:21::-;;;;;;;;;;;;;:::o;1382:26::-;;;;:::o;12124:403::-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;4259:20:2::1;:18;:20::i;:::-;3977:10:::2;:8;:10::i;:::-;12372:4:::3;12333:43;;:6;:18;12340:10;12333:18;;;;;;;;;;;;;;;:24;;:35;12358:9;;12333:35;;;;;;;;;;;;;;;;;;;;;:43;;;12329:103;;;12399:22;;;;;;;;;;;;;;12329:103;12480:4;12442:6;:18;12449:10;12442:18;;;;;;;;;;;;;;;:24;;:35;12467:9;;12442:35;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;12519:1;12494:10;:21;12505:9;;12494:21;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;1701:1:0::0;2628:7;:22;;;;12124:403:2:o;10577:728::-;10678:7;3416:9;:7;:9::i;:::-;10746:19:::1;10768:12;:18;10781:4;10768:18;;;;;;;;;;;;;;;10746:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;10817:1;10801:6;:13;;;:17;10797:502;;;11028:1;10986:38;11001:6;:22;;;10986:14;:38::i;:::-;:43;10982:118;;11056:29;;;;;;;;;;;;;;10982:118;11140:1;11114:6;:23;;:27;;;::::0;::::1;11180:15;11155:6;:22;;:40;;;::::0;::::1;11217:32;11235:6;:13;;;11217:17;:32::i;:::-;11210:39;;;;;10797:502;11287:1;11280:8;;;3435:1;10577:728:::0;;;:::o;12951:488::-;13068:4;3416:9;:7;:9::i;:::-;4259:20:::1;:18;:20::i;:::-;13165:1:::2;13150:11;;:16;13146:79;;13189:25;;;;;;;;;;;;;;13146:79;13234:19;13256:46;13269:28;13282:11;;13295:1;13269:12;:28::i;:::-;13299:2;13256:12;:46::i;:::-;13234:68;;13341:11;13317:10;:21;13328:9;;13317:21;;;;;;;;;;;;:35;13313:120;;;13375:4;13368:11;;;;;13313:120;13417:5;13410:12;;;4289:1;12951:488:::0;:::o;9913:95::-;3416:9;:7;:9::i;:::-;9986:15:::1;9971:12;:30;;;;9913:95::o:0;1251:26::-;;;;:::o;5893:306::-;3678:9;:7;:9::i;:::-;6051:2:::1;6042:6;:11;6038:81;;;6076:32;;;;;;;;;;;;;;6038:81;6149:6;6128:18;:27;;;;6170:22;6185:6;6170:22;;;;;;:::i;:::-;;;;;;;;5893:306:::0;:::o;1459:45::-;;;;;;;;;;;;;;;;;:::o;1414:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1538:21::-;;;;;;;;;;;;;:::o;1283:27::-;;;;:::o;7870:798::-;7980:7;7989;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3416:9:2::1;:7;:9::i;:::-;8113:23:::2;8139:12;:18;8152:4;8139:18;;;;;;;;;;;;;;;8113:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;8175:12;:18;8188:4;8175:18;;;;;;;;;;;;;;;;8168:25:::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8233:15;8208:10;:22;;;:40;8204:314;;;8279:1;8264:11;;:16;;;;;;;:::i;:::-;;;;;;;;8301:6;:12;8308:4;8301:12;;;;;;;;;;;;;;;:18;;:29;8320:9;;8301:29;;;;;;;;;;;;8294:36;;;;;;;;;;;8367:140;8417:10;:17;;;8456:33;8478:10;8456:21;:33::i;:::-;8367:28;:140::i;:::-;8344:163;;;;;;;8204:314;8543:1;8528:11;;:16;;;;;;;:::i;:::-;;;;;;;;8561:6;:12;8568:4;8561:12;;;;;;;;;;;;;;;:18;;:29;8580:9;;8561:29;;;;;;;;;;;;8554:36;;;;;;;;;;;8608:10;:17;;;8627:33;8649:10;8627:21;:33::i;:::-;8600:61;;;;;3435:1;1701::0::0;2628:7;:22;;;;7870:798:2;;;:::o;1212:33::-;;;;:::o;11311:204::-;11355:7;11394:1;11378:12;;:17;11374:135;;11453:6;11437:12;;11419:15;:30;;;;:::i;:::-;11418:41;;;;:::i;:::-;11411:48;;;;11374:135;11497:1;11490:8;;11311:204;;:::o;10014:234::-;3678:9;:7;:9::i;:::-;10105:3:::1;10096:6;:12;10092:83;;;10131:33;;;;;;;;;;;;;;10092:83;10198:6;10184:11;:20;;;;10219:22;10234:6;10219:22;;;;;;:::i;:::-;;;;;;;;10014:234:::0;:::o;4713:1174::-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3416:9:2::1;:7;:9::i;:::-;5003:1:::2;4993:6;:11;4989:78;;5027:29;;;;;;;;;;;;;;4989:78;5181:1;5152:12;:18;5165:4;5152:18;;;;;;;;;;;;;;;:25;;;:30;5148:91;;5205:23;;;;;;;;;;;;;;5148:91;5264:1;5249:11;;:16;;;;;;;:::i;:::-;;;;;;;;5302:4;5275:6;:12;5282:4;5275:12;;;;;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;5404:17;5424:15;5404:35;;5589:166;;;;;;;;5608:6;5589:166;;;;5628:9;5589:166;;;;5651:10;5589:166;;;;5690:9;5676:11;:23;;;;:::i;:::-;5589:166;;;;5714:1;5589:166;;;;5729:1;5589:166;;;;5744:1;5589:166;;::::0;5568:12:::2;:18;5581:4;5568:18;;;;;;;;;;;;;;;:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5829:4;5822:58;;;5835:6;5843:9;5869;5855:11;:23;;;;:::i;:::-;5822:58;;;;;;;;:::i;:::-;;;;;;;;4869:1018;1701:1:0::0;2628:7;:22;;;;4713:1174:2;;;;:::o;13445:96::-;3416:9;:7;:9::i;:::-;4259:20:::1;:18;:20::i;:::-;13529:5:::2;13513:13;;:21;;;;;;;;;;;;;;;;;;13445:96::o:0;4011:204::-;4132:13;;;;;;;;;;;4127:82;;4168:30;;;;;;;;;;;;;;4127:82;4011:204::o;3711:231::-;3876:5;3842:39;;:6;:18;3849:10;3842:18;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:39;;;3838:98;;;3904:21;;;;;;;;;;;;;;3838:98;3711:231::o;6560:437::-;6663:7;6711:1;6690:10;:17;;;:22;6686:61;;;6735:1;6728:8;;;;6686:61;6986:4;6939:43;6965:10;:16;;;6939:25;:43::i;:::-;6900:10;:20;;;6864:10;:17;;;:56;;;;:::i;:::-;:118;;;;:::i;:::-;6863:127;;;;:::i;:::-;6844:146;;6560:437;;;;:::o;3451:96:1:-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;10254:132:2:-;10316:7;10342:37;10372:6;10361:5;10343:15;:23;;;;:::i;:::-;10342:29;;:37;;;;:::i;:::-;10335:44;;10254:132;;;:::o;10392:179::-;10487:7;10556:8;10548:4;10533:11;;10519;:25;;;;:::i;:::-;10518:34;;;;:::i;:::-;10517:47;;;;:::i;:::-;10510:54;;10392:179;;;:::o;3449:192::-;3570:6;;;;;;;;;;;3556:20;;:10;:20;;;3552:83;;3599:25;;;;;;;;;;;;;;3552:83;3449:192::o;3187:::-;3308:6;;;;;;;;;;;3294:20;;:10;:20;;;3290:83;;3337:25;;;;;;;;;;;;;;3290:83;3187:192::o;7003:521::-;7120:7;7129;7166:1;7156:6;:11;7152:55;;;7191:1;7194;7183:13;;;;;;7152:55;7237:128;7267:6;7291:60;7304:40;7317:6;7325:18;;7304:12;:40::i;:::-;7346:4;7291:12;:60::i;:::-;7237:12;:128::i;:::-;7379;7409:6;7433:60;7446:40;7459:6;7467:18;;7446:12;:40::i;:::-;7488:4;7433:12;:60::i;:::-;7379:12;:128::i;:::-;7216:301;;;;7003:521;;;;;;:::o;6205:349::-;6302:7;6396:151;6454:4;6445:5;6427:15;:23;;;;:::i;:::-;6426:32;;;;:::i;:::-;6476:8;6396:151;;;;;;;;;;;;;;;;;:12;:151::i;:::-;6377:170;;6205:349;;;:::o;3108:96:1:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;5660:230::-;5776:7;5831:1;5827;:5;5834:12;5819:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5872:1;5868;:5;;;;;:::i;:::-;;;5861:12;;5660:230;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:108::-;167:24;185:5;167:24;:::i;:::-;162:3;155:37;90:108;;:::o;258:1404::-;389:4;384:3;380:14;478:4;471:5;467:16;461:23;497:63;554:4;549:3;545:14;531:12;497:63;:::i;:::-;404:166;653:4;646:5;642:16;636:23;672:63;729:4;724:3;720:14;706:12;672:63;:::i;:::-;580:165;832:4;825:5;821:16;815:23;851:63;908:4;903:3;899:14;885:12;851:63;:::i;:::-;755:169;1013:4;1006:5;1002:16;996:23;1032:63;1089:4;1084:3;1080:14;1066:12;1032:63;:::i;:::-;934:171;1192:4;1185:5;1181:16;1175:23;1211:63;1268:4;1263:3;1259:14;1245:12;1211:63;:::i;:::-;1115:169;1378:4;1371:5;1367:16;1361:23;1397:63;1454:4;1449:3;1445:14;1431:12;1397:63;:::i;:::-;1294:176;1563:4;1556:5;1552:16;1546:23;1582:63;1639:4;1634:3;1630:14;1616:12;1582:63;:::i;:::-;1480:175;358:1304;258:1404;;:::o;1740:751::-;1899:6;1894:3;1890:16;1996:4;1989:5;1985:16;1979:23;2015:63;2072:4;2067:3;2063:14;2049:12;2015:63;:::i;:::-;1916:172;2173:4;2166:5;2162:16;2156:23;2192:63;2249:4;2244:3;2240:14;2226:12;2192:63;:::i;:::-;2098:167;2348:4;2341:5;2337:16;2331:23;2367:107;2468:4;2463:3;2459:14;2445:12;2367:107;:::i;:::-;2275:209;1868:623;1740:751;;:::o;2497:347::-;2652:4;2690:3;2679:9;2675:19;2667:27;;2704:133;2834:1;2823:9;2819:17;2810:6;2704:133;:::i;:::-;2497:347;;;;:::o;2931:117::-;3040:1;3037;3030:12;3177:126;3214:7;3254:42;3247:5;3243:54;3232:65;;3177:126;;;:::o;3309:96::-;3346:7;3375:24;3393:5;3375:24;:::i;:::-;3364:35;;3309:96;;;:::o;3411:122::-;3484:24;3502:5;3484:24;:::i;:::-;3477:5;3474:35;3464:63;;3523:1;3520;3513:12;3464:63;3411:122;:::o;3539:139::-;3585:5;3623:6;3610:20;3601:29;;3639:33;3666:5;3639:33;:::i;:::-;3539:139;;;;:::o;3684:329::-;3743:6;3792:2;3780:9;3771:7;3767:23;3763:32;3760:119;;;3798:79;;:::i;:::-;3760:119;3918:1;3943:53;3988:7;3979:6;3968:9;3964:22;3943:53;:::i;:::-;3933:63;;3889:117;3684:329;;;;:::o;4019:90::-;4053:7;4096:5;4089:13;4082:21;4071:32;;4019:90;;;:::o;4115:109::-;4196:21;4211:5;4196:21;:::i;:::-;4191:3;4184:34;4115:109;;:::o;4230:308::-;4339:4;4377:2;4366:9;4362:18;4354:26;;4390:65;4452:1;4441:9;4437:17;4428:6;4390:65;:::i;:::-;4465:66;4527:2;4516:9;4512:18;4503:6;4465:66;:::i;:::-;4230:308;;;;;:::o;4544:118::-;4631:24;4649:5;4631:24;:::i;:::-;4626:3;4619:37;4544:118;;:::o;4668:222::-;4761:4;4799:2;4788:9;4784:18;4776:26;;4812:71;4880:1;4869:9;4865:17;4856:6;4812:71;:::i;:::-;4668:222;;;;:::o;4896:118::-;4983:24;5001:5;4983:24;:::i;:::-;4978:3;4971:37;4896:118;;:::o;5020:222::-;5113:4;5151:2;5140:9;5136:18;5128:26;;5164:71;5232:1;5221:9;5217:17;5208:6;5164:71;:::i;:::-;5020:222;;;;:::o;5248:210::-;5335:4;5373:2;5362:9;5358:18;5350:26;;5386:65;5448:1;5437:9;5433:17;5424:6;5386:65;:::i;:::-;5248:210;;;;:::o;5464:122::-;5537:24;5555:5;5537:24;:::i;:::-;5530:5;5527:35;5517:63;;5576:1;5573;5566:12;5517:63;5464:122;:::o;5592:139::-;5638:5;5676:6;5663:20;5654:29;;5692:33;5719:5;5692:33;:::i;:::-;5592:139;;;;:::o;5737:329::-;5796:6;5845:2;5833:9;5824:7;5820:23;5816:32;5813:119;;;5851:79;;:::i;:::-;5813:119;5971:1;5996:53;6041:7;6032:6;6021:9;6017:22;5996:53;:::i;:::-;5986:63;;5942:117;5737:329;;;;:::o;6072:332::-;6193:4;6231:2;6220:9;6216:18;6208:26;;6244:71;6312:1;6301:9;6297:17;6288:6;6244:71;:::i;:::-;6325:72;6393:2;6382:9;6378:18;6369:6;6325:72;:::i;:::-;6072:332;;;;;:::o;6410:765::-;6496:6;6504;6512;6520;6569:3;6557:9;6548:7;6544:23;6540:33;6537:120;;;6576:79;;:::i;:::-;6537:120;6696:1;6721:53;6766:7;6757:6;6746:9;6742:22;6721:53;:::i;:::-;6711:63;;6667:117;6823:2;6849:53;6894:7;6885:6;6874:9;6870:22;6849:53;:::i;:::-;6839:63;;6794:118;6951:2;6977:53;7022:7;7013:6;7002:9;6998:22;6977:53;:::i;:::-;6967:63;;6922:118;7079:2;7105:53;7150:7;7141:6;7130:9;7126:22;7105:53;:::i;:::-;7095:63;;7050:118;6410:765;;;;;;;:::o;7181:169::-;7265:11;7299:6;7294:3;7287:19;7339:4;7334:3;7330:14;7315:29;;7181:169;;;;:::o;7356:181::-;7496:33;7492:1;7484:6;7480:14;7473:57;7356:181;:::o;7543:366::-;7685:3;7706:67;7770:2;7765:3;7706:67;:::i;:::-;7699:74;;7782:93;7871:3;7782:93;:::i;:::-;7900:2;7895:3;7891:12;7884:19;;7543:366;;;:::o;7915:419::-;8081:4;8119:2;8108:9;8104:18;8096:26;;8168:9;8162:4;8158:20;8154:1;8143:9;8139:17;8132:47;8196:131;8322:4;8196:131;:::i;:::-;8188:139;;7915:419;;;:::o;8340:180::-;8388:77;8385:1;8378:88;8485:4;8482:1;8475:15;8509:4;8506:1;8499:15;8526:191;8566:4;8586:20;8604:1;8586:20;:::i;:::-;8581:25;;8620:20;8638:1;8620:20;:::i;:::-;8615:25;;8659:1;8656;8653:8;8650:34;;;8664:18;;:::i;:::-;8650:34;8709:1;8706;8702:9;8694:17;;8526:191;;;;:::o;8723:305::-;8763:3;8782:20;8800:1;8782:20;:::i;:::-;8777:25;;8816:20;8834:1;8816:20;:::i;:::-;8811:25;;8970:1;8902:66;8898:74;8895:1;8892:81;8889:107;;;8976:18;;:::i;:::-;8889:107;9020:1;9017;9013:9;9006:16;;8723:305;;;;:::o;9034:180::-;9082:77;9079:1;9072:88;9179:4;9176:1;9169:15;9203:4;9200:1;9193:15;9220:185;9260:1;9277:20;9295:1;9277:20;:::i;:::-;9272:25;;9311:20;9329:1;9311:20;:::i;:::-;9306:25;;9350:1;9340:35;;9355:18;;:::i;:::-;9340:35;9397:1;9394;9390:9;9385:14;;9220:185;;;;:::o;9411:442::-;9560:4;9598:2;9587:9;9583:18;9575:26;;9611:71;9679:1;9668:9;9664:17;9655:6;9611:71;:::i;:::-;9692:72;9760:2;9749:9;9745:18;9736:6;9692:72;:::i;:::-;9774;9842:2;9831:9;9827:18;9818:6;9774:72;:::i;:::-;9411:442;;;;;;:::o;9859:348::-;9899:7;9922:20;9940:1;9922:20;:::i;:::-;9917:25;;9956:20;9974:1;9956:20;:::i;:::-;9951:25;;10144:1;10076:66;10072:74;10069:1;10066:81;10061:1;10054:9;10047:17;10043:105;10040:131;;;10151:18;;:::i;:::-;10040:131;10199:1;10196;10192:9;10181:20;;9859:348;;;;:::o;10213:99::-;10265:6;10299:5;10293:12;10283:22;;10213:99;;;:::o;10318:307::-;10386:1;10396:113;10410:6;10407:1;10404:13;10396:113;;;10495:1;10490:3;10486:11;10480:18;10476:1;10471:3;10467:11;10460:39;10432:2;10429:1;10425:10;10420:15;;10396:113;;;10527:6;10524:1;10521:13;10518:101;;;10607:1;10598:6;10593:3;10589:16;10582:27;10518:101;10367:258;10318:307;;;:::o;10631:102::-;10672:6;10723:2;10719:7;10714:2;10707:5;10703:14;10699:28;10689:38;;10631:102;;;:::o;10739:364::-;10827:3;10855:39;10888:5;10855:39;:::i;:::-;10910:71;10974:6;10969:3;10910:71;:::i;:::-;10903:78;;10990:52;11035:6;11030:3;11023:4;11016:5;11012:16;10990:52;:::i;:::-;11067:29;11089:6;11067:29;:::i;:::-;11062:3;11058:39;11051:46;;10831:272;10739:364;;;;:::o;11109:313::-;11222:4;11260:2;11249:9;11245:18;11237:26;;11309:9;11303:4;11299:20;11295:1;11284:9;11280:17;11273:47;11337:78;11410:4;11401:6;11337:78;:::i;:::-;11329:86;;11109:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1585400",
								"executionCost": "116533",
								"totalCost": "1701933"
							},
							"external": {
								"_owner()": "2625",
								"_talax()": "2537",
								"airdropRate()": "2452",
								"airdropSince()": "2562",
								"airdropWeek()": "infinite",
								"changeAirdropPercentage(uint256)": "infinite",
								"changePenaltyFee(uint256)": "infinite",
								"changeTalaxAddress(address)": "26984",
								"claimAirdrop(address)": "infinite",
								"getVoters(address)": "infinite",
								"getVotingResult()": "infinite",
								"hasStake()": "infinite",
								"retractVote()": "infinite",
								"stake(address,uint256,uint256,uint256)": "infinite",
								"stakingPenaltyRate()": "2473",
								"startAirdropSince()": "24584",
								"startVoting()": "infinite",
								"stopVoting()": "28914",
								"totalVoters()": "2474",
								"vote()": "infinite",
								"votedUsers(uint256)": "infinite",
								"voters(address)": "2959",
								"withdrawStake(address)": "infinite"
							},
							"internal": {
								"_calculateAirdrop(uint256)": "infinite",
								"_calculateStakeReward(struct Stakable.Stake memory)": "infinite",
								"_calculateStakingDuration(uint256)": "infinite",
								"_calculateStakingWithPenalty(uint256,uint256)": "infinite",
								"_calculateWeek(uint256)": "infinite",
								"_checkVotingStatus()": "infinite",
								"_isVoter()": "infinite",
								"isOwner()": "infinite",
								"isTalax()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 880,
									"end": 13543,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 880,
									"end": 13543,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 880,
									"end": 13543,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1566,
									"end": 1766,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1673,
									"end": 1675,
									"name": "PUSH",
									"source": 2,
									"value": "F"
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1652,
									"end": 1675,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1652,
									"end": 1675,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1652,
									"end": 1675,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1652,
									"end": 1675,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1699,
									"end": 1701,
									"name": "PUSH",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 1685,
									"end": 1696,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1685,
									"end": 1701,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1701,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1701,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1685,
									"end": 1701,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1711,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1711,
									"end": 1730,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1759,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1746,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1740,
									"end": 1746,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1740,
									"end": 1759,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 880,
									"end": 13543,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 880,
									"end": 13543,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 880,
									"end": 13543,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 880,
									"end": 13543,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 13543,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 880,
									"end": 13543,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 13543,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ed49ba54f441f32b75faa77f3af7d3cdbf0397a5ee369570ccb9efe06684340364736f6c634300080b0033",
									".code": [
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "8891CF0D"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "C23A5CEA"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "C23A5CEA"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "CB79C2E1"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "CBB3E152"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "D5DBDF1B"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "F93D4F8A"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "FAB2F86B"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "8891CF0D"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "8C63F97F"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "A143A5F2"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "A3EC138D"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "B2BDFA7B"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "B87DA76D"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "5F348B4E"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "5F348B4E"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "5F5300FF"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "632A9A52"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "65F8C6C5"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "671D2B75"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "71E3DB87"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "70C8B74"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "10486B6A"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "1D77B00B"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "1EC6B60A"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "2D15CC04"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 13543,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3977,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3977,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3977,
											"end": 3987,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3977,
											"end": 3987,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3977,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12788,
											"end": 12793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12793,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12793,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12755,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12756,
											"end": 12766,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12767,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12773,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12749,
											"end": 12773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12774,
											"end": 12783,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12774,
											"end": 12783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12749,
											"end": 12784,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12793,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12793,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12749,
											"end": 12793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12745,
											"end": 12848,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12745,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 12745,
											"end": 12848,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "PUSH",
											"source": 2,
											"value": "8B74220000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12837,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12745,
											"end": 12848,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 12745,
											"end": 12848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12902,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12858,
											"end": 12902,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12902,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12864,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12865,
											"end": 12875,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12882,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12858,
											"end": 12882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12892,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12883,
											"end": 12892,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12937,
											"end": 12938,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12912,
											"end": 12922,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12923,
											"end": 12932,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12923,
											"end": 12932,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12945,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8717,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 8717,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8717,
											"end": 8738,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8717,
											"end": 8738,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 8717,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8776,
											"end": 8788,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8789,
											"end": 8799,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8776,
											"end": 8800,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8896,
											"end": 8897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8875,
											"end": 8892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8875,
											"end": 8892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8875,
											"end": 8897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8871,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8871,
											"end": 8956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "PUSH",
											"source": 2,
											"value": "B018F08700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8920,
											"end": 8945,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8871,
											"end": 8956,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8871,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8965,
											"end": 8994,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9018,
											"end": 9028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8997,
											"end": 9029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8965,
											"end": 9029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8965,
											"end": 9029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9057,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 9079,
											"end": 9089,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9057,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 9057,
											"end": 9090,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9057,
											"end": 9090,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 9057,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9090,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9133,
											"end": 9148,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9105,
											"end": 9118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9130,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9105,
											"end": 9130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9148,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9101,
											"end": 9417,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9101,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 9101,
											"end": 9417,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 9359,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 9372,
											"end": 9378,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9380,
											"end": 9398,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9380,
											"end": 9398,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9359,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 9359,
											"end": 9399,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9359,
											"end": 9399,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 9359,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9401,
											"end": 9405,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 9346,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 9346,
											"end": 9406,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9346,
											"end": 9406,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 9346,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 9232,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 9245,
											"end": 9255,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9245,
											"end": 9262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9245,
											"end": 9262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9232,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 9232,
											"end": 9283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9232,
											"end": 9283,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 9232,
											"end": 9283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 9198,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 9198,
											"end": 9327,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9198,
											"end": 9327,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 9198,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 9198,
											"end": 9406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 9198,
											"end": 9406,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9198,
											"end": 9406,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 9198,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9101,
											"end": 9417,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 9101,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9476,
											"end": 9477,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9431,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9446,
											"end": 9456,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9431,
											"end": 9473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9431,
											"end": 9473,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9431,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9477,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9677,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9427,
											"end": 9677,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9511,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 9529,
											"end": 9539,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9529,
											"end": 9546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9511,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9511,
											"end": 9547,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9511,
											"end": 9547,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 9511,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9493,
											"end": 9547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9493,
											"end": 9547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9594,
											"end": 9601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9561,
											"end": 9568,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9561,
											"end": 9591,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 9561,
											"end": 9591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9561,
											"end": 9601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9561,
											"end": 9601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9561,
											"end": 9601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9561,
											"end": 9601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9561,
											"end": 9601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9479,
											"end": 9612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 9427,
											"end": 9677,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9677,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9427,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9665,
											"end": 9666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9639,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9645,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9632,
											"end": 9645,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9645,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9662,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 9632,
											"end": 9662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9666,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9666,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9666,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9677,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 9427,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9687,
											"end": 9694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9687,
											"end": 9700,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9687,
											"end": 9700,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9687,
											"end": 9700,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9687,
											"end": 9710,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9687,
											"end": 9710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9687,
											"end": 9719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9687,
											"end": 9719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9687,
											"end": 9719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9687,
											"end": 9719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9687,
											"end": 9719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9752,
											"end": 9762,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9752,
											"end": 9769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9752,
											"end": 9769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9752,
											"end": 9769,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9729,
											"end": 9736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9729,
											"end": 9749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9729,
											"end": 9749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9729,
											"end": 9769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9729,
											"end": 9769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9729,
											"end": 9769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9729,
											"end": 9769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9729,
											"end": 9769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9780,
											"end": 9794,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9780,
											"end": 9794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9780,
											"end": 9794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9780,
											"end": 9794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9780,
											"end": 9794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 9801,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4490,
											"end": 4495,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4487,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4481,
											"end": 4487,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4502,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3416,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11994,
											"end": 11998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11977,
											"end": 11998,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11998,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 11977,
											"end": 11990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11998,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11998,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11977,
											"end": 11998,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12057,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 11973,
											"end": 12057,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "PUSH",
											"source": 2,
											"value": "6DA4CD2E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12021,
											"end": 12046,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12057,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 11973,
											"end": 12057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12083,
											"end": 12087,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12067,
											"end": 12080,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12067,
											"end": 12080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12067,
											"end": 12087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12110,
											"end": 12111,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12097,
											"end": 12106,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12097,
											"end": 12106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12097,
											"end": 12111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 12118,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11719,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11720,
											"end": 11724,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11713,
											"end": 11725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 11713,
											"end": 11737,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11745,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11746,
											"end": 11750,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11739,
											"end": 11751,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11757,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11739,
											"end": 11757,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11767,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 11758,
											"end": 11767,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 11739,
											"end": 11768,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11705,
											"end": 11769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11705,
											"end": 11769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11705,
											"end": 11769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11705,
											"end": 11769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11776,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3977,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3977,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3977,
											"end": 3987,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3977,
											"end": 3987,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3977,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12376,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12333,
											"end": 12376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12339,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12340,
											"end": 12350,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12357,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12333,
											"end": 12357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12367,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12358,
											"end": 12367,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12333,
											"end": 12368,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12333,
											"end": 12376,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12329,
											"end": 12432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12329,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 12329,
											"end": 12432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "740E33B000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12329,
											"end": 12432,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 12329,
											"end": 12432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12480,
											"end": 12484,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12442,
											"end": 12448,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12449,
											"end": 12459,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12466,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12442,
											"end": 12466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12467,
											"end": 12476,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12467,
											"end": 12476,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12477,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12519,
											"end": 12520,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12494,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12505,
											"end": 12514,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12505,
											"end": 12514,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12124,
											"end": 12527,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10678,
											"end": 10685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3416,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10768,
											"end": 10780,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10785,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 10786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10801,
											"end": 10807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10801,
											"end": 10814,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10814,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10818,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10797,
											"end": 11299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10797,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10797,
											"end": 11299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11028,
											"end": 11029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10986,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11001,
											"end": 11007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11001,
											"end": 11023,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 11001,
											"end": 11023,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11001,
											"end": 11023,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10986,
											"end": 11000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 10986,
											"end": 11024,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10986,
											"end": 11024,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 10986,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10986,
											"end": 11029,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10982,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10982,
											"end": 11100,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "PUSH",
											"source": 2,
											"value": "DD8456CC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11085,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10982,
											"end": 11100,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10982,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11140,
											"end": 11141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11114,
											"end": 11120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11114,
											"end": 11137,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 11114,
											"end": 11137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11114,
											"end": 11141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11114,
											"end": 11141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11114,
											"end": 11141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11114,
											"end": 11141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11114,
											"end": 11141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11180,
											"end": 11195,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11177,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 11155,
											"end": 11177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11217,
											"end": 11249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11235,
											"end": 11241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11235,
											"end": 11248,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11235,
											"end": 11248,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11235,
											"end": 11248,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11217,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 11217,
											"end": 11249,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11217,
											"end": 11249,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11217,
											"end": 11249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11210,
											"end": 11249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11210,
											"end": 11249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11210,
											"end": 11249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11210,
											"end": 11249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 11210,
											"end": 11249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10797,
											"end": 11299,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10797,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11280,
											"end": 11288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11280,
											"end": 11288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11280,
											"end": 11288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 11305,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13068,
											"end": 13072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3416,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13166,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13150,
											"end": 13161,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 13150,
											"end": 13161,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13150,
											"end": 13166,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13146,
											"end": 13225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 13146,
											"end": 13225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "PUSH",
											"source": 2,
											"value": "2F9686DE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13214,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13146,
											"end": 13225,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 13146,
											"end": 13225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13234,
											"end": 13253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13256,
											"end": 13302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 13269,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 13282,
											"end": 13293,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 13282,
											"end": 13293,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13295,
											"end": 13296,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 13269,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 13269,
											"end": 13297,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13269,
											"end": 13297,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 13269,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13299,
											"end": 13301,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 13256,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 13256,
											"end": 13302,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13256,
											"end": 13302,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 13256,
											"end": 13302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13234,
											"end": 13302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13234,
											"end": 13302,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13341,
											"end": 13352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13327,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13328,
											"end": 13337,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 13328,
											"end": 13337,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13317,
											"end": 13352,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13313,
											"end": 13433,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13313,
											"end": 13433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 13313,
											"end": 13433,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13379,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13368,
											"end": 13379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13368,
											"end": 13379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13368,
											"end": 13379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13368,
											"end": 13379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 13368,
											"end": 13379,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13313,
											"end": 13433,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 13313,
											"end": 13433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13417,
											"end": 13422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13410,
											"end": 13422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13410,
											"end": 13422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13410,
											"end": 13422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4289,
											"end": 4290,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 4289,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13439,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3416,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9986,
											"end": 10001,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 9983,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9971,
											"end": 10001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10001,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9913,
											"end": 10008,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6051,
											"end": 6053,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 6042,
											"end": 6048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6042,
											"end": 6053,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6119,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6038,
											"end": 6119,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "PUSH",
											"source": 2,
											"value": "F1A470D700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6108,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6119,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6038,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6155,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6128,
											"end": 6146,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "PUSH",
											"source": 2,
											"value": "CFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9"
										},
										{
											"begin": 6185,
											"end": 6191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5893,
											"end": 6199,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1559,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1310,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7980,
											"end": 7987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3416,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8151,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8152,
											"end": 8156,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8187,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8188,
											"end": 8192,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8233,
											"end": 8248,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8208,
											"end": 8230,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8208,
											"end": 8230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8208,
											"end": 8230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8208,
											"end": 8248,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8204,
											"end": 8518,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8204,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 8204,
											"end": 8518,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8279,
											"end": 8280,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8264,
											"end": 8275,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8264,
											"end": 8275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8307,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8308,
											"end": 8312,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8301,
											"end": 8313,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8301,
											"end": 8330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8330,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8367,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8417,
											"end": 8427,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8417,
											"end": 8434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8417,
											"end": 8434,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8456,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8478,
											"end": 8488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8456,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 8456,
											"end": 8489,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8456,
											"end": 8489,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8456,
											"end": 8489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8367,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8367,
											"end": 8507,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8367,
											"end": 8507,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8367,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8344,
											"end": 8507,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8344,
											"end": 8507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8344,
											"end": 8507,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8344,
											"end": 8507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8344,
											"end": 8507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8344,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 8344,
											"end": 8507,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8204,
											"end": 8518,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 8204,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8543,
											"end": 8544,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8528,
											"end": 8539,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8528,
											"end": 8539,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8572,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8580,
											"end": 8589,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8580,
											"end": 8589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8590,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8608,
											"end": 8618,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8608,
											"end": 8625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8608,
											"end": 8625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8608,
											"end": 8625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8627,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8649,
											"end": 8659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8627,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 8627,
											"end": 8660,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8627,
											"end": 8660,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8627,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8600,
											"end": 8661,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8600,
											"end": 8661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8600,
											"end": 8661,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8600,
											"end": 8661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8600,
											"end": 8661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 8668,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1245,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11394,
											"end": 11395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11378,
											"end": 11390,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11378,
											"end": 11390,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11378,
											"end": 11395,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11374,
											"end": 11509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 11374,
											"end": 11509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11453,
											"end": 11459,
											"name": "PUSH",
											"source": 2,
											"value": "93A80"
										},
										{
											"begin": 11437,
											"end": 11449,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11437,
											"end": 11449,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11419,
											"end": 11434,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 11419,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 11419,
											"end": 11449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11419,
											"end": 11449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11419,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 11419,
											"end": 11449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11419,
											"end": 11449,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 11419,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11418,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 11418,
											"end": 11459,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11418,
											"end": 11459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11418,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 11418,
											"end": 11459,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11418,
											"end": 11459,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 11418,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11411,
											"end": 11459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11411,
											"end": 11459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11411,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 11411,
											"end": 11459,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11374,
											"end": 11509,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 11374,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11497,
											"end": 11498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11490,
											"end": 11498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11490,
											"end": 11498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11515,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10108,
											"name": "PUSH",
											"source": 2,
											"value": "C8"
										},
										{
											"begin": 10096,
											"end": 10102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10096,
											"end": 10108,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10092,
											"end": 10175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10092,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 10092,
											"end": 10175,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "PUSH",
											"source": 2,
											"value": "A552CF1000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10164,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10092,
											"end": 10175,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 10092,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10195,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10184,
											"end": 10204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10204,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "PUSH",
											"source": 2,
											"value": "CC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E"
										},
										{
											"begin": 10234,
											"end": 10240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10248,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 3416,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 4999,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4993,
											"end": 5004,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 4989,
											"end": 5067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "PUSH",
											"source": 2,
											"value": "88B440D600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5067,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 4989,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5169,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5182,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 5148,
											"end": 5239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4462D2700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5239,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 5148,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5249,
											"end": 5260,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5249,
											"end": 5260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5306,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5275,
											"end": 5281,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5286,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5439,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5628,
											"end": 5637,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5651,
											"end": 5661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5687,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5676,
											"end": 5699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5676,
											"end": 5699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5676,
											"end": 5699,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5676,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5714,
											"end": 5715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5744,
											"end": 5745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5585,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5829,
											"end": 5833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "PUSH",
											"source": 2,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 5852,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5878,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5855,
											"end": 5866,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5855,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5855,
											"end": 5878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5855,
											"end": 5878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5855,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5855,
											"end": 5878,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5855,
											"end": 5878,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5855,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5880,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 5887,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 3416,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13529,
											"end": 13534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13513,
											"end": 13526,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13513,
											"end": 13526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13445,
											"end": 13541,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4011,
											"end": 4215,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4011,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4132,
											"end": 4145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4127,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 4127,
											"end": 4209,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "PUSH",
											"source": 2,
											"value": "A1D1891400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4127,
											"end": 4209,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 4127,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4011,
											"end": 4215,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3711,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3711,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3848,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3838,
											"end": 3936,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3838,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3838,
											"end": 3936,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "PUSH",
											"source": 2,
											"value": "1E567DD400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3925,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3838,
											"end": 3936,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3838,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3942,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6560,
											"end": 6997,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6560,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6663,
											"end": 6670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6690,
											"end": 6700,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6690,
											"end": 6707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6690,
											"end": 6707,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6690,
											"end": 6707,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6690,
											"end": 6712,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6686,
											"end": 6747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6686,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6686,
											"end": 6747,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6728,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6728,
											"end": 6736,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6686,
											"end": 6747,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6686,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6986,
											"end": 6990,
											"name": "PUSH",
											"source": 2,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 6939,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6965,
											"end": 6975,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 6981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 6981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6939,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6939,
											"end": 6982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6939,
											"end": 6982,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6939,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6874,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6864,
											"end": 6920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6864,
											"end": 6920,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6864,
											"end": 6920,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6864,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6863,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6863,
											"end": 6990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6863,
											"end": 6990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6863,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 6863,
											"end": 6990,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6863,
											"end": 6990,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6863,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6997,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6560,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10254,
											"end": 10386,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 10254,
											"end": 10386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10316,
											"end": 10323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10342,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10372,
											"end": 10378,
											"name": "PUSH",
											"source": 2,
											"value": "93A80"
										},
										{
											"begin": 10361,
											"end": 10366,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10343,
											"end": 10358,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 10343,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10343,
											"end": 10366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10343,
											"end": 10366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10343,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10343,
											"end": 10366,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10343,
											"end": 10366,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10343,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 10342,
											"end": 10371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10379,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10342,
											"end": 10379,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10379,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10342,
											"end": 10379,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10342,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10335,
											"end": 10379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10335,
											"end": 10379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10386,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10386,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10392,
											"end": 10571,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 10392,
											"end": 10571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10487,
											"end": 10494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10564,
											"name": "PUSH",
											"source": 2,
											"value": "1DFE200"
										},
										{
											"begin": 10548,
											"end": 10552,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 10533,
											"end": 10544,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10533,
											"end": 10544,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10519,
											"end": 10530,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10519,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10519,
											"end": 10544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10519,
											"end": 10544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10519,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10519,
											"end": 10544,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10519,
											"end": 10544,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10519,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10518,
											"end": 10552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10518,
											"end": 10552,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10518,
											"end": 10552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10518,
											"end": 10552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10518,
											"end": 10552,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10518,
											"end": 10552,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10518,
											"end": 10552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10517,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10517,
											"end": 10564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10517,
											"end": 10564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10517,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10517,
											"end": 10564,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10517,
											"end": 10564,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10517,
											"end": 10564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10510,
											"end": 10564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10510,
											"end": 10564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10392,
											"end": 10571,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10392,
											"end": 10571,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10392,
											"end": 10571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10392,
											"end": 10571,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3449,
											"end": 3641,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3449,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3556,
											"end": 3566,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "PUSH",
											"source": 2,
											"value": "2B4CF15200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3624,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3641,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3187,
											"end": 3379,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3187,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3304,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3290,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 3290,
											"end": 3373,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "PUSH",
											"source": 2,
											"value": "2B4CF15200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3362,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3290,
											"end": 3373,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 3290,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3379,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7003,
											"end": 7524,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7003,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7120,
											"end": 7127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7129,
											"end": 7136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7162,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7167,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7207,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7152,
											"end": 7207,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7194,
											"end": 7195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7183,
											"end": 7196,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7207,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7152,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7237,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7267,
											"end": 7273,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7291,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7304,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7317,
											"end": 7323,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7325,
											"end": 7343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7325,
											"end": 7343,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7304,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7304,
											"end": 7344,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7304,
											"end": 7344,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7304,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7350,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 7291,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7291,
											"end": 7351,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7291,
											"end": 7351,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7291,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7237,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7237,
											"end": 7365,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7237,
											"end": 7365,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7237,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 7409,
											"end": 7415,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7433,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7446,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7459,
											"end": 7465,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7446,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7446,
											"end": 7486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7446,
											"end": 7486,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7446,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 7433,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7433,
											"end": 7493,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7433,
											"end": 7493,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7433,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7379,
											"end": 7507,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7379,
											"end": 7507,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 7379,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7524,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7003,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6205,
											"end": 6554,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6205,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6302,
											"end": 6309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "PUSH",
											"source": 2,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6427,
											"end": 6442,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 6427,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6427,
											"end": 6450,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6427,
											"end": 6450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6427,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6427,
											"end": 6450,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6427,
											"end": 6450,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6427,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6476,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "1E13380"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "PUSH",
											"source": 2,
											"value": "4572726F722063616E6E6F74206469766964652074696D657374616D70000000"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6396,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6205,
											"end": 6554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6205,
											"end": 6554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6205,
											"end": 6554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6205,
											"end": 6554,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5828,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "122"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "284"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "284"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 198,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 90,
											"end": 198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 167,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 185,
											"end": 190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 167,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 162,
											"end": 165,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 155,
											"end": 192,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 198,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 258,
											"end": 1662,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 258,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 389,
											"end": 393,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 384,
											"end": 387,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 380,
											"end": 394,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 478,
											"end": 482,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 476,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 467,
											"end": 483,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 461,
											"end": 484,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 554,
											"end": 558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 552,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 545,
											"end": 559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 531,
											"end": 543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 497,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 497,
											"end": 560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 404,
											"end": 570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 657,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 646,
											"end": 651,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 642,
											"end": 658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 636,
											"end": 659,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 672,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 729,
											"end": 733,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 724,
											"end": 727,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 720,
											"end": 734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 672,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 672,
											"end": 735,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 672,
											"end": 735,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 672,
											"end": 735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 580,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 832,
											"end": 836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 821,
											"end": 837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 815,
											"end": 838,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 851,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 908,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 906,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 899,
											"end": 913,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 885,
											"end": 897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 851,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 851,
											"end": 914,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 851,
											"end": 914,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 851,
											"end": 914,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 755,
											"end": 924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1006,
											"end": 1011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1019,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1084,
											"end": 1087,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 1032,
											"end": 1095,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1032,
											"end": 1095,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 1032,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 934,
											"end": 1105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1196,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1197,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 1268,
											"end": 1272,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 1211,
											"end": 1274,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1211,
											"end": 1274,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 1211,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1115,
											"end": 1284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1371,
											"end": 1376,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1384,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 1454,
											"end": 1458,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1449,
											"end": 1452,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1459,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 1397,
											"end": 1460,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1397,
											"end": 1460,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 1397,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1294,
											"end": 1470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1567,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1556,
											"end": 1561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1552,
											"end": 1568,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1569,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 1639,
											"end": 1643,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1634,
											"end": 1637,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1644,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 1582,
											"end": 1645,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1582,
											"end": 1645,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 1582,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 1662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 258,
											"end": 1662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 258,
											"end": 1662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 258,
											"end": 1662,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1740,
											"end": 2491,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1740,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "PUSH",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1890,
											"end": 1906,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 1994,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1979,
											"end": 2002,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2070,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2063,
											"end": 2077,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 2015,
											"end": 2078,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2078,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 2015,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 2088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2177,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2171,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2179,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 2249,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2244,
											"end": 2247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2254,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 2192,
											"end": 2255,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2255,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 2192,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2354,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 2468,
											"end": 2472,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2466,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 2367,
											"end": 2474,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2474,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 2367,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1740,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1740,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1740,
											"end": 2491,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2497,
											"end": 2844,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2497,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2693,
											"name": "PUSH",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2675,
											"end": 2694,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 2694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 2694,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2704,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2832,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2819,
											"end": 2836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2816,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2704,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 2704,
											"end": 2837,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2704,
											"end": 2837,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 2704,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2844,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2844,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2931,
											"end": 3048,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 2931,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3042,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3303,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 3177,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3296,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3243,
											"end": 3297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3232,
											"end": 3297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3232,
											"end": 3297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3303,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3309,
											"end": 3405,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 3309,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3346,
											"end": 3353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 3393,
											"end": 3398,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3375,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 3375,
											"end": 3399,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3375,
											"end": 3399,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 3375,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3405,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3405,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3411,
											"end": 3533,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 3411,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 3502,
											"end": 3507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 3484,
											"end": 3508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3484,
											"end": 3508,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 3484,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3509,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 3464,
											"end": 3527,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3513,
											"end": 3525,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3527,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 3464,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3533,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3539,
											"end": 3678,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 3539,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3585,
											"end": 3590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3630,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 3639,
											"end": 3672,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3639,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 3639,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3539,
											"end": 3678,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3539,
											"end": 3678,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3539,
											"end": 3678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3539,
											"end": 3678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3539,
											"end": 3678,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3684,
											"end": 4013,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3684,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3743,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 3778,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3763,
											"end": 3795,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3879,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 3760,
											"end": 3879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3798,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3879,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 3760,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 3988,
											"end": 3995,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3968,
											"end": 3977,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3943,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 3943,
											"end": 3996,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 3996,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 3943,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 4006,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 4013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 4013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 4013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 4013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 4013,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4019,
											"end": 4109,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 4019,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4102,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4103,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4109,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4115,
											"end": 4224,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 4115,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4115,
											"end": 4224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4115,
											"end": 4224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4115,
											"end": 4224,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4230,
											"end": 4538,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4230,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4390,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 4452,
											"end": 4453,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4437,
											"end": 4454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4390,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 4390,
											"end": 4455,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4390,
											"end": 4455,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 4390,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 4527,
											"end": 4529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4516,
											"end": 4525,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4530,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 4465,
											"end": 4531,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4465,
											"end": 4531,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 4465,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4538,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4538,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4538,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4544,
											"end": 4662,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 4544,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 4649,
											"end": 4654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 4631,
											"end": 4655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4631,
											"end": 4655,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 4631,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4619,
											"end": 4656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4544,
											"end": 4662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4544,
											"end": 4662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4544,
											"end": 4662,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4668,
											"end": 4890,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4668,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4799,
											"end": 4801,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4788,
											"end": 4797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4784,
											"end": 4802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4812,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 4880,
											"end": 4881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4869,
											"end": 4878,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4812,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 4812,
											"end": 4883,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4812,
											"end": 4883,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 4812,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4668,
											"end": 4890,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4668,
											"end": 4890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4668,
											"end": 4890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4668,
											"end": 4890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4668,
											"end": 4890,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4896,
											"end": 5014,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 4896,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 5001,
											"end": 5006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4983,
											"end": 5007,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4983,
											"end": 5007,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 4983,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4971,
											"end": 5008,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 5014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 5014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 5014,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5020,
											"end": 5242,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5020,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5149,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5136,
											"end": 5154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5128,
											"end": 5154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5128,
											"end": 5154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5164,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 5232,
											"end": 5233,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5230,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5217,
											"end": 5234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5208,
											"end": 5214,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5164,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 5164,
											"end": 5235,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5164,
											"end": 5235,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 5164,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5242,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5242,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5248,
											"end": 5458,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5248,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5335,
											"end": 5339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5373,
											"end": 5375,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5362,
											"end": 5371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5376,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5376,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5446,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5450,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 5386,
											"end": 5451,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5386,
											"end": 5451,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 5386,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5248,
											"end": 5458,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5248,
											"end": 5458,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5248,
											"end": 5458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5248,
											"end": 5458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5248,
											"end": 5458,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5464,
											"end": 5586,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 5464,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5555,
											"end": 5560,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 5537,
											"end": 5561,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5537,
											"end": 5561,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5537,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5535,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5562,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5517,
											"end": 5580,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5576,
											"end": 5577,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5578,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5580,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5517,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5464,
											"end": 5586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5464,
											"end": 5586,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5592,
											"end": 5731,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5592,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5638,
											"end": 5643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5663,
											"end": 5683,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5654,
											"end": 5683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5654,
											"end": 5683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5692,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5719,
											"end": 5724,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5692,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 5692,
											"end": 5725,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5692,
											"end": 5725,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5692,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5731,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5731,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5731,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5737,
											"end": 6066,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 5737,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5847,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5833,
											"end": 5842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5831,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5820,
											"end": 5843,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5816,
											"end": 5848,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 5932,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5813,
											"end": 5932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5851,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 5851,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 5851,
											"end": 5930,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5851,
											"end": 5930,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 5851,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 5932,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5813,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5971,
											"end": 5972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 6041,
											"end": 6048,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6032,
											"end": 6038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5996,
											"end": 6049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5996,
											"end": 6049,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 5996,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5986,
											"end": 6049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5986,
											"end": 6049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5942,
											"end": 6059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 6066,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 6066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 6066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 6066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 6066,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6072,
											"end": 6404,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6072,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6233,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6220,
											"end": 6229,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6208,
											"end": 6234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6208,
											"end": 6234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6312,
											"end": 6313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6297,
											"end": 6314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 6244,
											"end": 6315,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6244,
											"end": 6315,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6244,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 6393,
											"end": 6395,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6382,
											"end": 6391,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6369,
											"end": 6375,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 6325,
											"end": 6397,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6325,
											"end": 6397,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 6325,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6404,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6404,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6404,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6410,
											"end": 7175,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 6410,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6510,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6520,
											"end": 6526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6569,
											"end": 6572,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6557,
											"end": 6566,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6555,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6544,
											"end": 6567,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6573,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6537,
											"end": 6657,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6537,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 6537,
											"end": 6657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6576,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 6576,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6576,
											"end": 6655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6576,
											"end": 6655,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 6576,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6537,
											"end": 6657,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 6537,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6696,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6757,
											"end": 6763,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6746,
											"end": 6755,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 6764,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 6721,
											"end": 6774,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6774,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6721,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6711,
											"end": 6774,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6711,
											"end": 6774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6823,
											"end": 6825,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6849,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 6894,
											"end": 6901,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6885,
											"end": 6891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 6883,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6870,
											"end": 6892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6849,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 6849,
											"end": 6902,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6849,
											"end": 6902,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 6849,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6839,
											"end": 6902,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6839,
											"end": 6902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6977,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7022,
											"end": 7029,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7013,
											"end": 7019,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6998,
											"end": 7020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6977,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 6977,
											"end": 7030,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6977,
											"end": 7030,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6977,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6967,
											"end": 7030,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6967,
											"end": 7030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 7040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7105,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 7150,
											"end": 7157,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7141,
											"end": 7147,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7130,
											"end": 7139,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 7126,
											"end": 7148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7105,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 7105,
											"end": 7158,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7105,
											"end": 7158,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 7105,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7095,
											"end": 7158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7095,
											"end": 7158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7050,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6410,
											"end": 7175,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6410,
											"end": 7175,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6410,
											"end": 7175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6410,
											"end": 7175,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6410,
											"end": 7175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6410,
											"end": 7175,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6410,
											"end": 7175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6410,
											"end": 7175,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7181,
											"end": 7350,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 7181,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7265,
											"end": 7276,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7287,
											"end": 7306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7334,
											"end": 7337,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7315,
											"end": 7344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7315,
											"end": 7344,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7181,
											"end": 7350,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7181,
											"end": 7350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7181,
											"end": 7350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7181,
											"end": 7350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7181,
											"end": 7350,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7356,
											"end": 7537,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 7356,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7496,
											"end": 7529,
											"name": "PUSH",
											"source": 3,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7492,
											"end": 7493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7484,
											"end": 7490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7480,
											"end": 7494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7473,
											"end": 7530,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7537,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7543,
											"end": 7909,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 7543,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7688,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 7770,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7768,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7706,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 7706,
											"end": 7773,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7706,
											"end": 7773,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 7706,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7782,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 7871,
											"end": 7874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7782,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 7782,
											"end": 7875,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7782,
											"end": 7875,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 7782,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7900,
											"end": 7902,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7895,
											"end": 7898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7891,
											"end": 7903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7884,
											"end": 7903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7884,
											"end": 7903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7543,
											"end": 7909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7543,
											"end": 7909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7543,
											"end": 7909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7543,
											"end": 7909,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7915,
											"end": 8334,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 7915,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8108,
											"end": 8117,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8104,
											"end": 8122,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8096,
											"end": 8122,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8096,
											"end": 8122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8168,
											"end": 8177,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8162,
											"end": 8166,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8178,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8152,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8139,
											"end": 8156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8132,
											"end": 8179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8196,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 8322,
											"end": 8326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8196,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 8196,
											"end": 8327,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8196,
											"end": 8327,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 8196,
											"end": 8327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8188,
											"end": 8327,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8188,
											"end": 8327,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 8334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 8334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 8334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 8334,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8340,
											"end": 8520,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 8340,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8465,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8385,
											"end": 8386,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8378,
											"end": 8466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8489,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8482,
											"end": 8483,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8475,
											"end": 8490,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8513,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8506,
											"end": 8507,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8514,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8526,
											"end": 8717,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 8526,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8566,
											"end": 8570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8586,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 8604,
											"end": 8605,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8586,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 8586,
											"end": 8606,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8586,
											"end": 8606,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 8586,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8581,
											"end": 8606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8581,
											"end": 8606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 8638,
											"end": 8639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8659,
											"end": 8660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8656,
											"end": 8657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8653,
											"end": 8661,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8650,
											"end": 8684,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8650,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 8650,
											"end": 8684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8650,
											"end": 8684,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 8650,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8709,
											"end": 8710,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8706,
											"end": 8707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8711,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8526,
											"end": 8717,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8526,
											"end": 8717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8526,
											"end": 8717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8526,
											"end": 8717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8526,
											"end": 8717,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8723,
											"end": 9028,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 8723,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8763,
											"end": 8766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 8800,
											"end": 8801,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8782,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 8782,
											"end": 8802,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8782,
											"end": 8802,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 8782,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8777,
											"end": 8802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8777,
											"end": 8802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 8834,
											"end": 8835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 8816,
											"end": 8836,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8816,
											"end": 8836,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 8816,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8811,
											"end": 8836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8811,
											"end": 8836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8970,
											"end": 8971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8902,
											"end": 8968,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8898,
											"end": 8972,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8896,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8892,
											"end": 8973,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8889,
											"end": 8996,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8889,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 8889,
											"end": 8996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8889,
											"end": 8996,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 8889,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9020,
											"end": 9021,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9017,
											"end": 9018,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9013,
											"end": 9022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9006,
											"end": 9022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9006,
											"end": 9022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 9028,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 9028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 9028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 9028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 9028,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9034,
											"end": 9214,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 9034,
											"end": 9214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9159,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9079,
											"end": 9080,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9072,
											"end": 9160,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 9176,
											"end": 9177,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9169,
											"end": 9184,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9203,
											"end": 9207,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9200,
											"end": 9201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9193,
											"end": 9208,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9220,
											"end": 9405,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 9220,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9260,
											"end": 9261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9277,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9277,
											"end": 9297,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9277,
											"end": 9297,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 9277,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9272,
											"end": 9297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9272,
											"end": 9297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 9329,
											"end": 9330,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9306,
											"end": 9331,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9306,
											"end": 9331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9350,
											"end": 9351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9340,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 9340,
											"end": 9375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9340,
											"end": 9375,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 9340,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9397,
											"end": 9398,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9390,
											"end": 9399,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9385,
											"end": 9399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9385,
											"end": 9399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9220,
											"end": 9405,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9220,
											"end": 9405,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9220,
											"end": 9405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9220,
											"end": 9405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9220,
											"end": 9405,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9411,
											"end": 9853,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 9411,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9598,
											"end": 9600,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9587,
											"end": 9596,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9583,
											"end": 9601,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9575,
											"end": 9601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9575,
											"end": 9601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9611,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 9679,
											"end": 9680,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9668,
											"end": 9677,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9664,
											"end": 9681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9655,
											"end": 9661,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9611,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9611,
											"end": 9682,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9611,
											"end": 9682,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 9611,
											"end": 9682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9692,
											"end": 9764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 9760,
											"end": 9762,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9749,
											"end": 9758,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9736,
											"end": 9742,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9692,
											"end": 9764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9692,
											"end": 9764,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9692,
											"end": 9764,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 9692,
											"end": 9764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9774,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 9842,
											"end": 9844,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9831,
											"end": 9840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9818,
											"end": 9824,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9774,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9774,
											"end": 9846,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9774,
											"end": 9846,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 9774,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9853,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9853,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9853,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9859,
											"end": 10207,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9859,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9899,
											"end": 9906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 9940,
											"end": 9941,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9922,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9922,
											"end": 9942,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9922,
											"end": 9942,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 9922,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9942,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9956,
											"end": 9976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 9974,
											"end": 9975,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9956,
											"end": 9976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9956,
											"end": 9976,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9956,
											"end": 9976,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 9956,
											"end": 9976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9951,
											"end": 9976,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9951,
											"end": 9976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10144,
											"end": 10145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10076,
											"end": 10142,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10072,
											"end": 10146,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10069,
											"end": 10070,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10147,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10054,
											"end": 10063,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10047,
											"end": 10064,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10043,
											"end": 10148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10040,
											"end": 10171,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10040,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 10040,
											"end": 10171,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10040,
											"end": 10171,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 10040,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10199,
											"end": 10200,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10196,
											"end": 10197,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10192,
											"end": 10201,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10181,
											"end": 10201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10181,
											"end": 10201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 10207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 10207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 10207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 10207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 10207,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10213,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10213,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10265,
											"end": 10271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10299,
											"end": 10304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10293,
											"end": 10305,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10283,
											"end": 10305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10283,
											"end": 10305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10213,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10213,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10213,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10213,
											"end": 10312,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10318,
											"end": 10625,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 10318,
											"end": 10625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10386,
											"end": 10387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10509,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 10396,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10410,
											"end": 10416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10407,
											"end": 10408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10404,
											"end": 10417,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10509,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 10396,
											"end": 10509,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10486,
											"end": 10497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10476,
											"end": 10477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10474,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10467,
											"end": 10478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10460,
											"end": 10499,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10432,
											"end": 10434,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10425,
											"end": 10435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 10396,
											"end": 10509,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10509,
											"name": "tag",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 10396,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10527,
											"end": 10533,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10524,
											"end": 10525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10521,
											"end": 10534,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10518,
											"end": 10619,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10518,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 10518,
											"end": 10619,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10607,
											"end": 10608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10598,
											"end": 10604,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10593,
											"end": 10596,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10589,
											"end": 10605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10582,
											"end": 10609,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10518,
											"end": 10619,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 10518,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10367,
											"end": 10625,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10318,
											"end": 10625,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10318,
											"end": 10625,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10318,
											"end": 10625,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10318,
											"end": 10625,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10631,
											"end": 10733,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 10631,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10672,
											"end": 10678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10723,
											"end": 10725,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10719,
											"end": 10726,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10716,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10707,
											"end": 10712,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10703,
											"end": 10717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10699,
											"end": 10727,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10689,
											"end": 10727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10689,
											"end": 10727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10631,
											"end": 10733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10631,
											"end": 10733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10631,
											"end": 10733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10631,
											"end": 10733,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10739,
											"end": 11103,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 10739,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10827,
											"end": 10830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 10888,
											"end": 10893,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10855,
											"end": 10894,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10855,
											"end": 10894,
											"name": "tag",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 10855,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 10974,
											"end": 10980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10969,
											"end": 10972,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 10910,
											"end": 10981,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10910,
											"end": 10981,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 10910,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10903,
											"end": 10981,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10903,
											"end": 10981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 11035,
											"end": 11041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11030,
											"end": 11033,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11023,
											"end": 11027,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11016,
											"end": 11021,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11012,
											"end": 11028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 10990,
											"end": 11042,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10990,
											"end": 11042,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 10990,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 11089,
											"end": 11095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 11067,
											"end": 11096,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11067,
											"end": 11096,
											"name": "tag",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 11067,
											"end": 11096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11065,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11058,
											"end": 11097,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11051,
											"end": 11097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11051,
											"end": 11097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10831,
											"end": 11103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 11103,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 11103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 11103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 11103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 11103,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11109,
											"end": 11422,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 11109,
											"end": 11422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11260,
											"end": 11262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11249,
											"end": 11258,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11245,
											"end": 11263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11237,
											"end": 11263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11237,
											"end": 11263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11309,
											"end": 11318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11303,
											"end": 11307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11299,
											"end": 11319,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11284,
											"end": 11293,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11280,
											"end": 11297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11273,
											"end": 11320,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11337,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 11410,
											"end": 11414,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11401,
											"end": 11407,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11337,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 11337,
											"end": 11415,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11337,
											"end": 11415,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 11337,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 11422,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 11422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 11422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 11422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 11422,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_owner()": "b2bdfa7b",
							"_talax()": "5f348b4e",
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"airdropWeek()": "cbb3e152",
							"changeAirdropPercentage(uint256)": "d5dbdf1b",
							"changePenaltyFee(uint256)": "8c63f97f",
							"changeTalaxAddress(address)": "1d77b00b",
							"claimAirdrop(address)": "65f8c6c5",
							"getVoters(address)": "2d15cc04",
							"getVotingResult()": "671d2b75",
							"hasStake()": "10486b6a",
							"retractVote()": "070c8b74",
							"stake(address,uint256,uint256,uint256)": "f93d4f8a",
							"stakingPenaltyRate()": "cb79c2e1",
							"startAirdropSince()": "71e3db87",
							"startVoting()": "1ec6b60a",
							"stopVoting()": "fab2f86b",
							"totalVoters()": "5f5300ff",
							"vote()": "632a9a52",
							"votedUsers(uint256)": "a143a5f2",
							"voters(address)": "a3ec138d",
							"withdrawStake(address)": "c23a5cea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Airdrop__claimableOnceAWeek\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Function__notAVoter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Function__notAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Function__votingNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__airdropExceed20Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__cannotStakeNothing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__noStakingFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__penaltyExceed3Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__userIsStaker\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__alreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__notEnoughVoters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__notYetVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__votingIsRunning\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_talax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropWeek\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changePenaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVoters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableAirdrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestClaimDrop\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retractVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdropSince\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"votingRight\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"Airdrop__claimableOnceAWeek()\":[{\"notice\":\"Error handling message for Airdrop functions\"}],\"Function__notAuthorized()\":[{\"notice\":\"Error handling message for Modifier\"}],\"Staking__cannotStakeNothing()\":[{\"notice\":\"Error handling message for Staking functions\"}],\"Voting__votingIsRunning()\":[{\"notice\":\"Error handling message for Voting functions\"}]},\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{\"stake(address,uint256,uint256,uint256)\":{\"notice\":\"_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID\"},\"withdrawStake(address)\":{\"notice\":\"withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the account Will also _calculateStakeReward and reset timer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakable.sol\":\"Stakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Stakable.sol\":{\"keccak256\":\"0x3fdddde019d7fedd85b7ef6edf4538383472fb6bf17b67e0c558eb17513a5bed\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b78779618a09514cfa6f0b7a232f27b95bfc24fad5d6bab19e8f885448c81839\",\"dweb:/ipfs/QmZzuGcZJDWQBz5T2rc2V5ZEXk8qwVm8dbF3DC5pvMEeye\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 399,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakingPenaltyRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 401,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "airdropRate",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 403,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "airdropSince",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 405,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_votingStatus",
								"offset": 0,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 407,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_votingId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 409,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "totalVoters",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 414,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "voters",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(Voter)397_storage)"
							},
							{
								"astId": 418,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "votedUsers",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 420,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_talax",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 422,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_owner",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 473,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakeholders",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_struct(Stake)459_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Stake)459_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)459_storage"
							},
							"t_mapping(t_address,t_struct(Voter)397_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)397_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)459_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stake",
								"members": [
									{
										"astId": 446,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 448,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "since",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 450,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "rewardAPY",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 452,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "releaseTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 454,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 456,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimableAirdrop",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 458,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "latestClaimDrop",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(Voter)397_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Voter",
								"members": [
									{
										"astId": 392,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "votingRight",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 396,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_bool)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"Airdrop__claimableOnceAWeek()": [
								{
									"notice": "Error handling message for Airdrop functions"
								}
							],
							"Function__notAuthorized()": [
								{
									"notice": "Error handling message for Modifier"
								}
							],
							"Staking__cannotStakeNothing()": [
								{
									"notice": "Error handling message for Staking functions"
								}
							],
							"Voting__votingIsRunning()": [
								{
									"notice": "Error handling message for Voting functions"
								}
							]
						},
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {
							"stake(address,uint256,uint256,uint256)": {
								"notice": "_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID"
							},
							"withdrawStake(address)": {
								"notice": "withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the account Will also _calculateStakeReward and reset timer"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							351
						]
					},
					"id": 352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 351,
							"linearizedBaseContracts": [
								351
							],
							"name": "SafeMath",
							"nameLocation": "475:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "702:140:1",
										"statements": [
											{
												"id": 72,
												"nodeType": "UncheckedBlock",
												"src": "712:124:1",
												"statements": [
													{
														"assignments": [
															55
														],
														"declarations": [
															{
																"constant": false,
																"id": 55,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 72,
																"src": "736:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 54,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 59,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 56,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "748:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 57,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "752:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 60,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "771:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 61,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "775:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 67,
														"nodeType": "IfStatement",
														"src": "767:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 65,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 53,
															"id": 66,
															"nodeType": "Return",
															"src": "778:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 69,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "823:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 70,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 53,
														"id": 71,
														"nodeType": "Return",
														"src": "809:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "642:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "653:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:1"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "687:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 49,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:1"
									},
									"scope": 351,
									"src": "626:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1064:113:1",
										"statements": [
											{
												"id": 100,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 86,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1102:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 87,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1106:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 93,
														"nodeType": "IfStatement",
														"src": "1098:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 91,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 85,
															"id": 92,
															"nodeType": "Return",
															"src": "1109:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 95,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "1154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 96,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 79,
																		"src": "1158:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 98,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 85,
														"id": 99,
														"nodeType": "Return",
														"src": "1140:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:1",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1004:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1015:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1049:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1055:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:1"
									},
									"scope": 351,
									"src": "988:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "1401:417:1",
										"statements": [
											{
												"id": 142,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 114,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1669:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 121,
														"nodeType": "IfStatement",
														"src": "1665:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 119,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 113,
															"id": 120,
															"nodeType": "Return",
															"src": "1677:16:1"
														}
													},
													{
														"assignments": [
															123
														],
														"declarations": [
															{
																"constant": false,
																"id": 123,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 142,
																"src": "1707:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 122,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 127,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1719:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 125,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "1723:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 128,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1742:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 129,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "1746:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "1751:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 137,
														"nodeType": "IfStatement",
														"src": "1738:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 113,
															"id": 136,
															"nodeType": "Return",
															"src": "1754:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 139,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1799:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 140,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 113,
														"id": 141,
														"nodeType": "Return",
														"src": "1785:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1341:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1352:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1386:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1392:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:1"
									},
									"scope": 351,
									"src": "1325:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2043:114:1",
										"statements": [
											{
												"id": 170,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 156,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "2081:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 163,
														"nodeType": "IfStatement",
														"src": "2077:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 161,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 155,
															"id": 162,
															"nodeType": "Return",
															"src": "2089:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 165,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "2134:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 166,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "2138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 168,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 155,
														"id": 169,
														"nodeType": "Return",
														"src": "2120:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1983:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1994:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2028:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2034:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 351,
									"src": "1967:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2392:114:1",
										"statements": [
											{
												"id": 198,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 184,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "2430:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 191,
														"nodeType": "IfStatement",
														"src": "2426:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 189,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 183,
															"id": 190,
															"nodeType": "Return",
															"src": "2438:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 193,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 175,
																		"src": "2483:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 194,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 177,
																		"src": "2487:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 196,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 183,
														"id": 197,
														"nodeType": "Return",
														"src": "2469:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2332:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2343:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2377:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2383:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:1"
									},
									"scope": 351,
									"src": "2316:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2808:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 210,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2825:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 211,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2829:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 209,
												"id": 213,
												"nodeType": "Return",
												"src": "2818:12:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2754:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2765:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:1"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2799:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:1"
									},
									"scope": 351,
									"src": "2741:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "3175:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 225,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "3192:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 226,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "3196:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 228,
												"nodeType": "Return",
												"src": "3185:12:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3121:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3132:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3166:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:1"
									},
									"scope": 351,
									"src": "3108:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "3518:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 240,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "3535:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 241,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "3539:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 243,
												"nodeType": "Return",
												"src": "3528:12:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "3464:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "3475:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "3509:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:1"
									},
									"scope": 351,
									"src": "3451:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "3903:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3920:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 256,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "3924:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 254,
												"id": 258,
												"nodeType": "Return",
												"src": "3913:12:1"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3849:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3860:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:1"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3894:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:1"
									},
									"scope": 351,
									"src": "3836:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "4452:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "4469:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "4473:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 269,
												"id": 273,
												"nodeType": "Return",
												"src": "4462:12:1"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "4398:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "4409:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "4443:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:1"
									},
									"scope": 351,
									"src": "4385:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "5070:106:1",
										"statements": [
											{
												"id": 298,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 288,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "5112:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 289,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "5117:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 291,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "5120:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 287,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 293,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "5154:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 295,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "5158:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 286,
														"id": 297,
														"nodeType": "Return",
														"src": "5147:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4967:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4986:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5005:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5061:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:1"
									},
									"scope": 351,
									"src": "4945:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "5785:105:1",
										"statements": [
											{
												"id": 323,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 313,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "5827:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 316,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "5834:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 312,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 318,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "5868:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 320,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "5872:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 311,
														"id": 322,
														"nodeType": "Return",
														"src": "5861:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "5682:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "5701:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "5720:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 306,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "5776:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:1"
									},
									"scope": 351,
									"src": "5660:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "6661:105:1",
										"statements": [
											{
												"id": 348,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 338,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "6703:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 341,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "6710:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 337,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 343,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 344,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "6744:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 345,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "6748:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 336,
														"id": 347,
														"nodeType": "Return",
														"src": "6737:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "6558:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "6577:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "6596:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "6652:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:1"
									},
									"scope": 351,
									"src": "6536:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 352,
							"src": "467:6301:1",
							"usedErrors": []
						}
					],
					"src": "92:6677:1"
				},
				"id": 1
			},
			"contracts/Stakable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakable.sol",
					"exportedSymbols": {
						"Airdrop__claimableOnceAWeek": [
							376
						],
						"Function__notAVoter": [
							360
						],
						"Function__notAuthorized": [
							358
						],
						"Function__votingNotAvailable": [
							362
						],
						"ReentrancyGuard": [
							39
						],
						"SafeMath": [
							351
						],
						"Stakable": [
							1311
						],
						"Staking__airdropExceed20Percent": [
							371
						],
						"Staking__cannotStakeNothing": [
							365
						],
						"Staking__noStakingFound": [
							373
						],
						"Staking__penaltyExceed3Percent": [
							369
						],
						"Staking__userIsStaker": [
							367
						],
						"Voting__alreadyVoted": [
							381
						],
						"Voting__notEnoughVoters": [
							385
						],
						"Voting__notYetVoted": [
							383
						],
						"Voting__votingIsRunning": [
							379
						]
					},
					"id": 1312,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 353,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1312,
							"sourceUnit": 352,
							"src": "64:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1312,
							"sourceUnit": 40,
							"src": "122:62:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 356,
								"nodeType": "StructuredDocumentation",
								"src": "186:54:2",
								"text": " @notice Error handling message for Modifier"
							},
							"id": 358,
							"name": "Function__notAuthorized",
							"nameLocation": "247:23:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 357,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "270:2:2"
							},
							"src": "241:32:2"
						},
						{
							"id": 360,
							"name": "Function__notAVoter",
							"nameLocation": "280:19:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 359,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "299:2:2"
							},
							"src": "274:28:2"
						},
						{
							"id": 362,
							"name": "Function__votingNotAvailable",
							"nameLocation": "309:28:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 361,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "337:2:2"
							},
							"src": "303:37:2"
						},
						{
							"documentation": {
								"id": 363,
								"nodeType": "StructuredDocumentation",
								"src": "342:63:2",
								"text": " @notice Error handling message for Staking functions"
							},
							"id": 365,
							"name": "Staking__cannotStakeNothing",
							"nameLocation": "412:27:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 364,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "439:2:2"
							},
							"src": "406:36:2"
						},
						{
							"id": 367,
							"name": "Staking__userIsStaker",
							"nameLocation": "449:21:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 366,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "470:2:2"
							},
							"src": "443:30:2"
						},
						{
							"id": 369,
							"name": "Staking__penaltyExceed3Percent",
							"nameLocation": "480:30:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 368,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "510:2:2"
							},
							"src": "474:39:2"
						},
						{
							"id": 371,
							"name": "Staking__airdropExceed20Percent",
							"nameLocation": "520:31:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 370,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "551:2:2"
							},
							"src": "514:40:2"
						},
						{
							"id": 373,
							"name": "Staking__noStakingFound",
							"nameLocation": "561:23:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 372,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "584:2:2"
							},
							"src": "555:32:2"
						},
						{
							"documentation": {
								"id": 374,
								"nodeType": "StructuredDocumentation",
								"src": "589:63:2",
								"text": " @notice Error handling message for Airdrop functions"
							},
							"id": 376,
							"name": "Airdrop__claimableOnceAWeek",
							"nameLocation": "659:27:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 375,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "686:2:2"
							},
							"src": "653:36:2"
						},
						{
							"documentation": {
								"id": 377,
								"nodeType": "StructuredDocumentation",
								"src": "691:62:2",
								"text": " @notice Error handling message for Voting functions"
							},
							"id": 379,
							"name": "Voting__votingIsRunning",
							"nameLocation": "760:23:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 378,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "783:2:2"
							},
							"src": "754:32:2"
						},
						{
							"id": 381,
							"name": "Voting__alreadyVoted",
							"nameLocation": "793:20:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 380,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "813:2:2"
							},
							"src": "787:29:2"
						},
						{
							"id": 383,
							"name": "Voting__notYetVoted",
							"nameLocation": "823:19:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 382,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "842:2:2"
							},
							"src": "817:28:2"
						},
						{
							"id": 385,
							"name": "Voting__notEnoughVoters",
							"nameLocation": "852:23:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 384,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "875:2:2"
							},
							"src": "846:32:2"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "901:15:2"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "901:15:2"
								}
							],
							"canonicalName": "Stakable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1311,
							"linearizedBaseContracts": [
								1311,
								39
							],
							"name": "Stakable",
							"nameLocation": "889:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 390,
									"libraryName": {
										"id": 388,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 351,
										"src": "929:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "923:27:2",
									"typeName": {
										"id": 389,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "942:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Stakable.Voter",
									"id": 397,
									"members": [
										{
											"constant": false,
											"id": 392,
											"mutability": "mutable",
											"name": "votingRight",
											"nameLocation": "1148:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 397,
											"src": "1143:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 391,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1143:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 396,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "1194:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 397,
											"src": "1169:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 395,
												"keyType": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1169:24:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueType": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1188:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "1127:5:2",
									"nodeType": "StructDefinition",
									"scope": 1311,
									"src": "1120:86:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb79c2e1",
									"id": 399,
									"mutability": "mutable",
									"name": "stakingPenaltyRate",
									"nameLocation": "1227:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "1212:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 398,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1212:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8891cf0d",
									"id": 401,
									"mutability": "mutable",
									"name": "airdropRate",
									"nameLocation": "1266:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "1251:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 400,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1251:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b87da76d",
									"id": 403,
									"mutability": "mutable",
									"name": "airdropSince",
									"nameLocation": "1298:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "1283:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1283:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "_votingStatus",
									"nameLocation": "1331:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "1317:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 404,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1317:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 407,
									"mutability": "mutable",
									"name": "_votingId",
									"nameLocation": "1367:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "1350:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 406,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1350:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5f5300ff",
									"id": 409,
									"mutability": "mutable",
									"name": "totalVoters",
									"nameLocation": "1397:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "1382:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1382:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 414,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "1447:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "1414:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
										"typeString": "mapping(address => struct Stakable.Voter)"
									},
									"typeName": {
										"id": 413,
										"keyType": {
											"id": 410,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1422:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1414:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
											"typeString": "mapping(address => struct Stakable.Voter)"
										},
										"valueType": {
											"id": 412,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 411,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 397,
												"src": "1433:5:2"
											},
											"referencedDeclaration": 397,
											"src": "1433:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$397_storage_ptr",
												"typeString": "struct Stakable.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a143a5f2",
									"id": 418,
									"mutability": "mutable",
									"name": "votedUsers",
									"nameLocation": "1494:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "1459:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 417,
										"keyType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 416,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f348b4e",
									"id": 420,
									"mutability": "mutable",
									"name": "_talax",
									"nameLocation": "1526:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "1511:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 419,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1511:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b2bdfa7b",
									"id": 422,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1553:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "1538:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 421,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1538:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1580:186:2",
										"statements": [
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 425,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1652:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1673:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1652:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "1652:23:2"
											},
											{
												"expression": {
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "1685:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3830",
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1699:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"src": "1685:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "1685:16:2"
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 433,
														"name": "_talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "1711:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 434,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1720:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1720:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1711:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "1711:19:2"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 438,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "1740:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 439,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1749:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1749:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1740:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "1740:19:2"
											}
										]
									},
									"id": 444,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1577:2:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1580:0:2"
									},
									"scope": 1311,
									"src": "1566:200:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stake",
									"id": 459,
									"members": [
										{
											"constant": false,
											"id": 446,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2030:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "2022:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 445,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2022:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 448,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "2054:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "2046:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 447,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2046:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 450,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "2077:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "2069:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 449,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2069:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 452,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "2104:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "2096:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 451,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2096:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 454,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "2232:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "2224:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 453,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2224:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 456,
											"mutability": "mutable",
											"name": "claimableAirdrop",
											"nameLocation": "2259:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "2251:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 455,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2251:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 458,
											"mutability": "mutable",
											"name": "latestClaimDrop",
											"nameLocation": "2293:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "2285:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 457,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2285:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "2006:5:2",
									"nodeType": "StructDefinition",
									"scope": 1311,
									"src": "1999:316:2",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.StakingSummary",
									"id": 467,
									"members": [
										{
											"constant": false,
											"id": 461,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "2492:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 467,
											"src": "2484:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 460,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2484:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 463,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "2522:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 467,
											"src": "2514:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 462,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2514:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 466,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "2545:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 467,
											"src": "2539:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$459_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 465,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 464,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 459,
													"src": "2539:5:2"
												},
												"referencedDeclaration": 459,
												"src": "2539:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$459_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "2459:14:2",
									"nodeType": "StructDefinition",
									"scope": 1311,
									"src": "2452:105:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2563:111:2",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 473,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "2714:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "2679:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$459_storage_$",
										"typeString": "mapping(address => struct Stakable.Stake)"
									},
									"typeName": {
										"id": 472,
										"keyType": {
											"id": 469,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2687:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2679:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$459_storage_$",
											"typeString": "mapping(address => struct Stakable.Stake)"
										},
										"valueType": {
											"id": 471,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 470,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 459,
												"src": "2698:5:2"
											},
											"referencedDeclaration": 459,
											"src": "2698:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$459_storage_ptr",
												"typeString": "struct Stakable.Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "2733:124:2",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 484,
									"name": "Staked",
									"nameLocation": "2868:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2900:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "2884:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2922:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "2914:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2914:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2946:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "2938:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2973:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "2965:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2874:116:2"
									},
									"src": "2862:129:2"
								},
								{
									"anonymous": false,
									"id": 488,
									"name": "PenaltyChanged",
									"nameLocation": "3003:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3026:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "3018:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3017:16:2"
									},
									"src": "2997:37:2"
								},
								{
									"anonymous": false,
									"id": 492,
									"name": "AirdropChanged",
									"nameLocation": "3045:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3068:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3060:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3059:16:2"
									},
									"src": "3039:37:2"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3220:159:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 495,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3294:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3294:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 497,
														"name": "_talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "3308:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3294:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "3290:83:2",
												"trueBody": {
													"id": 502,
													"nodeType": "Block",
													"src": "3316:57:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 499,
																	"name": "Function__notAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "3337:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3337:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 501,
															"nodeType": "RevertStatement",
															"src": "3330:32:2"
														}
													]
												}
											}
										]
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTalax",
									"nameLocation": "3196:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3203:2:2"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3220:0:2"
									},
									"scope": 1311,
									"src": "3187:192:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "3406:37:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 507,
														"name": "isTalax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "3416:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:9:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "3416:9:2"
											},
											{
												"id": 510,
												"nodeType": "PlaceholderStatement",
												"src": "3435:1:2"
											}
										]
									},
									"id": 512,
									"name": "onlyTalax",
									"nameLocation": "3394:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3403:2:2"
									},
									"src": "3385:58:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "3482:159:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 515,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3556:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3556:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 517,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "3570:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3556:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 523,
												"nodeType": "IfStatement",
												"src": "3552:83:2",
												"trueBody": {
													"id": 522,
													"nodeType": "Block",
													"src": "3578:57:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 519,
																	"name": "Function__notAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "3599:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3599:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 521,
															"nodeType": "RevertStatement",
															"src": "3592:32:2"
														}
													]
												}
											}
										]
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "3458:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3465:2:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3482:0:2"
									},
									"scope": 1311,
									"src": "3449:192:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3668:37:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 527,
														"name": "isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "3678:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:9:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "3678:9:2"
											},
											{
												"id": 530,
												"nodeType": "PlaceholderStatement",
												"src": "3697:1:2"
											}
										]
									},
									"id": 532,
									"name": "onlyOwner",
									"nameLocation": "3656:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3665:2:2"
									},
									"src": "3647:58:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3745:197:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 535,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "3842:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
																	"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																}
															},
															"id": 538,
															"indexExpression": {
																"expression": {
																	"id": 536,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3849:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3849:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3842:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$397_storage",
																"typeString": "struct Stakable.Voter storage ref"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "3842:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3876:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3842:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "3838:98:2",
												"trueBody": {
													"id": 545,
													"nodeType": "Block",
													"src": "3883:53:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 542,
																	"name": "Function__notAVoter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "3904:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3904:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 544,
															"nodeType": "RevertStatement",
															"src": "3897:28:2"
														}
													]
												}
											}
										]
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isVoter",
									"nameLocation": "3720:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3728:2:2"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3745:0:2"
									},
									"scope": 1311,
									"src": "3711:231:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "3967:38:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 550,
														"name": "_isVoter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "3977:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3977:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "3977:10:2"
											},
											{
												"id": 553,
												"nodeType": "PlaceholderStatement",
												"src": "3997:1:2"
											}
										]
									},
									"id": 555,
									"name": "isVoter",
									"nameLocation": "3957:7:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3964:2:2"
									},
									"src": "3948:57:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "4055:160:2",
										"statements": [
											{
												"condition": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4131:14:2",
													"subExpression": {
														"id": 558,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "4132:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 564,
												"nodeType": "IfStatement",
												"src": "4127:82:2",
												"trueBody": {
													"id": 563,
													"nodeType": "Block",
													"src": "4147:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 560,
																	"name": "Function__votingNotAvailable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "4168:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4168:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 562,
															"nodeType": "RevertStatement",
															"src": "4161:37:2"
														}
													]
												}
											}
										]
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkVotingStatus",
									"nameLocation": "4020:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4038:2:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4055:0:2"
									},
									"scope": 1311,
									"src": "4011:204:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4249:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 568,
														"name": "_checkVotingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "4259:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "4259:20:2"
											},
											{
												"id": 571,
												"nodeType": "PlaceholderStatement",
												"src": "4289:1:2"
											}
										]
									},
									"id": 573,
									"name": "votingStatusTrue",
									"nameLocation": "4230:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4246:2:2"
									},
									"src": "4221:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "4471:31:2",
										"statements": [
											{
												"expression": {
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 580,
														"name": "_talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "4481:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 581,
														"name": "talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4490:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4481:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "4481:14:2"
											}
										]
									},
									"functionSelector": "1d77b00b",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 578,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 577,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 532,
												"src": "4461:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4461:9:2"
										}
									],
									"name": "changeTalaxAddress",
									"nameLocation": "4418:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "4445:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "4437:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4436:15:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4471:0:2"
									},
									"scope": 1311,
									"src": "4409:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "4869:1018:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 601,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4993:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5003:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4993:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 608,
												"nodeType": "IfStatement",
												"src": "4989:78:2",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "5006:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 604,
																	"name": "Staking__cannotStakeNothing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "5027:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5027:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 606,
															"nodeType": "RevertStatement",
															"src": "5020:36:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 609,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "5152:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$459_storage_$",
																	"typeString": "mapping(address => struct Stakable.Stake storage ref)"
																}
															},
															"id": 611,
															"indexExpression": {
																"id": 610,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "5165:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5152:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_storage",
																"typeString": "struct Stakable.Stake storage ref"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 446,
														"src": "5152:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5181:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5152:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 619,
												"nodeType": "IfStatement",
												"src": "5148:91:2",
												"trueBody": {
													"id": 618,
													"nodeType": "Block",
													"src": "5184:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 615,
																	"name": "Staking__userIsStaker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "5205:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5205:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 617,
															"nodeType": "RevertStatement",
															"src": "5198:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 620,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "5249:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5264:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5249:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "5249:16:2"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 624,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "5275:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
																	"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																}
															},
															"id": 626,
															"indexExpression": {
																"id": 625,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "5282:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5275:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$397_storage",
																"typeString": "struct Stakable.Voter storage ref"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "5275:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5302:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5275:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "5275:31:2"
											},
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "5412:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 663,
														"src": "5404:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5404:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"expression": {
														"id": 633,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "5424:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "5424:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5404:35:2"
											},
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 636,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "5568:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$459_storage_$",
																"typeString": "mapping(address => struct Stakable.Stake storage ref)"
															}
														},
														"id": 638,
														"indexExpression": {
															"id": 637,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5581:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5568:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$459_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 640,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "5608:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 641,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "5628:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 642,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "5651:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 643,
																			"name": "stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "5676:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 644,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "5690:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5676:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 646,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5675:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5714:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5729:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5744:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 639,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "5589:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$459_storage_ptr_$",
																"typeString": "type(struct Stakable.Stake storage pointer)"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5589:166:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
															"typeString": "struct Stakable.Stake memory"
														}
													},
													"src": "5568:187:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$459_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "5568:187:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 654,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5829:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 655,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "5835:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 656,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5843:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 657,
																		"name": "stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "5855:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 658,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5869:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5855:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 660,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5854:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 653,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "5822:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5822:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "EmitStatement",
												"src": "5817:63:2"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "4508:200:2",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"functionSelector": "f93d4f8a",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 597,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 596,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4846:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4846:12:2"
										},
										{
											"id": 599,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 598,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "4859:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4859:9:2"
										}
									],
									"name": "stake",
									"nameLocation": "4722:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4745:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4737:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4767:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4759:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "stakePeriod",
												"nameLocation": "4791:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4783:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4783:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "4820:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4812:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4727:109:2"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4869:0:2"
									},
									"scope": 1311,
									"src": "4713:1174:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "5954:245:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 671,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "6042:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3330",
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6051:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30_by_1",
															"typeString": "int_const 30"
														},
														"value": "30"
													},
													"src": "6042:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 678,
												"nodeType": "IfStatement",
												"src": "6038:81:2",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "6055:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 674,
																	"name": "Staking__penaltyExceed3Percent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "6076:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6076:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "RevertStatement",
															"src": "6069:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 679,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "6128:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 680,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "6149:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6128:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "6128:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 684,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "6185:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 683,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "6170:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6170:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "EmitStatement",
												"src": "6165:27:2"
											}
										]
									},
									"functionSelector": "8c63f97f",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 669,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 668,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 532,
												"src": "5944:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5944:9:2"
										}
									],
									"name": "changePenaltyFee",
									"nameLocation": "5902:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5927:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5919:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5918:16:2"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5954:0:2"
									},
									"scope": 1311,
									"src": "5893:306:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "6315:239:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 697,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "6427:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "6427:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 699,
																			"name": "since",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "6445:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6427:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 701,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6426:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653234",
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6454:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"value": "1e24"
															},
															"src": "6426:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "333635",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6476:8:2",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "4572726f722063616e6e6f74206469766964652074696d657374616d70",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6502:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															},
															"value": "Error cannot divide timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															}
														],
														"expression": {
															"id": 695,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6396:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 325,
														"src": "6396:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6396:151:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 694,
												"id": 707,
												"nodeType": "Return",
												"src": "6377:170:2"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingDuration",
									"nameLocation": "6214:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "since",
												"nameLocation": "6248:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "6240:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6240:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6239:15:2"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "6302:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6301:9:2"
									},
									"scope": 1311,
									"src": "6205:349:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "6676:321:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 717,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "6690:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 446,
														"src": "6690:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6711:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6690:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "6686:61:2",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "6714:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6735:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 716,
															"id": 722,
															"nodeType": "Return",
															"src": "6728:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 725,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "6864:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 726,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 446,
																		"src": "6864:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 727,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "6900:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 728,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 450,
																		"src": "6900:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6864:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 731,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "6965:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 448,
																			"src": "6965:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 730,
																		"name": "_calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 709,
																		"src": "6939:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6939:43:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6864:118:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6863:120:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6986:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "6863:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 716,
												"id": 738,
												"nodeType": "Return",
												"src": "6844:146:2"
											}
										]
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakeReward",
									"nameLocation": "6569:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "6604:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "6591:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
													"typeString": "struct Stakable.Stake"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 459,
														"src": "6591:5:2"
													},
													"referencedDeclaration": 459,
													"src": "6591:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$459_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6590:25:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "6663:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6662:9:2"
									},
									"scope": 1311,
									"src": "6560:437:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "7142:382:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "7156:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7166:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7156:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7152:55:2",
												"trueBody": {
													"id": 758,
													"nodeType": "Block",
													"src": "7169:38:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7191:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7194:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 756,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7190:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 750,
															"id": 757,
															"nodeType": "Return",
															"src": "7183:13:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 762,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7267:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 767,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 742,
																					"src": "7317:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 768,
																					"name": "stakingPenaltyRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 399,
																					"src": "7325:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 765,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 351,
																					"src": "7304:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 245,
																				"src": "7304:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7304:40:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "31303030",
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7346:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"id": 763,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 351,
																			"src": "7291:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 260,
																		"src": "7291:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7291:60:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 760,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "7237:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 230,
																"src": "7237:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7237:128:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 775,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "7409:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 780,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7459:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 781,
																					"name": "stakingPenaltyRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 399,
																					"src": "7467:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 778,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 351,
																					"src": "7446:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 245,
																				"src": "7446:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7446:40:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "31303030",
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7488:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"id": 776,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 351,
																			"src": "7433:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 260,
																		"src": "7433:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7433:60:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 773,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "7379:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 230,
																"src": "7379:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7379:128:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 786,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7223:294:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 750,
												"id": 787,
												"nodeType": "Return",
												"src": "7216:301:2"
											}
										]
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingWithPenalty",
									"nameLocation": "7012:28:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7049:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "7041:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "7065:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "7057:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7057:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7040:32:2"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "7120:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "7129:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7119:18:2"
									},
									"scope": 1311,
									"src": "7003:521:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "8002:666:2",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "8126:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "8113:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 804,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 803,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 459,
																"src": "8113:5:2"
															},
															"referencedDeclaration": 459,
															"src": "8113:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"baseExpression": {
														"id": 806,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "8139:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$459_storage_$",
															"typeString": "mapping(address => struct Stakable.Stake storage ref)"
														}
													},
													"id": 808,
													"indexExpression": {
														"id": 807,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "8152:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8139:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$459_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8113:44:2"
											},
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8168:25:2",
													"subExpression": {
														"baseExpression": {
															"id": 810,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "8175:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$459_storage_$",
																"typeString": "mapping(address => struct Stakable.Stake storage ref)"
															}
														},
														"id": 812,
														"indexExpression": {
															"id": 811,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "8188:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8175:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$459_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "8168:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 815,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "8208:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "8208:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 817,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8233:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8233:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8208:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 841,
												"nodeType": "IfStatement",
												"src": "8204:314:2",
												"trueBody": {
													"id": 840,
													"nodeType": "Block",
													"src": "8250:268:2",
													"statements": [
														{
															"expression": {
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 820,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "8264:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8279:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8264:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 823,
															"nodeType": "ExpressionStatement",
															"src": "8264:16:2"
														},
														{
															"expression": {
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "8294:36:2",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 824,
																				"name": "voters",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 414,
																				"src": "8301:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
																					"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																				}
																			},
																			"id": 826,
																			"indexExpression": {
																				"id": 825,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "8308:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8301:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Voter_$397_storage",
																				"typeString": "struct Stakable.Voter storage ref"
																			}
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 396,
																		"src": "8301:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 829,
																	"indexExpression": {
																		"id": 828,
																		"name": "_votingId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "8320:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8301:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 831,
															"nodeType": "ExpressionStatement",
															"src": "8294:36:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 833,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "8417:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 446,
																		"src": "8417:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 836,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "8478:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			],
																			"id": 835,
																			"name": "_calculateStakeReward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "8456:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$459_memory_ptr_$returns$_t_uint256_$",
																				"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8456:33:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 832,
																	"name": "_calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "8367:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8367:140:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 802,
															"id": 839,
															"nodeType": "Return",
															"src": "8344:163:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 842,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "8528:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8543:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8528:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "8528:16:2"
											},
											{
												"expression": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8554:36:2",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 846,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "8561:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 848,
																"indexExpression": {
																	"id": 847,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "8568:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8561:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$397_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 396,
															"src": "8561:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 851,
														"indexExpression": {
															"id": 850,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "8580:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8561:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "8554:36:2"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 854,
																"name": "user_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "8608:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 446,
															"src": "8608:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 857,
																	"name": "user_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "8649:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																],
																"id": 856,
																"name": "_calculateStakeReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "8627:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$459_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8627:33:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 859,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8607:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 802,
												"id": 860,
												"nodeType": "Return",
												"src": "8600:61:2"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "7530:335:2",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the account\n Will also _calculateStakeReward and reset timer"
									},
									"functionSelector": "c23a5cea",
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 795,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 794,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "7932:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "7932:12:2"
										},
										{
											"id": 797,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 796,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "7953:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "7953:9:2"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "7879:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7901:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7893:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7893:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7892:14:2"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7980:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7989:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7989:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:18:2"
									},
									"scope": 1311,
									"src": "7870:798:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "8740:1061:2",
										"statements": [
											{
												"assignments": [
													870
												],
												"declarations": [
													{
														"constant": false,
														"id": 870,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "8763:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 982,
														"src": "8750:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 869,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 868,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 459,
																"src": "8750:5:2"
															},
															"referencedDeclaration": 459,
															"src": "8750:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 875,
												"initialValue": {
													"baseExpression": {
														"id": 871,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "8776:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$459_storage_$",
															"typeString": "mapping(address => struct Stakable.Stake storage ref)"
														}
													},
													"id": 874,
													"indexExpression": {
														"expression": {
															"id": 872,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8789:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8789:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8776:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$459_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8750:50:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 876,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "8875:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 446,
														"src": "8875:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8896:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8875:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "8871:85:2",
												"trueBody": {
													"id": 883,
													"nodeType": "Block",
													"src": "8899:57:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 880,
																	"name": "Staking__noStakingFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "8920:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8920:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 882,
															"nodeType": "RevertStatement",
															"src": "8913:32:2"
														}
													]
												}
											},
											{
												"assignments": [
													887
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "8987:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 982,
														"src": "8965:29:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$467_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 886,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 885,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 467,
																"src": "8965:14:2"
															},
															"referencedDeclaration": 467,
															"src": "8965:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$467_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9012:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9015:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 891,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "9018:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 888,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "8997:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$467_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8997:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$467_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8965:64:2"
											},
											{
												"assignments": [
													895
												],
												"declarations": [
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "9048:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 982,
														"src": "9040:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 894,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9040:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 899,
												"initialValue": {
													"arguments": [
														{
															"id": 897,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "9079:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 896,
														"name": "_calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "9057:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$459_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9057:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9040:50:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 900,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "9105:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$467_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 466,
															"src": "9105:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "9105:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 903,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9133:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9133:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9105:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 932,
												"nodeType": "IfStatement",
												"src": "9101:316:2",
												"trueBody": {
													"id": 931,
													"nodeType": "Block",
													"src": "9150:267:2",
													"statements": [
														{
															"expression": {
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 906,
																		"name": "summary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "9164:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingSummary_$467_memory_ptr",
																			"typeString": "struct Stakable.StakingSummary memory"
																		}
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "penalty",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 463,
																	"src": "9164:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 913,
																							"name": "user_stake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 870,
																							"src": "9245:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																								"typeString": "struct Stakable.Stake memory"
																							}
																						},
																						"id": 914,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 446,
																						"src": "9245:17:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 915,
																						"name": "stakingPenaltyRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 399,
																						"src": "9264:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 911,
																						"name": "SafeMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 351,
																						"src": "9232:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																							"typeString": "type(library SafeMath)"
																						}
																					},
																					"id": 912,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 245,
																					"src": "9232:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9232:51:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "31303030",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9305:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				}
																			],
																			"expression": {
																				"id": 909,
																				"name": "SafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 351,
																				"src": "9198:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																					"typeString": "type(library SafeMath)"
																				}
																			},
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 260,
																			"src": "9198:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9198:129:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 923,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 895,
																						"src": "9372:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 924,
																						"name": "stakingPenaltyRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 399,
																						"src": "9380:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 921,
																						"name": "SafeMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 351,
																						"src": "9359:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																							"typeString": "type(library SafeMath)"
																						}
																					},
																					"id": 922,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 245,
																					"src": "9359:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9359:40:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "31303030",
																				"id": 926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9401:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				}
																			],
																			"expression": {
																				"id": 919,
																				"name": "SafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 351,
																				"src": "9346:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																					"typeString": "type(library SafeMath)"
																				}
																			},
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 260,
																			"src": "9346:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9346:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9198:208:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9164:242:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 930,
															"nodeType": "ExpressionStatement",
															"src": "9164:242:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 934,
																	"name": "user_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "9446:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "latestClaimDrop",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 458,
																"src": "9446:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 933,
															"name": "_calculateWeek",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "9431:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9431:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9476:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9431:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 963,
													"nodeType": "Block",
													"src": "9618:59:2",
													"statements": [
														{
															"expression": {
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 955,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "9632:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$467_memory_ptr",
																				"typeString": "struct Stakable.StakingSummary memory"
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 466,
																		"src": "9632:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 456,
																	"src": "9632:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9665:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9632:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 962,
															"nodeType": "ExpressionStatement",
															"src": "9632:34:2"
														}
													]
												},
												"id": 964,
												"nodeType": "IfStatement",
												"src": "9427:250:2",
												"trueBody": {
													"id": 954,
													"nodeType": "Block",
													"src": "9479:133:2",
													"statements": [
														{
															"assignments": [
																940
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 940,
																	"mutability": "mutable",
																	"name": "airdrop",
																	"nameLocation": "9501:7:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 954,
																	"src": "9493:15:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 939,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9493:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 945,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 942,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 870,
																			"src": "9529:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 446,
																		"src": "9529:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 941,
																	"name": "_calculateAirdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "9511:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9511:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9493:54:2"
														},
														{
															"expression": {
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 946,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "9561:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$467_memory_ptr",
																				"typeString": "struct Stakable.StakingSummary memory"
																			}
																		},
																		"id": 949,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 466,
																		"src": "9561:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 456,
																	"src": "9561:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 951,
																	"name": "airdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "9594:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9561:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 953,
															"nodeType": "ExpressionStatement",
															"src": "9561:40:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 965,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "9687:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$467_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 466,
															"src": "9687:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 454,
														"src": "9687:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 970,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "9713:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9687:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "9687:32:2"
											},
											{
												"expression": {
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 973,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "9729:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$467_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 461,
														"src": "9729:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 976,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "9752:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 446,
														"src": "9752:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9729:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "9729:40:2"
											},
											{
												"expression": {
													"id": 980,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 887,
													"src": "9787:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$467_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 867,
												"id": 981,
												"nodeType": "Return",
												"src": "9780:14:2"
											}
										]
									},
									"functionSelector": "10486b6a",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "8683:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8691:2:2"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "8717:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$467_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 864,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 467,
														"src": "8717:14:2"
													},
													"referencedDeclaration": 467,
													"src": "8717:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$467_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8716:23:2"
									},
									"scope": 1311,
									"src": "8674:1127:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "9961:47:2",
										"statements": [
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 988,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "9971:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 989,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9986:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9971:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "9971:30:2"
											}
										]
									},
									"functionSelector": "71e3db87",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 986,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 985,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "9951:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "9951:9:2"
										}
									],
									"name": "startAirdropSince",
									"nameLocation": "9922:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9939:2:2"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9961:0:2"
									},
									"scope": 1311,
									"src": "9913:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "10082:166:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1001,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "10096:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "323030",
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10105:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "10096:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1008,
												"nodeType": "IfStatement",
												"src": "10092:83:2",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "10110:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1004,
																	"name": "Staking__airdropExceed20Percent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "10131:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10131:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1006,
															"nodeType": "RevertStatement",
															"src": "10124:40:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "10184:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "10198:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10184:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "10184:20:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1014,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "10234:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1013,
														"name": "AirdropChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "10219:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10219:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "EmitStatement",
												"src": "10214:27:2"
											}
										]
									},
									"functionSelector": "d5dbdf1b",
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 998,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 532,
												"src": "10072:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "10072:9:2"
										}
									],
									"name": "changeAirdropPercentage",
									"nameLocation": "10023:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10055:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "10047:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10047:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10046:16:2"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10082:0:2"
									},
									"scope": 1311,
									"src": "10014:234:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "10325:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "37",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10372:6:2",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "7"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															}
														],
														"expression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1025,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "10343:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "10343:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1027,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "10361:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10343:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1029,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10342:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 260,
														"src": "10342:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10342:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1024,
												"id": 1033,
												"nodeType": "Return",
												"src": "10335:44:2"
											}
										]
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateWeek",
									"nameLocation": "10263:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "10286:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "10278:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10278:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10277:15:2"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "10316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10315:9:2"
									},
									"scope": 1311,
									"src": "10254:132:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "10500:71:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1042,
																				"name": "stakeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1037,
																				"src": "10519:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1043,
																				"name": "airdropRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 401,
																				"src": "10533:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10519:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1045,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10518:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10548:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "10518:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1048,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10517:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3532",
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10556:8:2",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31449600_by_1",
															"typeString": "int_const 31449600"
														},
														"value": "52"
													},
													"src": "10517:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1051,
												"nodeType": "Return",
												"src": "10510:54:2"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAirdrop",
									"nameLocation": "10401:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "stakeAmount",
												"nameLocation": "10427:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "10419:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10418:21:2"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "10487:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10487:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10486:9:2"
									},
									"scope": 1311,
									"src": "10392:179:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "10691:614:2",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "10759:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "10746:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 1063,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1062,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 459,
																"src": "10746:5:2"
															},
															"referencedDeclaration": 459,
															"src": "10746:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"baseExpression": {
														"id": 1065,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "10768:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$459_storage_$",
															"typeString": "mapping(address => struct Stakable.Stake storage ref)"
														}
													},
													"id": 1067,
													"indexExpression": {
														"id": 1066,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "10781:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10768:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$459_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10746:40:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1069,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "10801:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 446,
														"src": "10801:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10817:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10801:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "11266:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1061,
															"id": 1104,
															"nodeType": "Return",
															"src": "11280:8:2"
														}
													]
												},
												"id": 1106,
												"nodeType": "IfStatement",
												"src": "10797:502:2",
												"trueBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "10820:440:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1074,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1064,
																				"src": "11001:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			},
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "latestClaimDrop",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 458,
																			"src": "11001:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1073,
																		"name": "_calculateWeek",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "10986:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10986:38:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10986:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1083,
															"nodeType": "IfStatement",
															"src": "10982:118:2",
															"trueBody": {
																"id": 1082,
																"nodeType": "Block",
																"src": "11031:69:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1079,
																				"name": "Airdrop__claimableOnceAWeek",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 376,
																				"src": "11056:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11056:29:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1081,
																		"nodeType": "RevertStatement",
																		"src": "11049:36:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1084,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1064,
																		"src": "11114:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 456,
																	"src": "11114:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11140:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11114:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1089,
															"nodeType": "ExpressionStatement",
															"src": "11114:27:2"
														},
														{
															"expression": {
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1090,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1064,
																		"src": "11155:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "latestClaimDrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 458,
																	"src": "11155:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1093,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "11180:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "11180:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11155:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1096,
															"nodeType": "ExpressionStatement",
															"src": "11155:40:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1098,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1064,
																			"src": "11235:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$459_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 446,
																		"src": "11235:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1097,
																	"name": "_calculateAirdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "11217:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11217:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1061,
															"id": 1101,
															"nodeType": "Return",
															"src": "11210:39:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "65f8c6c5",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1058,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1057,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "10651:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "10651:9:2"
										}
									],
									"name": "claimAirdrop",
									"nameLocation": "10586:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "10607:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "10599:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10599:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10598:14:2"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "10678:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10677:9:2"
									},
									"scope": 1311,
									"src": "10577:728:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "11364:151:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "11378:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11394:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11378:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "11476:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11497:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1112,
															"id": 1126,
															"nodeType": "Return",
															"src": "11490:8:2"
														}
													]
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "11374:135:2",
												"trueBody": {
													"id": 1124,
													"nodeType": "Block",
													"src": "11397:73:2",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1116,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "11419:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "11419:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1118,
																				"name": "airdropSince",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "11437:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11419:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1120,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11418:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11453:6:2",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	},
																	"value": "7"
																},
																"src": "11418:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1112,
															"id": 1123,
															"nodeType": "Return",
															"src": "11411:48:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "cbb3e152",
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "airdropWeek",
									"nameLocation": "11320:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11331:2:2"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "11355:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11354:9:2"
									},
									"scope": 1311,
									"src": "11311:204:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "11695:81:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1139,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "11713:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1141,
																"indexExpression": {
																	"id": 1140,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "11720:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11713:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$397_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "votingRight",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 392,
															"src": "11713:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1143,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "11739:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
																			"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																		}
																	},
																	"id": 1145,
																	"indexExpression": {
																		"id": 1144,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "11746:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11739:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$397_storage",
																		"typeString": "struct Stakable.Voter storage ref"
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 396,
																"src": "11739:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 1148,
															"indexExpression": {
																"id": 1147,
																"name": "_votingId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "11758:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11739:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1149,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11712:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool)"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1150,
												"nodeType": "Return",
												"src": "11705:64:2"
											}
										]
									},
									"functionSelector": "2d15cc04",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVoters",
									"nameLocation": "11636:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11654:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "11646:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11646:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11645:14:2"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "11683:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11683:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "11689:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11689:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11682:12:2"
									},
									"scope": 1311,
									"src": "11627:149:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "11890:228:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1159,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "11977:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11994:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11977:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "11973:84:2",
												"trueBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "12000:57:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1162,
																	"name": "Voting__votingIsRunning",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "12021:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12021:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1164,
															"nodeType": "RevertStatement",
															"src": "12014:32:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1167,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "12067:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12083:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12067:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "12067:20:2"
											},
											{
												"expression": {
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "_votingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "12097:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12110:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12097:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "12097:14:2"
											}
										]
									},
									"functionSelector": "1ec6b60a",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1154,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "11867:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "11867:12:2"
										},
										{
											"id": 1157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1156,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "11880:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "11880:9:2"
										}
									],
									"name": "startVoting",
									"nameLocation": "11844:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11855:2:2"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11890:0:2"
									},
									"scope": 1311,
									"src": "11835:283:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "12185:342:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1185,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "12333:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1188,
																"indexExpression": {
																	"expression": {
																		"id": 1186,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12340:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12340:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12333:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$397_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 396,
															"src": "12333:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1191,
														"indexExpression": {
															"id": 1190,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "12358:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12333:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12372:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12333:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1198,
												"nodeType": "IfStatement",
												"src": "12329:103:2",
												"trueBody": {
													"id": 1197,
													"nodeType": "Block",
													"src": "12378:54:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1194,
																	"name": "Voting__alreadyVoted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "12399:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12399:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1196,
															"nodeType": "RevertStatement",
															"src": "12392:29:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1199,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "12442:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1202,
																"indexExpression": {
																	"expression": {
																		"id": 1200,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12449:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12449:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12442:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$397_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 396,
															"src": "12442:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1205,
														"indexExpression": {
															"id": 1204,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "12467:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12442:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12480:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12442:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "12442:42:2"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1209,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "12494:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1211,
														"indexExpression": {
															"id": 1210,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "12505:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12494:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12519:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12494:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "12494:26:2"
											}
										]
									},
									"functionSelector": "632a9a52",
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1178,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "12147:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12147:12:2"
										},
										{
											"id": 1181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1180,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 573,
												"src": "12160:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12160:16:2"
										},
										{
											"id": 1183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1182,
												"name": "isVoter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 555,
												"src": "12177:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12177:7:2"
										}
									],
									"name": "vote",
									"nameLocation": "12133:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12137:2:2"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12185:0:2"
									},
									"scope": 1311,
									"src": "12124:403:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "12601:344:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1225,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "12749:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1228,
																"indexExpression": {
																	"expression": {
																		"id": 1226,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12756:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12756:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12749:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$397_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 396,
															"src": "12749:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1231,
														"indexExpression": {
															"id": 1230,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "12774:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12749:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12788:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12749:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1238,
												"nodeType": "IfStatement",
												"src": "12745:103:2",
												"trueBody": {
													"id": 1237,
													"nodeType": "Block",
													"src": "12795:53:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1234,
																	"name": "Voting__notYetVoted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "12816:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12816:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1236,
															"nodeType": "RevertStatement",
															"src": "12809:28:2"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1239,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "12858:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$397_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1242,
																"indexExpression": {
																	"expression": {
																		"id": 1240,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12865:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12865:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12858:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$397_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 396,
															"src": "12858:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1245,
														"indexExpression": {
															"id": 1244,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "12883:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12858:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12897:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12858:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "12858:44:2"
											},
											{
												"expression": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1249,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "12912:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1251,
														"indexExpression": {
															"id": 1250,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "12923:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12912:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12937:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12912:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "12912:26:2"
											}
										]
									},
									"functionSelector": "070c8b74",
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1218,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "12563:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12563:12:2"
										},
										{
											"id": 1221,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1220,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 573,
												"src": "12576:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12576:16:2"
										},
										{
											"id": 1223,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1222,
												"name": "isVoter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 555,
												"src": "12593:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12593:7:2"
										}
									],
									"name": "retractVote",
									"nameLocation": "12542:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12553:2:2"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12601:0:2"
									},
									"scope": 1311,
									"src": "12533:412:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "13078:361:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1265,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "13150:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "31",
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13165:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "13150:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1272,
												"nodeType": "IfStatement",
												"src": "13146:79:2",
												"trueBody": {
													"id": 1271,
													"nodeType": "Block",
													"src": "13168:57:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1268,
																	"name": "Voting__notEnoughVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "13189:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13189:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1270,
															"nodeType": "RevertStatement",
															"src": "13182:32:2"
														}
													]
												}
											},
											{
												"assignments": [
													1274
												],
												"declarations": [
													{
														"constant": false,
														"id": 1274,
														"mutability": "mutable",
														"name": "half_voters",
														"nameLocation": "13242:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "13234:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13234:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1279,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "13282:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "35",
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13295:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	}
																],
																"expression": {
																	"id": 1277,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "13269:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 245,
																"src": "13269:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13269:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3130",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13299:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 1275,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "13256:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$351_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 260,
														"src": "13256:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13256:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13234:68:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1285,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "13317:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1287,
														"indexExpression": {
															"id": 1286,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "13328:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13317:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1288,
														"name": "half_voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "13341:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13317:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1295,
													"nodeType": "Block",
													"src": "13396:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13417:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1264,
															"id": 1294,
															"nodeType": "Return",
															"src": "13410:12:2"
														}
													]
												},
												"id": 1296,
												"nodeType": "IfStatement",
												"src": "13313:120:2",
												"trueBody": {
													"id": 1292,
													"nodeType": "Block",
													"src": "13354:36:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13375:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1264,
															"id": 1291,
															"nodeType": "Return",
															"src": "13368:11:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "671d2b75",
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1259,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1258,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "13016:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "13016:9:2"
										},
										{
											"id": 1261,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1260,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 573,
												"src": "13034:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "13034:16:2"
										}
									],
									"name": "getVotingResult",
									"nameLocation": "12960:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12975:2:2"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "13068:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13068:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13067:6:2"
									},
									"scope": 1311,
									"src": "12951:488:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "13503:38:2",
										"statements": [
											{
												"expression": {
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1305,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "13513:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13529:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "13513:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "13513:21:2"
											}
										]
									},
									"functionSelector": "fab2f86b",
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1301,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1300,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "13476:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "13476:9:2"
										},
										{
											"id": 1303,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1302,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 573,
												"src": "13486:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "13486:16:2"
										}
									],
									"name": "stopVoting",
									"nameLocation": "13454:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13464:2:2"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13503:0:2"
									},
									"scope": 1311,
									"src": "13445:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1312,
							"src": "880:12663:2",
							"usedErrors": [
								358,
								360,
								362,
								365,
								367,
								369,
								371,
								373,
								376,
								379,
								381,
								383,
								385
							]
						}
					],
					"src": "39:13505:2"
				},
				"id": 2
			}
		}
	}
}