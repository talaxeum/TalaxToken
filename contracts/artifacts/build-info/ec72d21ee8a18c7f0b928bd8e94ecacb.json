{
	"id": "ec72d21ee8a18c7f0b928bd8e94ecacb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakable.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.11;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract Stakable {\r\n    using SafeMath for uint256;\r\n    /**\r\n     * @notice Constructor since this contract is not ment to be used without inheritance\r\n     * push once to stakeholders for it to work proplerly\r\n     */\r\n\r\n    uint256 private _stakingPenaltyRate;\r\n    uint256 private _airdropRate;\r\n\r\n    constructor() {\r\n        //Staking penalty and Airdrop in 0.1 times percentage\r\n        _stakingPenaltyRate = 15;\r\n        _airdropRate = 80;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * A stake struct is used to represent the way we store stakes,\r\n     * A Stake will contain the users address, the amount staked and a timestamp,\r\n     * Since which is when the stake was made\r\n     */\r\n    struct Stake {\r\n        address user;\r\n        uint256 amount;\r\n        uint256 since;\r\n        // This claimable field is new and used to tell how big of a reward is currently available\r\n        uint256 claimable;\r\n        uint256 claimable_airdrop;\r\n        uint256 rewardAPY;\r\n        uint256 releaseTime;\r\n    }\r\n    /**\r\n     * @notice Stakeholder is a staker that has active stakes\r\n     */\r\n    struct Stakeholder {\r\n        Stake stake;\r\n        address user;\r\n        uint256 latestClaimDrop;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\r\n     */\r\n    struct StakingSummary {\r\n        uint256 total_amount;\r\n        uint256 penalty;\r\n        Stake stake;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\r\n     */\r\n    mapping(address => Stakeholder) internal stakeholders;\r\n\r\n    /**\r\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\r\n     */\r\n    event Staked(\r\n        address indexed user,\r\n        uint256 amount,\r\n        uint256 timestamp,\r\n        uint256 releaseTime\r\n    );\r\n\r\n    event PenaltyChanged(uint256 amount);\r\n    event AirdropChanged(uint256 amount);\r\n\r\n    /**\r\n     * @notice\r\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\r\n     * StakeID\r\n     */\r\n    function _stake(\r\n        address _user,\r\n        uint256 _amount,\r\n        uint256 _stakePeriod,\r\n        uint256 _rewardRate\r\n    ) internal {\r\n        // Simple check so that user does not stake 0\r\n        require(_amount > 0, \"Cannot stake nothing\");\r\n        require(stakeholders[_user].stake.amount == 0, \"User is a staker\");\r\n\r\n        // block.timestamp = timestamp of the current block in seconds since the epoch\r\n        uint256 timestamp = block.timestamp;\r\n\r\n        // Use the index to push a new Stake\r\n        // push a newly created Stake with the current block timestamp.\r\n        stakeholders[_user].stake = Stake(\r\n            _user,\r\n            _amount,\r\n            timestamp,\r\n            0,\r\n            0,\r\n            _rewardRate,\r\n            (_stakePeriod + timestamp)\r\n        );\r\n        // Emit an event that the stake has occured\r\n        emit Staked(_user, _amount, timestamp, (_stakePeriod + timestamp));\r\n    }\r\n\r\n    function _changePenaltyFee(uint256 amount_) internal {\r\n        require(amount_ <= 30, \"Penalty fee cannot exceed 3 percent.\");\r\n        _stakingPenaltyRate = amount_;\r\n        emit PenaltyChanged(amount_);\r\n    }\r\n\r\n    function _changeAirdropPercentage(uint256 amount_) internal {\r\n        require(amount_ <= 200, \"Airdrop Percentage cannot exceed 20 percent.\");\r\n        _airdropRate = amount_;\r\n        emit AirdropChanged(amount_);\r\n    }\r\n\r\n    function penaltyFee() public view returns (uint256) {\r\n        return _stakingPenaltyRate;\r\n    }\r\n\r\n    function calculateStakingDuration(uint256 since_)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(since_ > 0, \"Error timestamp 0\");\r\n        return\r\n            SafeMath.div(\r\n                (block.timestamp - since_) * 1e24,\r\n                365 days,\r\n                \"Error cannot divide timestamp\"\r\n            );\r\n    }\r\n\r\n    function calculateStakeReward(Stake memory user_stake, uint256 _amount)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        if (user_stake.amount == 0) {\r\n            return 0;\r\n        }\r\n\r\n        return\r\n            (_amount *\r\n                user_stake.rewardAPY *\r\n                calculateStakingDuration(user_stake.since)) / 1e26;\r\n    }\r\n\r\n    function calculatePenalty(uint256 amount, uint256 reward)\r\n        internal\r\n        view\r\n        returns (uint256, uint256)\r\n    {\r\n        uint256 amount_penalty = SafeMath.div(\r\n            SafeMath.mul(amount, _stakingPenaltyRate),\r\n            1000\r\n        );\r\n        uint256 reward_penalty = SafeMath.div(\r\n            SafeMath.mul(reward, _stakingPenaltyRate),\r\n            1000\r\n        );\r\n\r\n        return (amount_penalty, reward_penalty);\r\n    }\r\n\r\n    function calculateStakingWithPenalty(uint256 amount, uint256 reward)\r\n        internal\r\n        view\r\n        returns (uint256, uint256)\r\n    {\r\n        if (amount == 0) {\r\n            return (0, 0);\r\n        }\r\n\r\n        (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(\r\n            amount,\r\n            reward\r\n        );\r\n        return (\r\n            SafeMath.sub(amount, amount_penalty),\r\n            SafeMath.sub(reward, reward_penalty)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\r\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\r\n     * Will return the amount to MINT onto the acount\r\n     * Will also calculateStakeReward and reset timer\r\n     */\r\n    function _withdrawStake(address _user, uint256 _amount)\r\n        internal\r\n        returns (uint256, uint256)\r\n    {\r\n        // Grab user_index which is the index to use to grab the Stake[]\r\n        Stake storage stake = stakeholders[_user].stake;\r\n\r\n        uint256 reward = calculateStakeReward(stake, _amount);\r\n\r\n        if (stake.amount == _amount) {\r\n            delete stakeholders[_user];\r\n\r\n            if (stake.releaseTime > block.timestamp) {\r\n                return calculateStakingWithPenalty(_amount, reward);\r\n            }\r\n\r\n            return (_amount, reward);\r\n        } else {\r\n            stake.amount = stake.amount.sub(_amount);\r\n\r\n            if (stake.releaseTime > block.timestamp) {\r\n                return calculateStakingWithPenalty(_amount, reward);\r\n            }\r\n\r\n            return (_amount, reward);\r\n        }\r\n    }\r\n\r\n    function hasStake(address _staker)\r\n        public\r\n        view\r\n        returns (StakingSummary memory)\r\n    {\r\n        StakingSummary memory summary = StakingSummary(\r\n            0,\r\n            0,\r\n            stakeholders[_staker].stake\r\n        );\r\n        require(summary.stake.amount != 0, \"No stake found\");\r\n\r\n        uint256 availableReward = calculateStakeReward(\r\n            summary.stake,\r\n            summary.stake.amount\r\n        );\r\n        uint256 penalty;\r\n\r\n        if (summary.stake.releaseTime > block.timestamp) {\r\n            (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(\r\n                summary.stake.amount,\r\n                availableReward\r\n            );\r\n            penalty = amount_penalty + reward_penalty;\r\n        }\r\n\r\n        uint256 airdrop = calculateAirdrop(summary.stake.amount);\r\n        summary.stake.claimable_airdrop = airdrop;\r\n        summary.stake.claimable = availableReward;\r\n        summary.penalty = penalty;\r\n        summary.total_amount = summary.stake.amount;\r\n\r\n        return summary;\r\n    }\r\n\r\n    function calculateAirdrop(uint256 stakeAmount) internal view returns (uint256) {\r\n        uint256 airdrop = ((stakeAmount * _airdropRate) / 100);\r\n        return airdrop;\r\n    }\r\n\r\n    function _claimAirdrop(address _staker) internal returns (uint256) {\r\n        Stakeholder storage stakeholder = stakeholders[_staker];\r\n        uint256 monthAirdrop = (block.timestamp - stakeholder.latestClaimDrop)\r\n            .div(7 days);\r\n\r\n        require(monthAirdrop >= 1, \"Claimable once a month\");\r\n\r\n        require(stakeholder.stake.amount > 0, \"No stake found\");\r\n\r\n        uint256 airdrop = calculateAirdrop(stakeholder.stake.amount);\r\n        stakeholder.latestClaimDrop = block.timestamp;\r\n\r\n        return airdrop;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stakable.sol": {
				"Stakable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AirdropChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penalty",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable_airdrop",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake",
											"name": "stake",
											"type": "tuple"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "penaltyFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakable.sol\":128:8569  contract Stakable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakable.sol\":435:583  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Stakable.sol\":545:547  15 */\n  0x0f\n    /* \"contracts/Stakable.sol\":523:542  _stakingPenaltyRate */\n  0x00\n    /* \"contracts/Stakable.sol\":523:547  _stakingPenaltyRate = 15 */\n  sstore\n    /* \"contracts/Stakable.sol\":573:575  80 */\n  0x50\n    /* \"contracts/Stakable.sol\":558:570  _airdropRate */\n  0x01\n    /* \"contracts/Stakable.sol\":558:575  _airdropRate = 80 */\n  sstore\n    /* \"contracts/Stakable.sol\":128:8569  contract Stakable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakable.sol\":128:8569  contract Stakable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3dc10ad4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe73e14bf\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakable.sol\":3750:3847  function penaltyFee() public view returns (uint256) {... */\n    tag_3:\n        /* \"contracts/Stakable.sol\":3793:3800  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":3820:3839  _stakingPenaltyRate */\n      sload\n        /* \"contracts/Stakable.sol\":3750:3847  function penaltyFee() public view returns (uint256) {... */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Stakable.sol\":3750:3847  function penaltyFee() public view returns (uint256) {... */\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":6764:7836  function hasStake(address _staker)... */\n    tag_4:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n        /* \"#utility.yul\":664:668   */\n      0x00\n        /* \"#utility.yul\":706:709   */\n      0x0120\n        /* \"#utility.yul\":695:704   */\n      dup3\n        /* \"#utility.yul\":691:710   */\n      add\n        /* \"#utility.yul\":683:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":743:749   */\n      dup3\n        /* \"#utility.yul\":737:750   */\n      mload\n        /* \"#utility.yul\":726:735   */\n      dup3\n        /* \"#utility.yul\":719:751   */\n      mstore\n        /* \"#utility.yul\":807:811   */\n      0x20\n        /* \"#utility.yul\":799:805   */\n      dup4\n        /* \"#utility.yul\":795:812   */\n      add\n        /* \"#utility.yul\":789:813   */\n      mload\n        /* \"#utility.yul\":782:786   */\n      0x20\n        /* \"#utility.yul\":771:780   */\n      dup4\n        /* \"#utility.yul\":767:787   */\n      add\n        /* \"#utility.yul\":760:814   */\n      mstore\n        /* \"#utility.yul\":861:865   */\n      0x40\n        /* \"#utility.yul\":853:859   */\n      dup4\n        /* \"#utility.yul\":849:866   */\n      add\n        /* \"#utility.yul\":843:867   */\n      mload\n        /* \"#utility.yul\":930:972   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":915:927   */\n      dup2\n        /* \"#utility.yul\":909:928   */\n      mload\n        /* \"#utility.yul\":905:973   */\n      and\n        /* \"#utility.yul\":898:902   */\n      0x40\n        /* \"#utility.yul\":887:896   */\n      dup5\n        /* \"#utility.yul\":883:903   */\n      add\n        /* \"#utility.yul\":876:974   */\n      mstore\n        /* \"#utility.yul\":1034:1038   */\n      0x20\n        /* \"#utility.yul\":1020:1032   */\n      dup2\n        /* \"#utility.yul\":1016:1039   */\n      add\n        /* \"#utility.yul\":1010:1040   */\n      mload\n        /* \"#utility.yul\":1005:1007   */\n      0x60\n        /* \"#utility.yul\":994:1003   */\n      dup5\n        /* \"#utility.yul\":990:1008   */\n      add\n        /* \"#utility.yul\":983:1041   */\n      mstore\n        /* \"#utility.yul\":1102:1106   */\n      0x40\n        /* \"#utility.yul\":1088:1100   */\n      dup2\n        /* \"#utility.yul\":1084:1107   */\n      add\n        /* \"#utility.yul\":1078:1108   */\n      mload\n        /* \"#utility.yul\":1072:1075   */\n      0x80\n        /* \"#utility.yul\":1061:1070   */\n      dup5\n        /* \"#utility.yul\":1057:1076   */\n      add\n        /* \"#utility.yul\":1050:1109   */\n      mstore\n        /* \"#utility.yul\":1170:1172   */\n      0x60\n        /* \"#utility.yul\":1156:1168   */\n      dup2\n        /* \"#utility.yul\":1152:1173   */\n      add\n        /* \"#utility.yul\":1146:1174   */\n      mload\n        /* \"#utility.yul\":1140:1143   */\n      0xa0\n        /* \"#utility.yul\":1129:1138   */\n      dup5\n        /* \"#utility.yul\":1125:1144   */\n      add\n        /* \"#utility.yul\":1118:1175   */\n      mstore\n        /* \"#utility.yul\":1236:1239   */\n      0x80\n        /* \"#utility.yul\":1222:1234   */\n      dup2\n        /* \"#utility.yul\":1218:1240   */\n      add\n        /* \"#utility.yul\":1212:1241   */\n      mload\n        /* \"#utility.yul\":1206:1209   */\n      0xc0\n        /* \"#utility.yul\":1195:1204   */\n      dup5\n        /* \"#utility.yul\":1191:1210   */\n      add\n        /* \"#utility.yul\":1184:1242   */\n      mstore\n        /* \"#utility.yul\":1303:1306   */\n      0xa0\n        /* \"#utility.yul\":1289:1301   */\n      dup2\n        /* \"#utility.yul\":1285:1307   */\n      add\n        /* \"#utility.yul\":1279:1308   */\n      mload\n        /* \"#utility.yul\":1273:1276   */\n      0xe0\n        /* \"#utility.yul\":1262:1271   */\n      dup5\n        /* \"#utility.yul\":1258:1277   */\n      add\n        /* \"#utility.yul\":1251:1309   */\n      mstore\n        /* \"#utility.yul\":1370:1373   */\n      0xc0\n        /* \"#utility.yul\":1356:1368   */\n      dup2\n        /* \"#utility.yul\":1352:1374   */\n      add\n        /* \"#utility.yul\":1346:1375   */\n      mload\n        /* \"#utility.yul\":1340:1343   */\n      0x0100\n        /* \"#utility.yul\":1329:1338   */\n      dup5\n        /* \"#utility.yul\":1325:1344   */\n      add\n        /* \"#utility.yul\":1318:1376   */\n      mstore\n      pop\n        /* \"#utility.yul\":510:1382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"contracts/Stakable.sol\":6764:7836  function hasStake(address _staker)... */\n    tag_12:\n        /* \"contracts/Stakable.sol\":6847:6868  StakingSummary memory */\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/Stakable.sol\":6918:7017  StakingSummary(... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup1\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/Stakable.sol\":6886:6915  StakingSummary memory summary */\n      0x00\n        /* \"contracts/Stakable.sol\":6918:7017  StakingSummary(... */\n      dup1\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      add\n      dup3\n      swap1\n      mstore\n        /* \"contracts/Stakable.sol\":6979:7000  stakeholders[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      dup4\n      mstore\n        /* \"contracts/Stakable.sol\":6979:6991  stakeholders */\n      0x02\n        /* \"contracts/Stakable.sol\":6979:7000  stakeholders[_staker] */\n      dup1\n      dup4\n      mstore\n      swap3\n      dup7\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":6918:7017  StakingSummary(... */\n      dup7\n      mload\n      0xe0\n      dup2\n      add\n      dup9\n      mstore\n      dup2\n      sload\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap3\n      dup3\n      add\n      swap3\n      dup4\n      mstore\n      swap3\n      dup4\n      add\n      sload\n      dup2\n      dup8\n      add\n      mstore\n      0x03\n      dup4\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup3\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      swap1\n      swap2\n      add\n      sload\n      0xc0\n      dup4\n      add\n      mstore\n      swap3\n      dup3\n      add\n      mstore\n        /* \"contracts/Stakable.sol\":7036:7056  summary.stake.amount */\n      swap1\n      mload\n        /* \"contracts/Stakable.sol\":7028:7080  require(summary.stake.amount != 0, \"No stake found\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1589:1591   */\n      0x20\n        /* \"contracts/Stakable.sol\":7028:7080  require(summary.stake.amount != 0, \"No stake found\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1571:1592   */\n      mstore\n        /* \"#utility.yul\":1628:1630   */\n      0x0e\n        /* \"#utility.yul\":1608:1626   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1601:1631   */\n      mstore\n        /* \"#utility.yul\":1667:1683   */\n      0x4e6f207374616b6520666f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":1647:1665   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1640:1684   */\n      mstore\n        /* \"#utility.yul\":1701:1719   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":7028:7080  require(summary.stake.amount != 0, \"No stake found\") */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/Stakable.sol\":7154:7167  summary.stake */\n      0x40\n      dup2\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7182:7202  summary.stake.amount */\n      0x20\n      dup2\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7093:7116  uint256 availableReward */\n      0x00\n      swap2\n        /* \"contracts/Stakable.sol\":7119:7213  calculateStakeReward(... */\n      tag_22\n      swap2\n        /* \"contracts/Stakable.sol\":7119:7139  calculateStakeReward */\n      tag_23\n        /* \"contracts/Stakable.sol\":7119:7213  calculateStakeReward(... */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Stakable.sol\":7093:7213  uint256 availableReward = calculateStakeReward(... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":7224:7239  uint256 penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":7284:7299  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":7256:7263  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":7256:7269  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7256:7281  summary.stake.releaseTime */\n      0xc0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7256:7299  summary.stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stakable.sol\":7252:7539  if (summary.stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_24\n      jumpi\n        /* \"contracts/Stakable.sol\":7317:7339  uint256 amount_penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":7341:7363  uint256 reward_penalty */\n      dup1\n        /* \"contracts/Stakable.sol\":7367:7471  calculatePenalty(... */\n      tag_25\n        /* \"contracts/Stakable.sol\":7402:7409  summary */\n      dup6\n        /* \"contracts/Stakable.sol\":7402:7415  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7402:7422  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7441:7456  availableReward */\n      dup6\n        /* \"contracts/Stakable.sol\":7367:7383  calculatePenalty */\n      tag_26\n        /* \"contracts/Stakable.sol\":7367:7471  calculatePenalty(... */\n      jump\t// in\n    tag_25:\n        /* \"contracts/Stakable.sol\":7316:7471  (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":7496:7527  amount_penalty + reward_penalty */\n      tag_27\n        /* \"contracts/Stakable.sol\":7316:7471  (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(... */\n      dup2\n      dup4\n        /* \"contracts/Stakable.sol\":7496:7527  amount_penalty + reward_penalty */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"contracts/Stakable.sol\":7486:7527  penalty = amount_penalty + reward_penalty */\n      swap3\n      pop\n        /* \"contracts/Stakable.sol\":7301:7539  {... */\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7252:7539  if (summary.stake.releaseTime > block.timestamp) {... */\n    tag_24:\n        /* \"contracts/Stakable.sol\":7551:7566  uint256 airdrop */\n      0x00\n        /* \"contracts/Stakable.sol\":7569:7607  calculateAirdrop(summary.stake.amount) */\n      tag_29\n        /* \"contracts/Stakable.sol\":7586:7593  summary */\n      dup5\n        /* \"contracts/Stakable.sol\":7586:7599  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7586:7606  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7569:7585  calculateAirdrop */\n      tag_30\n        /* \"contracts/Stakable.sol\":7569:7607  calculateAirdrop(summary.stake.amount) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/Stakable.sol\":7618:7631  summary.stake */\n      0x40\n      dup6\n      add\n      dup1\n      mload\n        /* \"contracts/Stakable.sol\":7618:7649  summary.stake.claimable_airdrop */\n      0x80\n      add\n        /* \"contracts/Stakable.sol\":7618:7659  summary.stake.claimable_airdrop = airdrop */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Stakable.sol\":7670:7683  summary.stake */\n      dup1\n      mload\n        /* \"contracts/Stakable.sol\":7670:7693  summary.stake.claimable */\n      0x60\n      add\n        /* \"contracts/Stakable.sol\":7670:7711  summary.stake.claimable = availableReward */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n      0x20\n        /* \"contracts/Stakable.sol\":7722:7737  summary.penalty */\n      dup1\n      dup5\n      add\n        /* \"contracts/Stakable.sol\":7722:7747  summary.penalty = penalty */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Stakable.sol\":7781:7794  summary.stake */\n      swap1\n      mload\n        /* \"contracts/Stakable.sol\":7781:7801  summary.stake.amount */\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7758:7801  summary.total_amount = summary.stake.amount */\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":7618:7625  summary */\n      swap3\n        /* \"contracts/Stakable.sol\":6764:7836  function hasStake(address _staker)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":4223:4591  function calculateStakeReward(Stake memory user_stake, uint256 _amount)... */\n    tag_23:\n        /* \"contracts/Stakable.sol\":4345:4352  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":4374:4384  user_stake */\n      dup3\n        /* \"contracts/Stakable.sol\":4374:4391  user_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":4395:4396  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":4374:4396  user_stake.amount == 0 */\n      eq\n        /* \"contracts/Stakable.sol\":4370:4433  if (user_stake.amount == 0) {... */\n      iszero\n      tag_32\n      jumpi\n      pop\n        /* \"contracts/Stakable.sol\":4420:4421  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":4413:4421  return 0 */\n      jump(tag_31)\n        /* \"contracts/Stakable.sol\":4370:4433  if (user_stake.amount == 0) {... */\n    tag_32:\n        /* \"contracts/Stakable.sol\":4579:4583  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stakable.sol\":4533:4575  calculateStakingDuration(user_stake.since) */\n      tag_33\n        /* \"contracts/Stakable.sol\":4558:4568  user_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":4558:4574  user_stake.since */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":4533:4557  calculateStakingDuration */\n      tag_34\n        /* \"contracts/Stakable.sol\":4533:4575  calculateStakingDuration(user_stake.since) */\n      jump\t// in\n    tag_33:\n        /* \"contracts/Stakable.sol\":4493:4513  user_stake.rewardAPY */\n      0xa0\n      dup6\n      add\n      mload\n        /* \"contracts/Stakable.sol\":4466:4513  _amount *... */\n      tag_35\n      swap1\n        /* \"contracts/Stakable.sol\":4466:4473  _amount */\n      dup6\n        /* \"contracts/Stakable.sol\":4466:4513  _amount *... */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/Stakable.sol\":4466:4575  _amount *... */\n      tag_37\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_37:\n        /* \"contracts/Stakable.sol\":4465:4583  (_amount *... */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/Stakable.sol\":4445:4583  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":4223:4591  function calculateStakeReward(Stake memory user_stake, uint256 _amount)... */\n    tag_31:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":4599:5058  function calculatePenalty(uint256 amount, uint256 reward)... */\n    tag_26:\n        /* \"contracts/Stakable.sol\":4707:4714  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":4716:4723  uint256 */\n      dup1\n        /* \"contracts/Stakable.sol\":4741:4763  uint256 amount_penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":4766:4864  SafeMath.div(... */\n      tag_41\n        /* \"contracts/Stakable.sol\":4793:4834  SafeMath.mul(amount, _stakingPenaltyRate) */\n      tag_42\n        /* \"contracts/Stakable.sol\":4806:4812  amount */\n      dup7\n        /* \"contracts/Stakable.sol\":4814:4833  _stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":4793:4805  SafeMath.mul */\n      tag_43\n        /* \"contracts/Stakable.sol\":4793:4834  SafeMath.mul(amount, _stakingPenaltyRate) */\n      jump\t// in\n    tag_42:\n        /* \"contracts/Stakable.sol\":4849:4853  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":4766:4778  SafeMath.div */\n      tag_44\n        /* \"contracts/Stakable.sol\":4766:4864  SafeMath.div(... */\n      jump\t// in\n    tag_41:\n        /* \"contracts/Stakable.sol\":4741:4864  uint256 amount_penalty = SafeMath.div(... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":4875:4897  uint256 reward_penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":4900:4998  SafeMath.div(... */\n      tag_45\n        /* \"contracts/Stakable.sol\":4927:4968  SafeMath.mul(reward, _stakingPenaltyRate) */\n      tag_42\n        /* \"contracts/Stakable.sol\":4940:4946  reward */\n      dup7\n        /* \"contracts/Stakable.sol\":4948:4967  _stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":4927:4939  SafeMath.mul */\n      tag_43\n        /* \"contracts/Stakable.sol\":4927:4968  SafeMath.mul(reward, _stakingPenaltyRate) */\n      jump\t// in\n        /* \"contracts/Stakable.sol\":4900:4998  SafeMath.div(... */\n    tag_45:\n        /* \"contracts/Stakable.sol\":5019:5033  amount_penalty */\n      swap2\n      swap7\n      swap2\n      swap6\n      pop\n        /* \"contracts/Stakable.sol\":4599:5058  function calculatePenalty(uint256 amount, uint256 reward)... */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":7844:8021  function calculateAirdrop(uint256 stakeAmount) internal view returns (uint256) {... */\n    tag_30:\n        /* \"contracts/Stakable.sol\":7914:7921  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":7934:7949  uint256 airdrop */\n      dup1\n        /* \"contracts/Stakable.sol\":7984:7987  100 */\n      0x64\n        /* \"contracts/Stakable.sol\":7968:7980  _airdropRate */\n      sload(0x01)\n        /* \"contracts/Stakable.sol\":7954:7965  stakeAmount */\n      dup5\n        /* \"contracts/Stakable.sol\":7954:7980  stakeAmount * _airdropRate */\n      tag_48\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_48:\n        /* \"contracts/Stakable.sol\":7953:7987  (stakeAmount * _airdropRate) / 100 */\n      tag_49\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_49:\n        /* \"contracts/Stakable.sol\":7934:7988  uint256 airdrop = ((stakeAmount * _airdropRate) / 100) */\n      swap4\n        /* \"contracts/Stakable.sol\":7844:8021  function calculateAirdrop(uint256 stakeAmount) internal view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":3855:4215  function calculateStakingDuration(uint256 since_)... */\n    tag_34:\n        /* \"contracts/Stakable.sol\":3955:3962  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":3997:3998  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":3988:3994  since_ */\n      dup3\n        /* \"contracts/Stakable.sol\":3988:3998  since_ > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":3980:4020  require(since_ > 0, \"Error timestamp 0\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2895:2897   */\n      0x20\n        /* \"contracts/Stakable.sol\":3980:4020  require(since_ > 0, \"Error timestamp 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2877:2898   */\n      mstore\n        /* \"#utility.yul\":2934:2936   */\n      0x11\n        /* \"#utility.yul\":2914:2932   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2907:2937   */\n      mstore\n        /* \"#utility.yul\":2973:2992   */\n      0x4572726f722074696d657374616d702030000000000000000000000000000000\n        /* \"#utility.yul\":2953:2971   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2946:2993   */\n      mstore\n        /* \"#utility.yul\":3010:3028   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":3980:4020  require(since_ > 0, \"Error timestamp 0\") */\n      tag_20\n        /* \"#utility.yul\":2693:3034   */\n      jump\n        /* \"contracts/Stakable.sol\":3980:4020  require(since_ > 0, \"Error timestamp 0\") */\n    tag_51:\n        /* \"contracts/Stakable.sol\":4051:4207  SafeMath.div(... */\n      tag_31\n        /* \"contracts/Stakable.sol\":4083:4107  block.timestamp - since_ */\n      tag_55\n        /* \"contracts/Stakable.sol\":4101:4107  since_ */\n      dup4\n        /* \"contracts/Stakable.sol\":4083:4098  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":4083:4107  block.timestamp - since_ */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"contracts/Stakable.sol\":4082:4115  (block.timestamp - since_) * 1e24 */\n      tag_57\n      swap1\n        /* \"contracts/Stakable.sol\":4111:4115  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stakable.sol\":4082:4115  (block.timestamp - since_) * 1e24 */\n      tag_36\n      jump\t// in\n    tag_57:\n        /* \"contracts/Stakable.sol\":4134:4142  365 days */\n      0x01e13380\n        /* \"contracts/Stakable.sol\":4051:4207  SafeMath.div(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      0x4572726f722063616e6e6f74206469766964652074696d657374616d70000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":4051:4063  SafeMath.div */\n      tag_58\n        /* \"contracts/Stakable.sol\":4051:4207  SafeMath.div(... */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_38\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_36\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_38\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n    tag_58:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5776:5783  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5834:5846  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5832  b > 0 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5819:5847  require(b > 0, errorMessage) */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_64:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5872:5873  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5869  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5873  a / b */\n      dup2\n      tag_68\n      jumpi\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      div\n      swap5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_17:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_70\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_70:\n      swap1\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":196:505   */\n    tag_11:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_76:\n        /* \"#utility.yul\":363:372   */\n      dup2\n        /* \"#utility.yul\":350:373   */\n      calldataload\n        /* \"#utility.yul\":413:455   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":406:411   */\n      dup2\n        /* \"#utility.yul\":402:456   */\n      and\n        /* \"#utility.yul\":395:400   */\n      dup2\n        /* \"#utility.yul\":392:457   */\n      eq\n        /* \"#utility.yul\":382:475   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":471:472   */\n      0x00\n        /* \"#utility.yul\":468:469   */\n      dup1\n        /* \"#utility.yul\":461:473   */\n      revert\n        /* \"#utility.yul\":1730:1914   */\n    tag_72:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":1779:1780   */\n      0x00\n        /* \"#utility.yul\":1772:1860   */\n      mstore\n        /* \"#utility.yul\":1879:1883   */\n      0x11\n        /* \"#utility.yul\":1876:1877   */\n      0x04\n        /* \"#utility.yul\":1869:1884   */\n      mstore\n        /* \"#utility.yul\":1903:1907   */\n      0x24\n        /* \"#utility.yul\":1900:1901   */\n      0x00\n        /* \"#utility.yul\":1893:1908   */\n      revert\n        /* \"#utility.yul\":1919:2047   */\n    tag_28:\n        /* \"#utility.yul\":1959:1962   */\n      0x00\n        /* \"#utility.yul\":1990:1991   */\n      dup3\n        /* \"#utility.yul\":1986:1992   */\n      not\n        /* \"#utility.yul\":1983:1984   */\n      dup3\n        /* \"#utility.yul\":1980:1993   */\n      gt\n        /* \"#utility.yul\":1977:2016   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":1996:2014   */\n      tag_83\n      tag_72\n      jump\t// in\n    tag_83:\n      pop\n        /* \"#utility.yul\":2032:2041   */\n      add\n      swap1\n        /* \"#utility.yul\":1919:2047   */\n      jump\t// out\n        /* \"#utility.yul\":2052:2220   */\n    tag_36:\n        /* \"#utility.yul\":2092:2099   */\n      0x00\n        /* \"#utility.yul\":2158:2159   */\n      dup2\n        /* \"#utility.yul\":2154:2155   */\n      0x00\n        /* \"#utility.yul\":2150:2156   */\n      not\n        /* \"#utility.yul\":2146:2160   */\n      div\n        /* \"#utility.yul\":2143:2144   */\n      dup4\n        /* \"#utility.yul\":2140:2161   */\n      gt\n        /* \"#utility.yul\":2135:2136   */\n      dup3\n        /* \"#utility.yul\":2128:2137   */\n      iszero\n        /* \"#utility.yul\":2121:2138   */\n      iszero\n        /* \"#utility.yul\":2117:2162   */\n      and\n        /* \"#utility.yul\":2114:2185   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2165:2183   */\n      tag_86\n      tag_72\n      jump\t// in\n    tag_86:\n      pop\n        /* \"#utility.yul\":2205:2214   */\n      mul\n      swap1\n        /* \"#utility.yul\":2052:2220   */\n      jump\t// out\n        /* \"#utility.yul\":2225:2409   */\n    tag_69:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2267:2355   */\n      mstore\n        /* \"#utility.yul\":2374:2378   */\n      0x12\n        /* \"#utility.yul\":2371:2372   */\n      0x04\n        /* \"#utility.yul\":2364:2379   */\n      mstore\n        /* \"#utility.yul\":2398:2402   */\n      0x24\n        /* \"#utility.yul\":2395:2396   */\n      0x00\n        /* \"#utility.yul\":2388:2403   */\n      revert\n        /* \"#utility.yul\":2414:2688   */\n    tag_39:\n        /* \"#utility.yul\":2454:2455   */\n      0x00\n        /* \"#utility.yul\":2480:2481   */\n      dup3\n        /* \"#utility.yul\":2470:2659   */\n      tag_89\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2512:2513   */\n      0x00\n        /* \"#utility.yul\":2505:2593   */\n      mstore\n        /* \"#utility.yul\":2616:2620   */\n      0x12\n        /* \"#utility.yul\":2613:2614   */\n      0x04\n        /* \"#utility.yul\":2606:2621   */\n      mstore\n        /* \"#utility.yul\":2644:2648   */\n      0x24\n        /* \"#utility.yul\":2641:2642   */\n      0x00\n        /* \"#utility.yul\":2634:2649   */\n      revert\n        /* \"#utility.yul\":2470:2659   */\n    tag_89:\n      pop\n        /* \"#utility.yul\":2673:2682   */\n      div\n      swap1\n        /* \"#utility.yul\":2414:2688   */\n      jump\t// out\n        /* \"#utility.yul\":3039:3164   */\n    tag_56:\n        /* \"#utility.yul\":3079:3083   */\n      0x00\n        /* \"#utility.yul\":3107:3108   */\n      dup3\n        /* \"#utility.yul\":3104:3105   */\n      dup3\n        /* \"#utility.yul\":3101:3109   */\n      lt\n        /* \"#utility.yul\":3098:3132   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3112:3130   */\n      tag_93\n      tag_72\n      jump\t// in\n    tag_93:\n      pop\n        /* \"#utility.yul\":3149:3158   */\n      sub\n      swap1\n        /* \"#utility.yul\":3039:3164   */\n      jump\t// out\n        /* \"#utility.yul\":3169:3766   */\n    tag_66:\n        /* \"#utility.yul\":3281:3285   */\n      0x00\n        /* \"#utility.yul\":3310:3312   */\n      0x20\n        /* \"#utility.yul\":3339:3341   */\n      dup1\n        /* \"#utility.yul\":3328:3337   */\n      dup4\n        /* \"#utility.yul\":3321:3342   */\n      mstore\n        /* \"#utility.yul\":3371:3377   */\n      dup4\n        /* \"#utility.yul\":3365:3378   */\n      mload\n        /* \"#utility.yul\":3414:3420   */\n      dup1\n        /* \"#utility.yul\":3409:3411   */\n      dup3\n        /* \"#utility.yul\":3398:3407   */\n      dup6\n        /* \"#utility.yul\":3394:3412   */\n      add\n        /* \"#utility.yul\":3387:3421   */\n      mstore\n        /* \"#utility.yul\":3439:3440   */\n      0x00\n        /* \"#utility.yul\":3449:3589   */\n    tag_95:\n        /* \"#utility.yul\":3463:3469   */\n      dup2\n        /* \"#utility.yul\":3460:3461   */\n      dup2\n        /* \"#utility.yul\":3457:3470   */\n      lt\n        /* \"#utility.yul\":3449:3589   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3558:3572   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":3554:3577   */\n      dup4\n      add\n        /* \"#utility.yul\":3548:3578   */\n      mload\n        /* \"#utility.yul\":3524:3541   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":3543:3545   */\n      0x40\n        /* \"#utility.yul\":3520:3546   */\n      add\n        /* \"#utility.yul\":3513:3579   */\n      mstore\n        /* \"#utility.yul\":3478:3488   */\n      dup3\n      add\n        /* \"#utility.yul\":3449:3589   */\n      jump(tag_95)\n    tag_97:\n        /* \"#utility.yul\":3607:3613   */\n      dup2\n        /* \"#utility.yul\":3604:3605   */\n      dup2\n        /* \"#utility.yul\":3601:3614   */\n      gt\n        /* \"#utility.yul\":3598:3689   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3677:3678   */\n      0x00\n        /* \"#utility.yul\":3672:3674   */\n      0x40\n        /* \"#utility.yul\":3663:3669   */\n      dup4\n        /* \"#utility.yul\":3652:3661   */\n      dup8\n        /* \"#utility.yul\":3648:3670   */\n      add\n        /* \"#utility.yul\":3644:3675   */\n      add\n        /* \"#utility.yul\":3637:3679   */\n      mstore\n        /* \"#utility.yul\":3598:3689   */\n    tag_98:\n      pop\n        /* \"#utility.yul\":3750:3752   */\n      0x1f\n        /* \"#utility.yul\":3729:3744   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3725:3754   */\n      and\n        /* \"#utility.yul\":3710:3755   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3757:3759   */\n      0x40\n        /* \"#utility.yul\":3706:3760   */\n      add\n      swap4\n        /* \"#utility.yul\":3169:3766   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e1392e2da2cb73a7498badd04364aff628a08c8f934d729e1822c5bd4185e11764736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_334": {
									"entryPoint": null,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600f60005560506001556105f38061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633dc10ad41461003b578063e73e14bf14610051575b600080fd5b6000546040519081526020015b60405180910390f35b61006461005f366004610496565b6100e9565b60405161004891906000610120820190508251825260208301516020830152604083015173ffffffffffffffffffffffffffffffffffffffff81511660408401526020810151606084015260408101516080840152606081015160a0840152608081015160c084015260a081015160e084015260c08101516101008401525092915050565b6100f1610422565b60408051606080820183526000808352602080840182905273ffffffffffffffffffffffffffffffffffffffff8088168352600280835292869020865160e081018852815490921682526001810154928201928352928301548187015260038301549381019390935260048201546080840152600582015460a084015260069091015460c08301529282015290516101d05760405162461bcd60e51b815260206004820152600e60248201527f4e6f207374616b6520666f756e6400000000000000000000000000000000000060448201526064015b60405180910390fd5b604081015160208101516000916101e691610262565b9050600042836040015160c0015111156102235760008061020f856040015160200151856102be565b909250905061021e81836104e2565b925050505b60006102368460400151602001516102fa565b604085018051608001919091528051606001939093525060208084019190915290510151815292915050565b6000826020015160001415610279575060006102b8565b6a52b7d2dcc80cd2e4000000610292846040015161031e565b60a08501516102a190856104fa565b6102ab91906104fa565b6102b5919061052f565b90505b92915050565b60008060006102da6102d2866000546103d0565b6103e86103dc565b905060006102ed6102d2866000546103d0565b9196919550909350505050565b60008060646001548461030d91906104fa565b610317919061052f565b9392505050565b600080821161036f5760405162461bcd60e51b815260206004820152601160248201527f4572726f722074696d657374616d70203000000000000000000000000000000060448201526064016101c7565b6102b861037c8342610551565b6103909069d3c21bcecceda10000006104fa565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d700000008152506103e8565b60006102b582846104fa565b60006102b5828461052f565b600081836104095760405162461bcd60e51b81526004016101c79190610568565b5082848161041957610419610519565b04949350505050565b604051806060016040528060008152602001600081526020016104916040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b905290565b6000602082840312156104a857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461031757600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156104f5576104f56104cc565b500190565b6000816000190483118215151615610514576105146104cc565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261054c57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610563576105636104cc565b500390565b600060208083528351808285015260005b8181101561059557858101830151858201604001528201610579565b818111156105a7576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220e1392e2da2cb73a7498badd04364aff628a08c8f934d729e1822c5bd4185e11764736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF PUSH1 0x0 SSTORE PUSH1 0x50 PUSH1 0x1 SSTORE PUSH2 0x5F3 DUP1 PUSH2 0x2A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DC10AD4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x496 JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP1 DUP4 MSTORE SWAP3 DUP7 SWAP1 KECCAK256 DUP7 MLOAD PUSH1 0xE0 DUP2 ADD DUP9 MSTORE DUP2 SLOAD SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 DUP4 MSTORE SWAP3 DUP4 ADD SLOAD DUP2 DUP8 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE SWAP3 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1E6 SWAP2 PUSH2 0x262 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 TIMESTAMP DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xC0 ADD MLOAD GT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 PUSH2 0x20F DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x2BE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x21E DUP2 DUP4 PUSH2 0x4E2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x236 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 DUP6 ADD DUP1 MLOAD PUSH1 0x80 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH1 0x60 ADD SWAP4 SWAP1 SWAP4 MSTORE POP PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD ADD MLOAD DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x279 JUMPI POP PUSH1 0x0 PUSH2 0x2B8 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x292 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x31E JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD PUSH2 0x2A1 SWAP1 DUP6 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x52F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2DA PUSH2 0x2D2 DUP7 PUSH1 0x0 SLOAD PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2ED PUSH2 0x2D2 DUP7 PUSH1 0x0 SLOAD PUSH2 0x3D0 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x1 SLOAD DUP5 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x52F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x36F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722074696D657374616D702030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x37C DUP4 TIMESTAMP PUSH2 0x551 JUMP JUMPDEST PUSH2 0x390 SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x4FA JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP3 DUP5 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP3 DUP5 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x568 JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x419 JUMPI PUSH2 0x419 PUSH2 0x519 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x491 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4F5 JUMPI PUSH2 0x4F5 PUSH2 0x4CC JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x514 JUMPI PUSH2 0x514 PUSH2 0x4CC JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x54C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0x4CC JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x595 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x579 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 CODECOPY 0x2E 0x2D LOG2 0xCB PUSH20 0xA7498BADD04364AFF628A08C8F934D729E1822C5 0xBD COINBASE DUP6 0xE1 OR PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "128:8441:1:-:0;;;435:148;;;;;;;;;-1:-1:-1;545:2:1;523:19;:24;573:2;558:12;:17;128:8441;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculateAirdrop_856": {
									"entryPoint": 762,
									"id": 856,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculatePenalty_604": {
									"entryPoint": 702,
									"id": 604,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@calculateStakeReward_564": {
									"entryPoint": 610,
									"id": 564,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateStakingDuration_532": {
									"entryPoint": 798,
									"id": 532,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 988,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_285": {
									"entryPoint": 1000,
									"id": 285,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hasStake_836": {
									"entryPoint": 233,
									"id": 836,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 976,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@penaltyFee_504": {
									"entryPoint": null,
									"id": 504,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$365_memory_ptr__to_t_struct$_StakingSummary_$365_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3768:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:239:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:2"
															},
															"nodeType": "YulIf",
															"src": "276:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "337:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "363:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "350:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "341:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "459:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "468:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "461:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "461:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "461:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "395:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "406:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "413:42:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "402:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "402:54:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "392:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "392:65:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "385:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "385:73:2"
															},
															"nodeType": "YulIf",
															"src": "382:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "484:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "494:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:2",
														"type": ""
													}
												],
												"src": "196:309:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "673:709:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "683:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "695:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "706:3:2",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "691:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "691:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "683:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "726:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "737:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "719:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "771:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "782:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "767:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "767:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "799:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "807:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "789:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "760:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "760:54:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "823:44:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "853:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "861:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:17:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "843:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:24:2"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "827:12:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "887:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "898:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "883:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "883:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "915:12:2"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "909:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "909:19:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "930:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "905:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:68:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:98:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:98:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "994:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1005:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "990:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "990:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1020:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1034:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1016:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1016:23:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1010:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1010:30:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "983:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "983:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1061:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1072:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1057:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1088:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1102:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1084:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1084:23:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1078:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1078:30:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1129:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1140:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1156:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1170:2:2",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1152:21:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1146:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:28:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1118:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1118:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1118:57:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1195:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1206:3:2",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1191:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1222:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1236:3:2",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1218:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1212:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1212:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1184:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1184:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1262:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1273:3:2",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1258:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1258:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1289:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1303:3:2",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1285:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1285:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1279:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1279:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1340:3:2",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1325:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1325:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1356:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1370:3:2",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1352:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1352:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1346:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1318:58:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$365_memory_ptr__to_t_struct$_StakingSummary_$365_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "642:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "653:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "664:4:2",
														"type": ""
													}
												],
												"src": "510:872:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1561:164:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1578:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1589:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1571:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1571:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1623:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1628:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1601:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1651:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1662:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1647:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1647:18:2"
																	},
																	{
																		"hexValue": "4e6f207374616b6520666f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1667:16:2",
																		"type": "",
																		"value": "No stake found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1640:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1640:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1640:44:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1693:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1705:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1716:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1701:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1701:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1693:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1538:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1552:4:2",
														"type": ""
													}
												],
												"src": "1387:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1762:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1779:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1782:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1772:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1772:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1876:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1879:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1869:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1900:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1903:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1893:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1893:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1893:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1730:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1967:80:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1994:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1996:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1996:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1996:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1983:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1990:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1986:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1986:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1980:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:13:2"
															},
															"nodeType": "YulIf",
															"src": "1977:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2025:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2036:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2039:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2025:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1950:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1953:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1959:3:2",
														"type": ""
													}
												],
												"src": "1919:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2104:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2163:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2165:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2165:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2165:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2135:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2128:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2128:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2121:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2121:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2143:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2154:1:2",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2150:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2150:6:2"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2158:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2146:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2146:14:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2140:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2140:21:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2117:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2117:45:2"
															},
															"nodeType": "YulIf",
															"src": "2114:71:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2194:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2209:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2212:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2205:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2194:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2083:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2086:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2092:7:2",
														"type": ""
													}
												],
												"src": "2052:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2257:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2277:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2267:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2267:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2267:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2371:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2374:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2364:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2364:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2364:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2395:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2398:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2388:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2225:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:228:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2491:168:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2512:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2515:77:2",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2505:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2505:88:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2505:88:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2613:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2616:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2606:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2606:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2606:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2641:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2644:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2634:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2634:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2634:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2480:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:9:2"
															},
															"nodeType": "YulIf",
															"src": "2470:189:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2668:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2677:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2680:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2673:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2673:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2668:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2445:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2448:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2454:1:2",
														"type": ""
													}
												],
												"src": "2414:274:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2867:167:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2884:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2895:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2877:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2877:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2877:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2918:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2929:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2914:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2914:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:2:2",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2907:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2907:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2957:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2968:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2953:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2953:18:2"
																	},
																	{
																		"hexValue": "4572726f722074696d657374616d702030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2973:19:2",
																		"type": "",
																		"value": "Error timestamp 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2946:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2946:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2946:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3002:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3014:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3025:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3010:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3010:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3002:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2844:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2858:4:2",
														"type": ""
													}
												],
												"src": "2693:341:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3088:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3110:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3112:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3112:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3112:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3104:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3107:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3101:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:8:2"
															},
															"nodeType": "YulIf",
															"src": "3098:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3141:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3153:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3156:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3149:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3141:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3070:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3073:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3079:4:2",
														"type": ""
													}
												],
												"src": "3039:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3290:476:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3300:12:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3310:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3304:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3328:9:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3339:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3321:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3321:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3321:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3351:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3371:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3365:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3365:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3355:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3409:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:18:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3414:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3387:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3387:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3430:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3439:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3434:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3499:90:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3528:9:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3539:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3524:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3524:17:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3543:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3520:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3520:26:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "3562:6:2"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3570:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3558:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3558:14:2"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3574:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3554:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3554:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3548:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3548:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3513:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3513:66:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3513:66:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3460:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3463:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3457:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3457:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3471:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3473:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3482:1:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3485:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3478:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3478:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3473:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3453:3:2",
																"statements": []
															},
															"src": "3449:140:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3623:66:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3652:9:2"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "3663:6:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3648:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3648:22:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3672:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3644:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3644:31:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3677:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3637:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3637:42:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3637:42:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3604:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3607:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3601:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3601:13:2"
															},
															"nodeType": "YulIf",
															"src": "3598:91:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3698:62:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3714:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3733:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3741:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3729:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3729:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3750:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3746:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3746:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3725:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3725:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3710:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3710:45:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3757:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3706:54:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3698:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3259:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3270:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3281:4:2",
														"type": ""
													}
												],
												"src": "3169:597:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_StakingSummary_$365_memory_ptr__to_t_struct$_StakingSummary_$365_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        let memberValue0 := mload(add(value0, 0x40))\n        mstore(add(headStart, 0x40), and(mload(memberValue0), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), mload(add(memberValue0, 0x20)))\n        mstore(add(headStart, 128), mload(add(memberValue0, 0x40)))\n        mstore(add(headStart, 160), mload(add(memberValue0, 96)))\n        mstore(add(headStart, 192), mload(add(memberValue0, 128)))\n        mstore(add(headStart, 224), mload(add(memberValue0, 160)))\n        mstore(add(headStart, 256), mload(add(memberValue0, 192)))\n    }\n    function abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No stake found\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Error timestamp 0\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80633dc10ad41461003b578063e73e14bf14610051575b600080fd5b6000546040519081526020015b60405180910390f35b61006461005f366004610496565b6100e9565b60405161004891906000610120820190508251825260208301516020830152604083015173ffffffffffffffffffffffffffffffffffffffff81511660408401526020810151606084015260408101516080840152606081015160a0840152608081015160c084015260a081015160e084015260c08101516101008401525092915050565b6100f1610422565b60408051606080820183526000808352602080840182905273ffffffffffffffffffffffffffffffffffffffff8088168352600280835292869020865160e081018852815490921682526001810154928201928352928301548187015260038301549381019390935260048201546080840152600582015460a084015260069091015460c08301529282015290516101d05760405162461bcd60e51b815260206004820152600e60248201527f4e6f207374616b6520666f756e6400000000000000000000000000000000000060448201526064015b60405180910390fd5b604081015160208101516000916101e691610262565b9050600042836040015160c0015111156102235760008061020f856040015160200151856102be565b909250905061021e81836104e2565b925050505b60006102368460400151602001516102fa565b604085018051608001919091528051606001939093525060208084019190915290510151815292915050565b6000826020015160001415610279575060006102b8565b6a52b7d2dcc80cd2e4000000610292846040015161031e565b60a08501516102a190856104fa565b6102ab91906104fa565b6102b5919061052f565b90505b92915050565b60008060006102da6102d2866000546103d0565b6103e86103dc565b905060006102ed6102d2866000546103d0565b9196919550909350505050565b60008060646001548461030d91906104fa565b610317919061052f565b9392505050565b600080821161036f5760405162461bcd60e51b815260206004820152601160248201527f4572726f722074696d657374616d70203000000000000000000000000000000060448201526064016101c7565b6102b861037c8342610551565b6103909069d3c21bcecceda10000006104fa565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d700000008152506103e8565b60006102b582846104fa565b60006102b5828461052f565b600081836104095760405162461bcd60e51b81526004016101c79190610568565b5082848161041957610419610519565b04949350505050565b604051806060016040528060008152602001600081526020016104916040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b905290565b6000602082840312156104a857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461031757600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156104f5576104f56104cc565b500190565b6000816000190483118215151615610514576105146104cc565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261054c57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610563576105636104cc565b500390565b600060208083528351808285015260005b8181101561059557858101830151858201604001528201610579565b818111156105a7576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220e1392e2da2cb73a7498badd04364aff628a08c8f934d729e1822c5bd4185e11764736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DC10AD4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x496 JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP1 DUP4 MSTORE SWAP3 DUP7 SWAP1 KECCAK256 DUP7 MLOAD PUSH1 0xE0 DUP2 ADD DUP9 MSTORE DUP2 SLOAD SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 DUP4 MSTORE SWAP3 DUP4 ADD SLOAD DUP2 DUP8 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE SWAP3 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1E6 SWAP2 PUSH2 0x262 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 TIMESTAMP DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xC0 ADD MLOAD GT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 PUSH2 0x20F DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x2BE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x21E DUP2 DUP4 PUSH2 0x4E2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x236 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 DUP6 ADD DUP1 MLOAD PUSH1 0x80 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH1 0x60 ADD SWAP4 SWAP1 SWAP4 MSTORE POP PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD ADD MLOAD DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x279 JUMPI POP PUSH1 0x0 PUSH2 0x2B8 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x292 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x31E JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD PUSH2 0x2A1 SWAP1 DUP6 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x52F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2DA PUSH2 0x2D2 DUP7 PUSH1 0x0 SLOAD PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2ED PUSH2 0x2D2 DUP7 PUSH1 0x0 SLOAD PUSH2 0x3D0 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x1 SLOAD DUP5 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x52F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x36F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722074696D657374616D702030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x37C DUP4 TIMESTAMP PUSH2 0x551 JUMP JUMPDEST PUSH2 0x390 SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x4FA JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP3 DUP5 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP3 DUP5 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x568 JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x419 JUMPI PUSH2 0x419 PUSH2 0x519 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x491 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4F5 JUMPI PUSH2 0x4F5 PUSH2 0x4CC JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x514 JUMPI PUSH2 0x514 PUSH2 0x4CC JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x54C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0x4CC JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x595 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x579 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 CODECOPY 0x2E 0x2D LOG2 0xCB PUSH20 0xA7498BADD04364AFF628A08C8F934D729E1822C5 0xBD COINBASE DUP6 0xE1 OR PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "128:8441:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3750:97;3793:7;3820:19;3750:97;;160:25:2;;;148:2;133:18;3750:97:1;;;;;;;;6764:1072;;;;;;:::i;:::-;;:::i;:::-;;;;;;664:4:2;706:3;695:9;691:19;683:27;;743:6;737:13;726:9;719:32;807:4;799:6;795:17;789:24;782:4;771:9;767:20;760:54;861:4;853:6;849:17;843:24;930:42;915:12;909:19;905:68;898:4;887:9;883:20;876:98;1034:4;1020:12;1016:23;1010:30;1005:2;994:9;990:18;983:58;1102:4;1088:12;1084:23;1078:30;1072:3;1061:9;1057:19;1050:59;1170:2;1156:12;1152:21;1146:28;1140:3;1129:9;1125:19;1118:57;1236:3;1222:12;1218:22;1212:29;1206:3;1195:9;1191:19;1184:58;1303:3;1289:12;1285:22;1279:29;1273:3;1262:9;1258:19;1251:58;1370:3;1356:12;1352:22;1346:29;1340:3;1329:9;1325:19;1318:58;;510:872;;;;;6764:1072:1;6847:21;;:::i;:::-;6918:99;;;;;;;;;6886:29;6918:99;;;;;;;;;;6979:21;;;;;;:12;:21;;;;;;;6918:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7036:20;;7028:52;;;;-1:-1:-1;;;7028:52:1;;1589:2:2;7028:52:1;;;1571:21:2;1628:2;1608:18;;;1601:30;1667:16;1647:18;;;1640:44;1701:18;;7028:52:1;;;;;;;;;7154:13;;;;7182:20;;;;7093:23;;7119:94;;:20;:94::i;:::-;7093:120;;7224:15;7284;7256:7;:13;;;:25;;;:43;7252:287;;;7317:22;7341;7367:104;7402:7;:13;;;:20;;;7441:15;7367:16;:104::i;:::-;7316:155;;-1:-1:-1;7316:155:1;-1:-1:-1;7496:31:1;7316:155;;7496:31;:::i;:::-;7486:41;;7301:238;;7252:287;7551:15;7569:38;7586:7;:13;;;:20;;;7569:16;:38::i;:::-;7618:13;;;;;:31;;:41;;;;7670:13;;:23;;:41;;;;-1:-1:-1;;7722:15:1;;;:25;;;;7781:13;;:20;;7758:43;;7618:7;6764:1072;-1:-1:-1;;6764:1072:1:o;4223:368::-;4345:7;4374:10;:17;;;4395:1;4374:22;4370:63;;;-1:-1:-1;4420:1:1;4413:8;;4370:63;4579:4;4533:42;4558:10;:16;;;4533:24;:42::i;:::-;4493:20;;;;4466:47;;:7;:47;:::i;:::-;:109;;;;:::i;:::-;4465:118;;;;:::i;:::-;4445:138;;4223:368;;;;;:::o;4599:459::-;4707:7;4716;4741:22;4766:98;4793:41;4806:6;4814:19;;4793:12;:41::i;:::-;4849:4;4766:12;:98::i;:::-;4741:123;;4875:22;4900:98;4927:41;4940:6;4948:19;;4927:12;:41::i;4900:98::-;5019:14;;;;-1:-1:-1;4599:459:1;;-1:-1:-1;;;;4599:459:1:o;7844:177::-;7914:7;7934:15;7984:3;7968:12;;7954:11;:26;;;;:::i;:::-;7953:34;;;;:::i;:::-;7934:54;7844:177;-1:-1:-1;;;7844:177:1:o;3855:360::-;3955:7;3997:1;3988:6;:10;3980:40;;;;-1:-1:-1;;;3980:40:1;;2895:2:2;3980:40:1;;;2877:21:2;2934:2;2914:18;;;2907:30;2973:19;2953:18;;;2946:47;3010:18;;3980:40:1;2693:341:2;3980:40:1;4051:156;4083:24;4101:6;4083:15;:24;:::i;:::-;4082:33;;4111:4;4082:33;:::i;:::-;4134:8;4051:156;;;;;;;;;;;;;;;;;:12;:156::i;3451:96:0:-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;5660:230::-;5776:7;5834:12;5827:5;5819:28;;;;-1:-1:-1;;;5819:28:0;;;;;;;;:::i;:::-;;5872:1;5868;:5;;;;;:::i;:::-;;;5660:230;-1:-1:-1;;;;5660:230:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:309:2:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;363:9;350:23;413:42;406:5;402:54;395:5;392:65;382:93;;471:1;468;461:12;1730:184;-1:-1:-1;;;1779:1:2;1772:88;1879:4;1876:1;1869:15;1903:4;1900:1;1893:15;1919:128;1959:3;1990:1;1986:6;1983:1;1980:13;1977:39;;;1996:18;;:::i;:::-;-1:-1:-1;2032:9:2;;1919:128::o;2052:168::-;2092:7;2158:1;2154;2150:6;2146:14;2143:1;2140:21;2135:1;2128:9;2121:17;2117:45;2114:71;;;2165:18;;:::i;:::-;-1:-1:-1;2205:9:2;;2052:168::o;2225:184::-;-1:-1:-1;;;2274:1:2;2267:88;2374:4;2371:1;2364:15;2398:4;2395:1;2388:15;2414:274;2454:1;2480;2470:189;;-1:-1:-1;;;2512:1:2;2505:88;2616:4;2613:1;2606:15;2644:4;2641:1;2634:15;2470:189;-1:-1:-1;2673:9:2;;2414:274::o;3039:125::-;3079:4;3107:1;3104;3101:8;3098:34;;;3112:18;;:::i;:::-;-1:-1:-1;3149:9:2;;3039:125::o;3169:597::-;3281:4;3310:2;3339;3328:9;3321:21;3371:6;3365:13;3414:6;3409:2;3398:9;3394:18;3387:34;3439:1;3449:140;3463:6;3460:1;3457:13;3449:140;;;3558:14;;;3554:23;;3548:30;3524:17;;;3543:2;3520:26;3513:66;3478:10;;3449:140;;;3607:6;3604:1;3601:13;3598:91;;;3677:1;3672:2;3663:6;3652:9;3648:22;3644:31;3637:42;3598:91;-1:-1:-1;3750:2:2;3729:15;-1:-1:-1;;3725:29:2;3710:45;;;;3757:2;3706:54;;3169:597;-1:-1:-1;;;3169:597:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "304600",
								"executionCost": "44555",
								"totalCost": "349155"
							},
							"external": {
								"hasStake(address)": "infinite",
								"penaltyFee()": "2247"
							},
							"internal": {
								"_changeAirdropPercentage(uint256)": "infinite",
								"_changePenaltyFee(uint256)": "infinite",
								"_claimAirdrop(address)": "infinite",
								"_stake(address,uint256,uint256,uint256)": "infinite",
								"_withdrawStake(address,uint256)": "infinite",
								"calculateAirdrop(uint256)": "2288",
								"calculatePenalty(uint256,uint256)": "infinite",
								"calculateStakeReward(struct Stakable.Stake memory,uint256)": "infinite",
								"calculateStakingDuration(uint256)": "infinite",
								"calculateStakingWithPenalty(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 8569,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 8569,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 8569,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 435,
									"end": 583,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 583,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 435,
									"end": 583,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 545,
									"end": 547,
									"name": "PUSH",
									"source": 1,
									"value": "F"
								},
								{
									"begin": 523,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 547,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 558,
									"end": 570,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 558,
									"end": 575,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 8569,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 8569,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 8569,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 8569,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 8569,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 128,
									"end": 8569,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 8569,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1392e2da2cb73a7498badd04364aff628a08c8f934d729e1822c5bd4185e11764736f6c634300080b0033",
									".code": [
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "3DC10AD4"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "E73E14BF"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 8569,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3847,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 664,
											"end": 668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 695,
											"end": 704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 691,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 683,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 683,
											"end": 710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 743,
											"end": 749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 737,
											"end": 750,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 726,
											"end": 735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 719,
											"end": 751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 811,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 795,
											"end": 812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 789,
											"end": 813,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 782,
											"end": 786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 760,
											"end": 814,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 861,
											"end": 865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 859,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 849,
											"end": 866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 843,
											"end": 867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 930,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 915,
											"end": 927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 909,
											"end": 928,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 905,
											"end": 973,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 898,
											"end": 902,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 896,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 883,
											"end": 903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 876,
											"end": 974,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1034,
											"end": 1038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1040,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 994,
											"end": 1003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1008,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1041,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1173,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1143,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1144,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1118,
											"end": 1175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1195,
											"end": 1204,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1242,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1289,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1262,
											"end": 1271,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1373,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1356,
											"end": 1368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1375,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 510,
											"end": 1382,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 510,
											"end": 1382,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 510,
											"end": 1382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 510,
											"end": 1382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 510,
											"end": 1382,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6847,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6847,
											"end": 6868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6847,
											"end": 6868,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6847,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 6991,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7056,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1591,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1592,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1630,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F207374616B6520666F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1640,
											"end": 1684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1719,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1701,
											"end": 1719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7028,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7154,
											"end": 7167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7154,
											"end": 7167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7154,
											"end": 7167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7154,
											"end": 7167,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7093,
											"end": 7116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7119,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7119,
											"end": 7213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7119,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7119,
											"end": 7213,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7119,
											"end": 7213,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7119,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7093,
											"end": 7213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7093,
											"end": 7213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7299,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7269,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7256,
											"end": 7269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7269,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7281,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7256,
											"end": 7281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7299,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7252,
											"end": 7539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7402,
											"end": 7415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7402,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7456,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7367,
											"end": 7471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7367,
											"end": 7471,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7367,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7316,
											"end": 7471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7496,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 7316,
											"end": 7471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7496,
											"end": 7527,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7496,
											"end": 7527,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 7496,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7539,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7252,
											"end": 7539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7569,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7586,
											"end": 7593,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7599,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7586,
											"end": 7599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7599,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7586,
											"end": 7606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 7569,
											"end": 7607,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7569,
											"end": 7607,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7569,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7618,
											"end": 7631,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7649,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7618,
											"end": 7649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7683,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7670,
											"end": 7693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7711,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7711,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7794,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7801,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7801,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7625,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6764,
											"end": 7836,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4223,
											"end": 4591,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4223,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4396,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4433,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4370,
											"end": 4433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4420,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4413,
											"end": 4421,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4433,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4370,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4583,
											"name": "PUSH",
											"source": 1,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 4533,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4574,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4574,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4533,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4533,
											"end": 4575,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4533,
											"end": 4575,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4533,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4513,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4493,
											"end": 4513,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4513,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4466,
											"end": 4513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4466,
											"end": 4513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4466,
											"end": 4513,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4466,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4466,
											"end": 4575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4466,
											"end": 4575,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4466,
											"end": 4575,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4466,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4465,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4465,
											"end": 4583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4465,
											"end": 4583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4465,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4465,
											"end": 4583,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4465,
											"end": 4583,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4465,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4591,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4223,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4591,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4599,
											"end": 5058,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4599,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4793,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4833,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4793,
											"end": 4834,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4793,
											"end": 4834,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4793,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 4766,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4766,
											"end": 4864,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4864,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4766,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4875,
											"end": 4897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4927,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4940,
											"end": 4946,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4927,
											"end": 4968,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4998,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4900,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5033,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5033,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4599,
											"end": 5058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 5058,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4599,
											"end": 5058,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7844,
											"end": 8021,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 7844,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7914,
											"end": 7921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7934,
											"end": 7949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 7987,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7968,
											"end": 7980,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7968,
											"end": 7980,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 7965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 7954,
											"end": 7980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 7980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 7954,
											"end": 7980,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7954,
											"end": 7980,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 7954,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 7988,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 8021,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7844,
											"end": 8021,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3855,
											"end": 4215,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3855,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 3998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 3998,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2936,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 2992,
											"name": "PUSH",
											"source": 2,
											"value": "4572726F722074696D657374616D702030000000000000000000000000000000"
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 3034,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3980,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4101,
											"end": 4107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4082,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 4082,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4082,
											"end": 4115,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4082,
											"end": 4115,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4082,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4142,
											"name": "PUSH",
											"source": 1,
											"value": "1E13380"
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F722063616E6E6F74206469766964652074696D657374616D70000000"
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4051,
											"end": 4207,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 505,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 196,
											"end": 505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 363,
											"end": 372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 413,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 402,
											"end": 456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 395,
											"end": 400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 457,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 382,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 382,
											"end": 475,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 471,
											"end": 472,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 461,
											"end": 473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1914,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1730,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1860,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1883,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 1884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1908,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2047,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1919,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 1984,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1993,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2016,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1977,
											"end": 2016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2047,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2052,
											"end": 2220,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2052,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2160,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2161,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2128,
											"end": 2137,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2138,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2162,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2185,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2114,
											"end": 2185,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2205,
											"end": 2214,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2220,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2225,
											"end": 2409,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2225,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2355,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2371,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2379,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2402,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2403,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2688,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2414,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2481,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2470,
											"end": 2659,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2512,
											"end": 2513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2648,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2641,
											"end": 2642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2659,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2470,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2688,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3039,
											"end": 3164,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3039,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3109,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3132,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3098,
											"end": 3132,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3112,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3112,
											"end": 3130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3112,
											"end": 3130,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3112,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3164,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3169,
											"end": 3766,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3169,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3337,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3321,
											"end": 3342,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3411,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3398,
											"end": 3407,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3589,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3449,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3589,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3449,
											"end": 3589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3524,
											"end": 3541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3524,
											"end": 3541,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3524,
											"end": 3541,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3545,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3449,
											"end": 3589,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3589,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3449,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3604,
											"end": 3605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3614,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3689,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3598,
											"end": 3689,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3674,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3669,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3661,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3670,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3644,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3689,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3598,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3729,
											"end": 3744,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3725,
											"end": 3754,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3755,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3755,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3706,
											"end": 3760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3706,
											"end": 3760,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3766,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3766,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"hasStake(address)": "e73e14bf",
							"penaltyFee()": "3dc10ad4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable_airdrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakable.sol\":\"Stakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Stakable.sol\":{\"keccak256\":\"0x76ed95a8491431df992c76f5ac7a7e81affdc685bdba66bd8e052ef1ea0a4746\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b86fa6d5d8c385d4201bf09b7fefe0d60c2674ac64c9f47fbcda9a468af8eaaa\",\"dweb:/ipfs/QmUnwopdDqiYkJHmMWQUDcE9gADYrn2pQSb86y5RfrsETG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 320,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_stakingPenaltyRate",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 322,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_airdropRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 371,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakeholders",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Stakeholder)357_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stakeholder)357_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Stakeholder)",
								"numberOfBytes": "32",
								"value": "t_struct(Stakeholder)357_storage"
							},
							"t_struct(Stake)349_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stake",
								"members": [
									{
										"astId": 336,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 338,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 340,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "since",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 342,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 344,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable_airdrop",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 346,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "rewardAPY",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 348,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "releaseTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(Stakeholder)357_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stakeholder",
								"members": [
									{
										"astId": 352,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "stake",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Stake)349_storage"
									},
									{
										"astId": 354,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "user",
										"offset": 0,
										"slot": "7",
										"type": "t_address"
									},
									{
										"astId": 356,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "latestClaimDrop",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "288"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Stakable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakable.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"Stakable": [
							917
						]
					},
					"id": 918,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 312,
							"src": "67:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stakable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917
							],
							"name": "Stakable",
							"nameLocation": "137:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "159:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "153:27:1",
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "172:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "186:162:1",
										"text": " @notice Constructor since this contract is not ment to be used without inheritance\n push once to stakeholders for it to work proplerly"
									},
									"id": 320,
									"mutability": "mutable",
									"name": "_stakingPenaltyRate",
									"nameLocation": "372:19:1",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "356:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 319,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "356:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 322,
									"mutability": "mutable",
									"name": "_airdropRate",
									"nameLocation": "414:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "398:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 321,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "398:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "449:134:1",
										"statements": [
											{
												"expression": {
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 325,
														"name": "_stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "523:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "545:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "523:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "523:24:1"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "_airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "558:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3830",
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "573:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"src": "558:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "558:17:1"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:2:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:0:1"
									},
									"scope": 917,
									"src": "435:148:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stake",
									"id": 349,
									"members": [
										{
											"constant": false,
											"id": 336,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "856:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 349,
											"src": "848:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 335,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "848:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 338,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "879:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 349,
											"src": "871:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 337,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "871:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "904:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 349,
											"src": "896:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "896:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 342,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "1028:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 349,
											"src": "1020:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 341,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1020:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 344,
											"mutability": "mutable",
											"name": "claimable_airdrop",
											"nameLocation": "1056:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 349,
											"src": "1048:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 343,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1048:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 346,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "1092:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 349,
											"src": "1084:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 345,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1084:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 348,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "1120:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 349,
											"src": "1112:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 347,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1112:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "831:5:1",
									"nodeType": "StructDefinition",
									"scope": 917,
									"src": "824:315:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stakeholder",
									"id": 357,
									"members": [
										{
											"constant": false,
											"id": 352,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1262:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 357,
											"src": "1256:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 351,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 350,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 349,
													"src": "1256:5:1"
												},
												"referencedDeclaration": 349,
												"src": "1256:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1286:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 357,
											"src": "1278:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1278:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 356,
											"mutability": "mutable",
											"name": "latestClaimDrop",
											"nameLocation": "1309:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 357,
											"src": "1301:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 355,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1301:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stakeholder",
									"nameLocation": "1233:11:1",
									"nodeType": "StructDefinition",
									"scope": 917,
									"src": "1226:106:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.StakingSummary",
									"id": 365,
									"members": [
										{
											"constant": false,
											"id": 359,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "1516:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 365,
											"src": "1508:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 358,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1508:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 361,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "1547:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 365,
											"src": "1539:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 360,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1539:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 364,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1571:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 365,
											"src": "1565:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 363,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 362,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 349,
													"src": "1565:5:1"
												},
												"referencedDeclaration": 349,
												"src": "1565:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "1482:14:1",
									"nodeType": "StructDefinition",
									"scope": 917,
									"src": "1475:109:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1592:114:1",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 371,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "1753:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "1712:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$357_storage_$",
										"typeString": "mapping(address => struct Stakable.Stakeholder)"
									},
									"typeName": {
										"id": 370,
										"keyType": {
											"id": 367,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1720:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1712:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$357_storage_$",
											"typeString": "mapping(address => struct Stakable.Stakeholder)"
										},
										"valueType": {
											"id": 369,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 368,
												"name": "Stakeholder",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1731:11:1"
											},
											"referencedDeclaration": 357,
											"src": "1731:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stakeholder_$357_storage_ptr",
												"typeString": "struct Stakable.Stakeholder"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1774:126:1",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 382,
									"name": "Staked",
									"nameLocation": "1912:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1945:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1929:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1968:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1960:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1993:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1985:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2021:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2013:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1918:121:1"
									},
									"src": "1906:134:1"
								},
								{
									"anonymous": false,
									"id": 386,
									"name": "PenaltyChanged",
									"nameLocation": "2054:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2077:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "2069:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:16:1"
									},
									"src": "2048:37:1"
								},
								{
									"anonymous": false,
									"id": 390,
									"name": "AirdropChanged",
									"nameLocation": "2097:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2120:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2112:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2112:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:16:1"
									},
									"src": "2091:37:1"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2489:802:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "2563:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2573:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2563:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65206e6f7468696e67",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2576:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															},
															"value": "Cannot stake nothing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2555:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2555:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "2555:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 410,
																			"name": "stakeholders",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 371,
																			"src": "2618:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$357_storage_$",
																				"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																			}
																		},
																		"id": 412,
																		"indexExpression": {
																			"id": 411,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2631:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2618:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stakeholder_$357_storage",
																			"typeString": "struct Stakable.Stakeholder storage ref"
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 352,
																	"src": "2618:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$349_storage",
																		"typeString": "struct Stakable.Stake storage ref"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "2618:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2654:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2618:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "557365722069732061207374616b6572",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2657:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108",
																"typeString": "literal_string \"User is a staker\""
															},
															"value": "User is a staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108",
																"typeString": "literal_string \"User is a staker\""
															}
														],
														"id": 409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2610:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2610:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "2610:66:1"
											},
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "2785:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "2777:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2777:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 424,
												"initialValue": {
													"expression": {
														"id": 422,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2797:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2797:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2777:35:1"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 425,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "2944:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$357_storage_$",
																	"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																}
															},
															"id": 427,
															"indexExpression": {
																"id": 426,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2957:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2944:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$357_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 352,
														"src": "2944:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$349_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 430,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2992:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 431,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "3012:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 432,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "3034:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3058:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3074:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 435,
																"name": "_rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "3090:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 436,
																			"name": "_stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3117:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 437,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "3132:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3117:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 439,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3116:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 429,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "2972:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$349_storage_ptr_$",
																"typeString": "type(struct Stakable.Stake storage pointer)"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2972:181:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
															"typeString": "struct Stakable.Stake memory"
														}
													},
													"src": "2944:209:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$349_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2944:209:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 444,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "3229:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "3236:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 446,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3245:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 447,
																		"name": "_stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3257:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 448,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "3272:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 450,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3256:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 443,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "3222:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3222:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "EmitStatement",
												"src": "3217:66:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "2136:204:1",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "2355:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2380:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2372:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2372:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2404:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2396:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "2430:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2422:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "2461:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2453:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2361:118:1"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:1"
									},
									"scope": 917,
									"src": "2346:945:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "3352:160:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "amount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "3371:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3382:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "3371:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50656e616c7479206665652063616e6e6f742065786365656420332070657263656e742e",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3386:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9",
																"typeString": "literal_string \"Penalty fee cannot exceed 3 percent.\""
															},
															"value": "Penalty fee cannot exceed 3 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9",
																"typeString": "literal_string \"Penalty fee cannot exceed 3 percent.\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3363:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3363:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "3363:62:1"
											},
											{
												"expression": {
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 466,
														"name": "_stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "3436:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 467,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "3458:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3436:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "3436:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 471,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "3496:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 470,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "3481:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3481:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "EmitStatement",
												"src": "3476:28:1"
											}
										]
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changePenaltyFee",
									"nameLocation": "3308:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "3334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3325:17:1"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3352:0:1"
									},
									"scope": 917,
									"src": "3299:213:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "3580:162:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "amount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "3599:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323030",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3610:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																},
																"value": "200"
															},
															"src": "3599:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f702050657263656e746167652063616e6e6f74206578636565642032302070657263656e742e",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3615:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc",
																"typeString": "literal_string \"Airdrop Percentage cannot exceed 20 percent.\""
															},
															"value": "Airdrop Percentage cannot exceed 20 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc",
																"typeString": "literal_string \"Airdrop Percentage cannot exceed 20 percent.\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3591:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3591:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "3591:71:1"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 487,
														"name": "_airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "3673:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 488,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "3688:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3673:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "3673:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 492,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 491,
														"name": "AirdropChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "3711:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "EmitStatement",
												"src": "3706:28:1"
											}
										]
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAirdropPercentage",
									"nameLocation": "3529:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "3562:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3554:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3554:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3553:17:1"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3580:0:1"
									},
									"scope": 917,
									"src": "3520:222:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "3802:45:1",
										"statements": [
											{
												"expression": {
													"id": 501,
													"name": "_stakingPenaltyRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 320,
													"src": "3820:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 500,
												"id": 502,
												"nodeType": "Return",
												"src": "3813:26:1"
											}
										]
									},
									"functionSelector": "3dc10ad4",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "penaltyFee",
									"nameLocation": "3759:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3769:2:1"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "3793:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3793:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3792:9:1"
									},
									"scope": 917,
									"src": "3750:97:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3969:246:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 512,
																"name": "since_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "3988:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3997:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3988:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722074696d657374616d702030",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4000:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																"typeString": "literal_string \"Error timestamp 0\""
															},
															"value": "Error timestamp 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																"typeString": "literal_string \"Error timestamp 0\""
															}
														],
														"id": 511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3980:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3980:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "3980:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 520,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4083:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4083:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 522,
																			"name": "since_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 506,
																			"src": "4101:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4083:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4082:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653234",
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4111:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"value": "1e24"
															},
															"src": "4082:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "333635",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4134:8:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "4572726f722063616e6e6f74206469766964652074696d657374616d70",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4161:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															},
															"value": "Error cannot divide timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															}
														],
														"expression": {
															"id": 518,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4051:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 285,
														"src": "4051:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4051:156:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 510,
												"id": 530,
												"nodeType": "Return",
												"src": "4031:176:1"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingDuration",
									"nameLocation": "3864:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "since_",
												"nameLocation": "3897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3889:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3888:16:1"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3955:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3954:9:1"
									},
									"scope": 917,
									"src": "3855:360:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "4359:232:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 542,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "4374:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "4374:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4395:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4374:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "4370:63:1",
												"trueBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "4398:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4420:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 541,
															"id": 547,
															"nodeType": "Return",
															"src": "4413:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 550,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "4466:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 551,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 535,
																			"src": "4493:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 346,
																		"src": "4493:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4466:47:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 555,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 535,
																				"src": "4558:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 340,
																			"src": "4558:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 554,
																		"name": "calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "4533:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4533:42:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4466:109:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 559,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4465:111:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4579:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "4465:118:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 562,
												"nodeType": "Return",
												"src": "4445:138:1"
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakeReward",
									"nameLocation": "4232:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "4266:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4253:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
													"typeString": "struct Stakable.Stake"
												},
												"typeName": {
													"id": 534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 533,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 349,
														"src": "4253:5:1"
													},
													"referencedDeclaration": 349,
													"src": "4253:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4286:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4278:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:42:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4345:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4344:9:1"
									},
									"scope": 917,
									"src": "4223:368:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "4730:328:1",
										"statements": [
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "amount_penalty",
														"nameLocation": "4749:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "4741:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 575,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4741:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 581,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "4806:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 582,
																	"name": "_stakingPenaltyRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "4814:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 579,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "4793:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "4793:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4793:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4849:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"id": 577,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4766:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "4766:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4766:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4741:123:1"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "reward_penalty",
														"nameLocation": "4883:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "4875:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 593,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4940:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 594,
																	"name": "_stakingPenaltyRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "4948:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 591,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "4927:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "4927:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4927:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4983:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"id": 589,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4900:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "4900:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4875:123:1"
											},
											{
												"expression": {
													"components": [
														{
															"id": 599,
															"name": "amount_penalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "5019:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 600,
															"name": "reward_penalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5035:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 601,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5018:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 574,
												"id": 602,
												"nodeType": "Return",
												"src": "5011:39:1"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePenalty",
									"nameLocation": "4608:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4633:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4625:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4625:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "4649:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4641:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4624:32:1"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4707:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4716:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4706:18:1"
									},
									"scope": 917,
									"src": "4599:459:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "5208:339:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5223:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5233:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5223:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 623,
												"nodeType": "IfStatement",
												"src": "5219:57:1",
												"trueBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "5236:40:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5259:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5262:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 620,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5258:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 614,
															"id": 621,
															"nodeType": "Return",
															"src": "5251:13:1"
														}
													]
												}
											},
											{
												"assignments": [
													625,
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "amount_penalty",
														"nameLocation": "5297:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "5289:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 624,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "reward_penalty",
														"nameLocation": "5321:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "5313:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5313:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"arguments": [
														{
															"id": 629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "5370:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 630,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5391:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 628,
														"name": "calculatePenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "5339:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5339:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5288:120:1"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 635,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "5454:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 636,
																	"name": "amount_penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "5462:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 633,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "5441:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "5441:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5441:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 640,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "5505:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 641,
																	"name": "reward_penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "5513:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 638,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "5492:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "5492:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5492:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 643,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5426:113:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 614,
												"id": 644,
												"nodeType": "Return",
												"src": "5419:120:1"
											}
										]
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingWithPenalty",
									"nameLocation": "5075:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5111:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5103:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5127:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5119:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5119:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:32:1"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5185:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5194:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5184:18:1"
									},
									"scope": 917,
									"src": "5066:481:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "6015:741:1",
										"statements": [
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "6114:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "6100:19:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 659,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 658,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 349,
																"src": "6100:5:1"
															},
															"referencedDeclaration": 349,
															"src": "6100:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 665,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 661,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "6122:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$357_storage_$",
																"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
															}
														},
														"id": 663,
														"indexExpression": {
															"id": 662,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6135:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6122:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$357_storage",
															"typeString": "struct Stakable.Stakeholder storage ref"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stake",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 352,
													"src": "6122:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$349_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6100:47:1"
											},
											{
												"assignments": [
													667
												],
												"declarations": [
													{
														"constant": false,
														"id": 667,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6168:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "6160:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 666,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6160:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 672,
												"initialValue": {
													"arguments": [
														{
															"id": 669,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "6198:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
																"typeString": "struct Stakable.Stake storage pointer"
															}
														},
														{
															"id": 670,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "6205:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
																"typeString": "struct Stakable.Stake storage pointer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 668,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "6177:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$349_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory,uint256) view returns (uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6177:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6160:53:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 673,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "6230:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
																"typeString": "struct Stakable.Stake storage pointer"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "6230:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 675,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "6246:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6230:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "6498:251:1",
													"statements": [
														{
															"expression": {
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 699,
																		"name": "stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "6513:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
																			"typeString": "struct Stakable.Stake storage pointer"
																		}
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "6513:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 705,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "6545:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 702,
																				"name": "stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 660,
																				"src": "6528:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
																					"typeString": "struct Stakable.Stake storage pointer"
																				}
																			},
																			"id": 703,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 338,
																			"src": "6528:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "6528:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6528:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6513:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 708,
															"nodeType": "ExpressionStatement",
															"src": "6513:40:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 709,
																		"name": "stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "6574:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
																			"typeString": "struct Stakable.Stake storage pointer"
																		}
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "releaseTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 348,
																	"src": "6574:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 711,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6594:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6594:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6574:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 720,
															"nodeType": "IfStatement",
															"src": "6570:127:1",
															"trueBody": {
																"id": 719,
																"nodeType": "Block",
																"src": "6611:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 715,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 651,
																					"src": "6665:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 716,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "6674:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 714,
																				"name": "calculateStakingWithPenalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 646,
																				"src": "6637:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																					"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																				}
																			},
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6637:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"functionReturnParameters": 657,
																		"id": 718,
																		"nodeType": "Return",
																		"src": "6630:51:1"
																	}
																]
															}
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 721,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "6721:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 722,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "6730:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 723,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6720:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 657,
															"id": 724,
															"nodeType": "Return",
															"src": "6713:24:1"
														}
													]
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "6226:523:1",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6255:237:1",
													"statements": [
														{
															"expression": {
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "6270:26:1",
																"subExpression": {
																	"baseExpression": {
																		"id": 677,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "6277:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$357_storage_$",
																			"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																		}
																	},
																	"id": 679,
																	"indexExpression": {
																		"id": 678,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "6290:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6277:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$357_storage",
																		"typeString": "struct Stakable.Stakeholder storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 681,
															"nodeType": "ExpressionStatement",
															"src": "6270:26:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 682,
																		"name": "stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "6317:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$349_storage_ptr",
																			"typeString": "struct Stakable.Stake storage pointer"
																		}
																	},
																	"id": 683,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "releaseTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 348,
																	"src": "6317:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 684,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6337:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6337:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6317:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 693,
															"nodeType": "IfStatement",
															"src": "6313:127:1",
															"trueBody": {
																"id": 692,
																"nodeType": "Block",
																"src": "6354:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 688,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 651,
																					"src": "6408:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 689,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "6417:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 687,
																				"name": "calculateStakingWithPenalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 646,
																				"src": "6380:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																					"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																				}
																			},
																			"id": 690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6380:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"functionReturnParameters": 657,
																		"id": 691,
																		"nodeType": "Return",
																		"src": "6373:51:1"
																	}
																]
															}
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 694,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "6464:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 695,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "6473:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 696,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6463:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 657,
															"id": 697,
															"nodeType": "Return",
															"src": "6456:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "5555:339:1",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the acount\n Will also calculateStakeReward and reset timer"
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawStake",
									"nameLocation": "5909:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5932:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "5924:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5947:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "5939:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5939:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5923:32:1"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "5992:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "6001:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:18:1"
									},
									"scope": 917,
									"src": "5900:856:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "6875:961:1",
										"statements": [
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "6908:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 835,
														"src": "6886:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 737,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 736,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 365,
																"src": "6886:14:1"
															},
															"referencedDeclaration": 365,
															"src": "6886:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$365_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6947:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6963:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 742,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "6979:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$357_storage_$",
																		"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																	}
																},
																"id": 744,
																"indexExpression": {
																	"id": 743,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "6992:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6979:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$357_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 352,
															"src": "6979:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$349_storage",
																"typeString": "struct Stakable.Stake storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$349_storage",
																"typeString": "struct Stakable.Stake storage ref"
															}
														],
														"id": 739,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "6918:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$365_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6918:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6886:131:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 749,
																		"name": "summary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "7036:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																			"typeString": "struct Stakable.StakingSummary memory"
																		}
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 364,
																	"src": "7036:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "7036:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7060:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7036:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7063:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 748,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7028:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7028:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "7028:52:1"
											},
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "availableReward",
														"nameLocation": "7101:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 835,
														"src": "7093:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7093:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 760,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "7154:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 364,
															"src": "7154:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 762,
																	"name": "summary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "7182:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																		"typeString": "struct Stakable.StakingSummary memory"
																	}
																},
																"id": 763,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 364,
																"src": "7182:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "7182:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 759,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "7119:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$349_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory,uint256) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:94:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7093:120:1"
											},
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "penalty",
														"nameLocation": "7232:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 835,
														"src": "7224:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 767,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7224:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"nodeType": "VariableDeclarationStatement",
												"src": "7224:15:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 770,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "7256:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 364,
															"src": "7256:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 348,
														"src": "7256:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 773,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7284:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7284:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7256:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "7252:287:1",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "7301:238:1",
													"statements": [
														{
															"assignments": [
																777,
																779
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 777,
																	"mutability": "mutable",
																	"name": "amount_penalty",
																	"nameLocation": "7325:14:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 793,
																	"src": "7317:22:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7317:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 779,
																	"mutability": "mutable",
																	"name": "reward_penalty",
																	"nameLocation": "7349:14:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 793,
																	"src": "7341:22:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 778,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7341:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"expression": {
																				"id": 781,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 738,
																				"src": "7402:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 782,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stake",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 364,
																			"src": "7402:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 338,
																		"src": "7402:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 784,
																		"name": "availableReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "7441:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 780,
																	"name": "calculatePenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "7367:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7367:104:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7316:155:1"
														},
														{
															"expression": {
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 787,
																	"name": "penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "7486:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 788,
																		"name": "amount_penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "7496:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 789,
																		"name": "reward_penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "7513:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7496:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7486:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "7486:41:1"
														}
													]
												}
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "airdrop",
														"nameLocation": "7559:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 835,
														"src": "7551:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 795,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7551:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 798,
																	"name": "summary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "7586:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																		"typeString": "struct Stakable.StakingSummary memory"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 364,
																"src": "7586:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "7586:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "calculateAirdrop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "7569:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7569:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7551:56:1"
											},
											{
												"expression": {
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 803,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "7618:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 364,
															"src": "7618:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable_airdrop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "7618:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 808,
														"name": "airdrop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "7652:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7618:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7618:41:1"
											},
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 811,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "7670:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 364,
															"src": "7670:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 342,
														"src": "7670:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 816,
														"name": "availableReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "7696:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7670:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "7670:41:1"
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 819,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "7722:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "penalty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 361,
														"src": "7722:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 822,
														"name": "penalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "7740:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7722:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "7722:25:1"
											},
											{
												"expression": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 825,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "7758:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 359,
														"src": "7758:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 828,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "7781:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 364,
															"src": "7781:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$349_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "7781:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7758:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "7758:43:1"
											},
											{
												"expression": {
													"id": 833,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 738,
													"src": "7821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 735,
												"id": 834,
												"nodeType": "Return",
												"src": "7814:14:1"
											}
										]
									},
									"functionSelector": "e73e14bf",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "6773:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "6790:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "6782:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6781:17:1"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "6847:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$365_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 732,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 365,
														"src": "6847:14:1"
													},
													"referencedDeclaration": 365,
													"src": "6847:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$365_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6846:23:1"
									},
									"scope": 917,
									"src": "6764:1072:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "7923:98:1",
										"statements": [
											{
												"assignments": [
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "airdrop",
														"nameLocation": "7942:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "7934:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 845,
																			"name": "stakeAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 838,
																			"src": "7954:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 846,
																			"name": "_airdropRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 322,
																			"src": "7968:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7954:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 848,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7953:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7984:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "7953:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 851,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7952:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7934:54:1"
											},
											{
												"expression": {
													"id": 853,
													"name": "airdrop",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 844,
													"src": "8006:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 842,
												"id": 854,
												"nodeType": "Return",
												"src": "7999:14:1"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateAirdrop",
									"nameLocation": "7853:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "stakeAmount",
												"nameLocation": "7878:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "7870:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7869:21:1"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "7914:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7914:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7913:9:1"
									},
									"scope": 917,
									"src": "7844:177:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "8096:470:1",
										"statements": [
											{
												"assignments": [
													865
												],
												"declarations": [
													{
														"constant": false,
														"id": 865,
														"mutability": "mutable",
														"name": "stakeholder",
														"nameLocation": "8127:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "8107:31:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$357_storage_ptr",
															"typeString": "struct Stakable.Stakeholder"
														},
														"typeName": {
															"id": 864,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 863,
																"name": "Stakeholder",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 357,
																"src": "8107:11:1"
															},
															"referencedDeclaration": 357,
															"src": "8107:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$357_storage_ptr",
																"typeString": "struct Stakable.Stakeholder"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 869,
												"initialValue": {
													"baseExpression": {
														"id": 866,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "8141:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$357_storage_$",
															"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 868,
													"indexExpression": {
														"id": 867,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "8154:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8141:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$357_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8107:55:1"
											},
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "monthAirdrop",
														"nameLocation": "8181:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "8173:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 870,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8173:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "37",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8262:6:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "7"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															}
														],
														"expression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 872,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "8197:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "8197:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 874,
																			"name": "stakeholder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 865,
																			"src": "8215:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stakeholder_$357_storage_ptr",
																				"typeString": "struct Stakable.Stakeholder storage pointer"
																			}
																		},
																		"id": 875,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestClaimDrop",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 356,
																		"src": "8215:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8197:45:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 877,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8196:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "8196:65:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8196:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8173:96:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 883,
																"name": "monthAirdrop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "8290:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8306:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "8290:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d61626c65206f6e63652061206d6f6e7468",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8309:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efd349a77566eb94ebbc821a359a469680543a960a192a5a9004b9874a151b63",
																"typeString": "literal_string \"Claimable once a month\""
															},
															"value": "Claimable once a month"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efd349a77566eb94ebbc821a359a469680543a960a192a5a9004b9874a151b63",
																"typeString": "literal_string \"Claimable once a month\""
															}
														],
														"id": 882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8282:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8282:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "8282:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 890,
																		"name": "stakeholder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "8355:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stakeholder_$357_storage_ptr",
																			"typeString": "struct Stakable.Stakeholder storage pointer"
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 352,
																	"src": "8355:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$349_storage",
																		"typeString": "struct Stakable.Stake storage ref"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "8355:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8382:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8355:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8385:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8347:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8347:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "8347:55:1"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "airdrop",
														"nameLocation": "8423:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "8415:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8415:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 901,
																	"name": "stakeholder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "8450:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$357_storage_ptr",
																		"typeString": "struct Stakable.Stakeholder storage pointer"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 352,
																"src": "8450:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$349_storage",
																	"typeString": "struct Stakable.Stake storage ref"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "8450:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 900,
														"name": "calculateAirdrop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "8433:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8433:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8415:60:1"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 906,
															"name": "stakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "8486:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$357_storage_ptr",
																"typeString": "struct Stakable.Stakeholder storage pointer"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "latestClaimDrop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 356,
														"src": "8486:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 909,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8516:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8516:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8486:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "8486:45:1"
											},
											{
												"expression": {
													"id": 913,
													"name": "airdrop",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 899,
													"src": "8551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 862,
												"id": 914,
												"nodeType": "Return",
												"src": "8544:14:1"
											}
										]
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimAirdrop",
									"nameLocation": "8038:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "8060:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "8052:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8052:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8051:17:1"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "8087:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8086:9:1"
									},
									"scope": 917,
									"src": "8029:537:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 918,
							"src": "128:8441:1",
							"usedErrors": []
						}
					],
					"src": "40:8531:1"
				},
				"id": 1
			}
		}
	}
}