{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "releaseTime",
						"type": "uint256"
					}
				],
				"name": "Staked",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_staker",
						"type": "address"
					}
				],
				"name": "hasStake",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "total_amount",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "user",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "since",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "claimable",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "rewardAPY",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "releaseTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Stakable.Stake[]",
								"name": "stakes",
								"type": "tuple[]"
							}
						],
						"internalType": "struct Stakable.StakingSummary",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user_",
						"type": "address"
					}
				],
				"name": "stakeSummary",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "total_amount",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "user",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "since",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "claimable",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "rewardAPY",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "releaseTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Stakable.Stake[]",
								"name": "stakes",
								"type": "tuple[]"
							}
						],
						"internalType": "struct Stakable.StakingSummary",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"events": {
				"Staked(address,uint256,uint256,uint256,uint256)": {
					"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
				}
			},
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Stakable.sol": "Stakable"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Stakable.sol": {
			"keccak256": "0x64ae03ca3a74ce21bc2710b4b3215ab216ebc2c2f79b5dfecc07e2e881cd0e61",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://f21c624e475dec1652cb93d86280f823f8a62917226ed9f117ffd84549fc0df6",
				"dweb:/ipfs/QmRV9yRCb5tVFLqCo4NXD5CiQ1NGBULw2bY2uCqnXtiT8H"
			]
		},
		"contracts/src/SafeMath.sol": {
			"keccak256": "0x6a8761b3be31eab1f01b04493d34a73555146ed4f72ee9506d612cace10d5f47",
			"license": "MIT",
			"urls": [
				"bzz-raw://b030633a1bd9597867ca3d33923bdfd45d5a8afb3f44a4f7de1051e89318396c",
				"dweb:/ipfs/QmVyicUhopcvoMJ4fVj32LgCrcSjnh6wqxj1niaHrjKZ2v"
			]
		}
	},
	"version": 1
}