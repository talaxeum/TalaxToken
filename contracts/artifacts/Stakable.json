{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {
				"@_18": {
					"entryPoint": null,
					"id": 18,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@_444": {
					"entryPoint": null,
					"id": 444,
					"parameterSlots": 0,
					"returnSlots": 0
				}
			},
			"generatedSources": [],
			"linkReferences": {},
<<<<<<< HEAD
			"object": "",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH1 0xF SWAP1 SSTORE PUSH1 0x50 PUSH1 0x2 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0xA DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x114F DUP1 PUSH2 0x53 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8891CF0D GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC23A5CEA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xF93D4F8A EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F348B4E GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x5F348B4E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x71E3DB87 EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x1F7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x15A PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x5 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x267 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x64F JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x860 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x267 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35F PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH2 0xA69 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x15A PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x15A PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x3EC PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x3F4 PUSH2 0xCF0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x45BA11 PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x455 SWAP1 DUP5 SWAP1 PUSH2 0x103E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x469 PUSH2 0xF0F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB018F087 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH2 0x50B DUP4 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x557 JUMPI PUSH2 0x534 PUSH2 0x52C DUP3 PUSH1 0x1 SLOAD PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x547 PUSH2 0x52C DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMPDEST PUSH1 0x0 PUSH2 0x566 DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0xD8D JUMP JUMPDEST GT ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 PUSH2 0x57B DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xA0 ADD MSTORE POP PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x0 PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x80 ADD MSTORE SWAP1 MLOAD DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x604 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x62D JUMPI PUSH1 0x40 MLOAD PUSH4 0x36D26697 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x455 SWAP1 DUP5 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x67F PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x687 PUSH2 0xCF0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x740E33B PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE SLOAD DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x455 SWAP1 DUP5 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71F PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 PUSH2 0x79B DUP3 PUSH1 0xC0 ADD MLOAD PUSH2 0xD8D JUMP JUMPDEST GT PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x376115B3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE DUP1 MLOAD PUSH2 0x7D1 SWAP1 PUSH2 0xDA4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD GT PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH4 0x17CB436F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x834 PUSH2 0x82D PUSH1 0x6 SLOAD PUSH1 0x5 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xA PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x858 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x868 PUSH2 0xDF1 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x876 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF1A470D7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x907 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 DUP7 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP6 ADD DUP1 SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP7 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP8 ADD DUP1 SLOAD PUSH1 0xC0 DUP9 ADD MSTORE SWAP12 DUP12 MSTORE SWAP9 SWAP1 SWAP8 MSTORE SWAP4 DUP9 SWAP1 SSTORE SWAP1 DUP8 SWAP1 SSTORE SWAP3 DUP7 SWAP1 SSTORE SWAP2 DUP6 SWAP1 SSTORE SWAP2 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE SWAP2 SWAP1 SWAP3 SSTORE MLOAD TIMESTAMP LT ISZERO PUSH2 0xA04 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH2 0x9FA SWAP1 PUSH2 0x9F5 DUP4 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH2 0xA57 DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x0 EQ PUSH2 0xA96 JUMPI PUSH3 0x93A80 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xAA4 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA552CF1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E SWAP1 PUSH1 0x20 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xB2B PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD PUSH4 0x445A206B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4462D27 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP6 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x60 DUP2 ADD PUSH2 0xBE9 DUP4 DUP7 PUSH2 0x1055 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP1 DUP5 MSTORE PUSH1 0xB DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP4 PUSH2 0xC85 DUP2 DUP9 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xCB7 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x28746245 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7959F75 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xD31 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xD4A DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 DUP3 DUP5 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 DUP3 DUP5 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6F PUSH1 0x3C PUSH2 0xD9E DUP5 TIMESTAMP PUSH2 0x103E JUMP JUMPDEST SWAP1 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0xDBC SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0xE2F JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xE47 DUP5 PUSH2 0xE42 PUSH2 0x52C DUP8 PUSH1 0x1 SLOAD PUSH2 0xD75 JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0xE5A DUP5 PUSH2 0xE42 PUSH2 0x52C DUP8 PUSH1 0x1 SLOAD PUSH2 0xD75 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6F PUSH2 0xE75 DUP4 TIMESTAMP PUSH2 0x103E JUMP JUMPDEST PUSH2 0xE89 SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x10A5 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 DUP3 DUP5 PUSH2 0x103E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x10C4 JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0xF06 JUMPI PUSH2 0xF06 PUSH2 0x106D JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF68 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D1 DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD7 DUP6 PUSH2 0xF6D JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1050 JUMPI PUSH2 0x1050 PUSH2 0x1028 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1068 JUMPI PUSH2 0x1068 PUSH2 0x1028 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BF PUSH2 0x1028 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x10D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1103 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B ADDMOD GT 0xF8 0xB1 0xE7 0xC2 0x24 JUMPI 0xD3 0xE0 DELEGATECALL COINBASE MOD 0x4C DUP6 CALLDATASIZE SLOAD GT CALL SIGNEXTEND BASEFEE DUP11 0xBA 0x22 PUSH5 0x8124D87D58 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
			"sourceMap": "880:12723:2:-:0;;;1566:200;;;;;;;;;-1:-1:-1;1701:1:0;1806:7;:22;;;1673:2:2;1652:23;;1699:2;1685:11;:16;1711:6;:19;;-1:-1:-1;;;;;;1711:19:2;;;1720:10;1711:19;;;;;;1740:6;:19;;;;;;;;;;880:12723;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@_calculateAirdrop_1053": {
					"entryPoint": 3492,
					"id": 1053,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@_calculateStakeReward_740": {
					"entryPoint": 3360,
					"id": 740,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@_calculateStakingDuration_709": {
					"entryPoint": 3686,
					"id": 709,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@_calculateStakingWithPenalty_789": {
					"entryPoint": 3612,
					"id": 789,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"@_calculateWeek_1011": {
					"entryPoint": 3469,
					"id": 1011,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@_checkVotingStatus_566": {
					"entryPoint": 3275,
=======
			"object": "608060405234801561001057600080fd5b5060016000819055600f90556050600255600980546001600160a01b031990811633908117909255600a805490911690911790556112f0806100536000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80638891cf0d116100e3578063c23a5cea1161008c578063d5dbdf1b11610066578063d5dbdf1b146103c5578063f93d4f8a146103d8578063fab2f86b146103eb57600080fd5b8063c23a5cea1461038c578063cb79c2e1146103b4578063cbb3e152146103bd57600080fd5b8063a3ec138d116100bd578063a3ec138d1461034d578063b2bdfa7b14610370578063b87da76d1461038357600080fd5b80638891cf0d146103115780638c63f97f1461031a578063a143a5f21461032d57600080fd5b80635f348b4e1161014557806365f8c6c51161011f57806365f8c6c5146102de578063671d2b75146102f157806371e3db871461030957600080fd5b80635f348b4e146102945780635f5300ff146102bf578063632a9a52146102d657600080fd5b80631d77b00b116101765780631d77b00b1461021c5780631ec6b60a1461022f5780632d15cc041461023757600080fd5b8063070c8b741461019257806310486b6a1461019c575b600080fd5b61019a6103f3565b005b6101a46104e7565b604051610213919060006101208201905082518252602083015160208301526040830151805160408401526020810151606084015260408101516080840152606081015160a0840152608081015160c084015260a081015160e084015260c08101516101008401525092915050565b60405180910390f35b61019a61022a36600461115c565b610649565b61019a61068b565b61027d61024536600461115c565b6001600160a01b031660009081526007602090815260408083208054600554855260019091019092529091205460ff91821692911690565b604080519215158352901515602083015201610213565b6009546102a7906001600160a01b031681565b6040516001600160a01b039091168152602001610213565b6102c860065481565b604051908152602001610213565b61019a61074f565b6102c86102ec36600461115c565b61085e565b6102f96108f0565b6040519015158152602001610213565b61019a610983565b6102c860025481565b61019a610328366004611177565b610991565b6102c861033b366004611177565b60086020526000908152604090205481565b6102f961035b36600461115c565b60076020526000908152604090205460ff1681565b600a546102a7906001600160a01b031681565b6102c860035481565b61039f61039a36600461115c565b610a10565b60408051928352602083019190915201610213565b6102c860015481565b6102c8610b8f565b61019a6103d3366004611177565b610bc2565b61019a6103e6366004611190565b610c3a565b61019a610e50565b6002600054141561044b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055610458610e6c565b610460610eaa565b336000908152600760209081526040808320600554845260010190915290205460ff166104b9576040517f8b74220000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460009081526008602052604081208054600192906104db9084906111df565b90915550506001600055565b6104ef6110e2565b336000908152600b6020908152604091829020825160e08101845281548082526001830154938201939093526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c0830152610584576040517fb018f08700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051606081018252600080825260208201819052918101839052906105aa83610ef3565b90504282604001516060015111156105f6576105d36105cb82600154610f48565b6103e8610f5b565b6105e66105cb8560000151600154610f48565b6105f091906111f6565b60208301525b60006106058460c00151610f67565b111561062957600061061a8460000151610f77565b604084015160a0015250610637565b6040820151600060a0909101525b60408201516080015290518152919050565b610651610f99565b600980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600260005414156106de5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610442565b60026000556106eb610fc4565b60045460ff1615156001141561072d576040517f6da4cd2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805460ff19166001908117909155600580546000906104db9084906111f6565b600260005414156107a25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610442565b60026000556107af610e6c565b6107b7610eaa565b336000908152600760209081526040808320600554845260019081019092529091205460ff1615151415610817576040517f740e33b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260076020908152604080832060058054855260019182018452828520805460ff191683179055548452600890925282208054919290916104db9084906111f6565b6001600160a01b0381166000908152600b602052604081208054156108e75761088a8160060154610f67565b6108c0576040517fdd8456cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006108cf8260000154610f77565b60006005840155426006909301929092555092915050565b50600092915050565b60006108fa610fc4565b610902610e6c565b60016006541161093e576040517f2f9686de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109576109506006546005610f48565b600a610f5b565b60055460009081526008602052604090205490915081101561097b57600191505090565b600091505090565b61098b610fc4565b42600355565b610999610f99565b601e8111156109d4576040517ff1a470d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018190556040518181527fcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a9906020015b60405180910390a150565b60008060026000541415610a665760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610442565b6002600055610a73610fc4565b6001600160a01b0383166000818152600b60208181526040808420815160e081018352815481526001808301805483870152600284018054958401959095526003840180546060850152600485018054608086015260058601805460a08701526006808801805460c08901529c8c529990985294899055908890559387905592869055908590559184905593839055815490939290610b139084906111df565b90915550506001600160a01b038416600090815260076020908152604080832060055484526001019091529020805460ff191690556060810151421015610b72578051610b6890610b6383610ef3565b610fef565b9250925050610b83565b8051610b7d82610ef3565b92509250505b60016000559092909150565b6000600354600014610bbc5762093a8060035442610bad91906111df565b610bb79190611224565b905090565b50600090565b610bca610f99565b60c8811115610c05576040517fa552cf1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028190556040518181527fcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e90602001610a05565b60026000541415610c8d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610442565b6002600055610c9a610fc4565b60008311610cd4576040517f88b440d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0384166000908152600b602052604090205415610d24576040517f04462d2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160066000828254610d3791906111f6565b90915550506001600160a01b038416600090815260076020908152604091829020805460ff19166001179055815160e081018352858152429181018290529182018390529060608101610d8a83866111f6565b815260006020808301829052604080840183905260609384018390526001600160a01b038a16808452600b8352928190208551815591850151600183015584015160028201559183015160038301556080830151600483015560a0830151600583015560c0909201516006909101557fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8583610e2681886111f6565b6040805193845260208401929092529082015260600160405180910390a250506001600055505050565b610e58610fc4565b610e60610e6c565b6004805460ff19169055565b60045460ff16610ea8576040517fa1d1891400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b3360009081526007602052604090205460ff16610ea8576040517f1e567dd400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051600090610f0457506000919050565b6a52b7d2dcc80cd2e4000000610f1d8360200151611039565b60408401518451610f2e9190611246565b610f389190611246565b610f429190611224565b92915050565b6000610f548284611246565b9392505050565b6000610f548284611224565b600062093a80610f3883426111df565b60006301dfe2006103e860025484610f8f9190611246565b610f389190611224565b600a546001600160a01b03163314610ea8576040516315a678a960e11b815260040160405180910390fd5b6009546001600160a01b03163314610ea8576040516315a678a960e11b815260040160405180910390fd5b6000808361100257506000905080611032565b61101a846110156105cb87600154610f48565b61109c565b61102d846110156105cb87600154610f48565b915091505b9250929050565b6000610f4261104883426111df565b61105c9069d3c21bcecceda1000000611246565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d700000008152506110a8565b6000610f5482846111df565b600081836110c95760405162461bcd60e51b81526004016104429190611265565b508284816110d9576110d961120e565b04949350505050565b6040518060600160405280600081526020016000815260200161113b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b905290565b80356001600160a01b038116811461115757600080fd5b919050565b60006020828403121561116e57600080fd5b610f5482611140565b60006020828403121561118957600080fd5b5035919050565b600080600080608085870312156111a657600080fd5b6111af85611140565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156111f1576111f16111c9565b500390565b60008219821115611209576112096111c9565b500190565b634e487b7160e01b600052601260045260246000fd5b60008261124157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611260576112606111c9565b500290565b600060208083528351808285015260005b8181101561129257858101830151858201604001528201611276565b818111156112a4576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122070a9cdfbe030969a78ddce57c067cae6a0ac8793061845d19ecdc2e0f4a2ed1764736f6c634300080b0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH1 0xF SWAP1 SSTORE PUSH1 0x50 PUSH1 0x2 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0xA DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x12F0 DUP1 PUSH2 0x53 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8891CF0D GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xC23A5CEA GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD5DBDF1B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xF93D4F8A EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3EC138D GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F348B4E GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x65F8C6C5 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x71E3DB87 EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F348B4E EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D77B00B GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x19C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A PUSH2 0x3F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x68B JUMP JUMPDEST PUSH2 0x27D PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x5 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x213 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x2C8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x74F JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x983 JUMP JUMPDEST PUSH2 0x2C8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x2C8 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x19A PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0xC3A JUMP JUMPDEST PUSH2 0x19A PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x458 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x460 PUSH2 0xEAA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8B74220000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x4DB SWAP1 DUP5 SWAP1 PUSH2 0x11DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x4EF PUSH2 0x10E2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB018F08700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH2 0x5AA DUP4 PUSH2 0xEF3 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5D3 PUSH2 0x5CB DUP3 PUSH1 0x1 SLOAD PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x5CB DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMPDEST PUSH1 0x0 PUSH2 0x605 DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0xF67 JUMP JUMPDEST GT ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 PUSH2 0x61A DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xA0 ADD MSTORE POP PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x0 PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x80 ADD MSTORE SWAP1 MLOAD DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x651 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x6DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x6EB PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DA4CD2E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4DB SWAP1 DUP5 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x7AF PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x7B7 PUSH2 0xEAA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x740E33B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE SLOAD DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x4DB SWAP1 DUP5 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x8E7 JUMPI PUSH2 0x88A DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD8456CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8CF DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 ADD SSTORE TIMESTAMP PUSH1 0x6 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FA PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0x902 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD GT PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH32 0x2F9686DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x957 PUSH2 0x950 PUSH1 0x6 SLOAD PUSH1 0x5 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0xA PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x97B JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x98B PUSH2 0xFC4 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x999 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF1A470D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xA73 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP5 ADD DUP1 SLOAD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD DUP1 SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP7 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP1 DUP9 ADD DUP1 SLOAD PUSH1 0xC0 DUP10 ADD MSTORE SWAP13 DUP13 MSTORE SWAP10 SWAP1 SWAP9 MSTORE SWAP5 DUP10 SWAP1 SSTORE SWAP1 DUP9 SWAP1 SSTORE SWAP4 DUP8 SWAP1 SSTORE SWAP3 DUP7 SWAP1 SSTORE SWAP1 DUP6 SWAP1 SSTORE SWAP2 DUP5 SWAP1 SSTORE SWAP4 DUP4 SWAP1 SSTORE DUP2 SLOAD SWAP1 SWAP4 SWAP3 SWAP1 PUSH2 0xB13 SWAP1 DUP5 SWAP1 PUSH2 0x11DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0xB72 JUMPI DUP1 MLOAD PUSH2 0xB68 SWAP1 PUSH2 0xB63 DUP4 PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0xFEF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0xB83 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xB7D DUP3 PUSH2 0xEF3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x0 EQ PUSH2 0xBBC JUMPI PUSH3 0x93A80 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xBAD SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xBCA PUSH2 0xF99 JUMP JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA552CF1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E SWAP1 PUSH1 0x20 ADD PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xC9A PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x88B440D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4462D2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD37 SWAP2 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP6 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x60 DUP2 ADD PUSH2 0xD8A DUP4 DUP7 PUSH2 0x11F6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP1 DUP5 MSTORE PUSH1 0xB DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP4 PUSH2 0xE26 DUP2 DUP9 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xE58 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0xE60 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D1891400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E567DD400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xF04 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xF1D DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1039 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0xF42 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF54 DUP3 DUP5 PUSH2 0x1246 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF54 DUP3 DUP5 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 PUSH2 0xF38 DUP4 TIMESTAMP PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0xF8F SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0x1002 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x101A DUP5 PUSH2 0x1015 PUSH2 0x5CB DUP8 PUSH1 0x1 SLOAD PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST PUSH2 0x102D DUP5 PUSH2 0x1015 PUSH2 0x5CB DUP8 PUSH1 0x1 SLOAD PUSH2 0xF48 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF42 PUSH2 0x1048 DUP4 TIMESTAMP PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x105C SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1246 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF54 DUP3 DUP5 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x10D9 JUMPI PUSH2 0x10D9 PUSH2 0x120E JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113B PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x116E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF54 DUP3 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11AF DUP6 PUSH2 0x1140 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11F1 JUMPI PUSH2 0x11F1 PUSH2 0x11C9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1209 JUMPI PUSH2 0x1209 PUSH2 0x11C9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1241 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1260 JUMPI PUSH2 0x1260 PUSH2 0x11C9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1292 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1276 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x12A4 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xA9CDFBE030969A78DDCE57C067CAE6A0AC DUP8 SWAP4 MOD XOR GASLIMIT 0xD1 SWAP15 0xCD 0xC2 0xE0 DELEGATECALL LOG2 0xED OR PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
			"sourceMap": "880:12436:2:-:0;;;1566:200;;;;;;;;;-1:-1:-1;1701:1:0;1806:7;:22;;;1673:2:2;1652:23;;1699:2;1685:11;:16;1711:6;:19;;-1:-1:-1;;;;;;1711:19:2;;;1720:10;1711:19;;;;;;1740:6;:19;;;;;;;;;;880:12436;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@_calculateAirdrop_1040": {
					"entryPoint": 3959,
					"id": 1040,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@_calculateStakeReward_740": {
					"entryPoint": 3827,
					"id": 740,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@_calculateStakingDuration_709": {
					"entryPoint": 4153,
					"id": 709,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@_calculateStakingWithPenalty_789": {
					"entryPoint": 4079,
					"id": 789,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"@_calculateWeek_1022": {
					"entryPoint": 3943,
					"id": 1022,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@_checkVotingStatus_566": {
					"entryPoint": 3692,
>>>>>>> dev_split
					"id": 566,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@_isVoter_548": {
<<<<<<< HEAD
					"entryPoint": 3312,
=======
					"entryPoint": 3754,
>>>>>>> dev_split
					"id": 548,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@_owner_422": {
					"entryPoint": null,
					"id": 422,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@_talax_420": {
					"entryPoint": null,
					"id": 420,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@airdropRate_401": {
					"entryPoint": null,
					"id": 401,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@airdropSince_403": {
					"entryPoint": null,
					"id": 403,
					"parameterSlots": 0,
					"returnSlots": 0
				},
<<<<<<< HEAD
				"@airdropWeek_1130": {
					"entryPoint": 2665,
					"id": 1130,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@changeAirdropPercentage_1035": {
					"entryPoint": 2716,
					"id": 1035,
=======
				"@airdropWeek_1119": {
					"entryPoint": 2959,
					"id": 1119,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@changeAirdropPercentage_1006": {
					"entryPoint": 3010,
					"id": 1006,
>>>>>>> dev_split
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@changePenaltyFee_688": {
<<<<<<< HEAD
					"entryPoint": 2158,
=======
					"entryPoint": 2449,
>>>>>>> dev_split
					"id": 688,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@changeTalaxAddress_585": {
<<<<<<< HEAD
					"entryPoint": 1450,
=======
					"entryPoint": 1609,
>>>>>>> dev_split
					"id": 585,
					"parameterSlots": 1,
					"returnSlots": 0
				},
<<<<<<< HEAD
				"@claimAirdrop_1108": {
					"entryPoint": 1813,
					"id": 1108,
=======
				"@claimAirdrop_1097": {
					"entryPoint": 2142,
					"id": 1097,
>>>>>>> dev_split
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@div_260": {
<<<<<<< HEAD
					"entryPoint": 3457,
=======
					"entryPoint": 3931,
>>>>>>> dev_split
					"id": 260,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@div_325": {
<<<<<<< HEAD
					"entryPoint": 3797,
=======
					"entryPoint": 4264,
>>>>>>> dev_split
					"id": 325,
					"parameterSlots": 3,
					"returnSlots": 1
				},
<<<<<<< HEAD
				"@getVoters_1152": {
					"entryPoint": null,
					"id": 1152,
					"parameterSlots": 1,
					"returnSlots": 2
				},
				"@getVotingResult_1298": {
					"entryPoint": 2022,
					"id": 1298,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@hasStake_983": {
					"entryPoint": 1121,
					"id": 983,
=======
				"@getVoters_1141": {
					"entryPoint": null,
					"id": 1141,
					"parameterSlots": 1,
					"returnSlots": 2
				},
				"@getVotingResult_1287": {
					"entryPoint": 2288,
					"id": 1287,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@hasStake_971": {
					"entryPoint": 1255,
					"id": 971,
>>>>>>> dev_split
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@isOwner_525": {
<<<<<<< HEAD
					"entryPoint": 3526,
=======
					"entryPoint": 3993,
>>>>>>> dev_split
					"id": 525,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@isTalax_505": {
<<<<<<< HEAD
					"entryPoint": 3569,
=======
					"entryPoint": 4036,
>>>>>>> dev_split
					"id": 505,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@mul_245": {
<<<<<<< HEAD
					"entryPoint": 3445,
=======
					"entryPoint": 3912,
>>>>>>> dev_split
					"id": 245,
					"parameterSlots": 2,
					"returnSlots": 1
				},
<<<<<<< HEAD
				"@retractVote_1256": {
					"entryPoint": 947,
					"id": 1256,
=======
				"@retractVote_1245": {
					"entryPoint": 1011,
					"id": 1245,
>>>>>>> dev_split
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@stake_664": {
<<<<<<< HEAD
					"entryPoint": 2811,
=======
					"entryPoint": 3130,
>>>>>>> dev_split
					"id": 664,
					"parameterSlots": 4,
					"returnSlots": 0
				},
				"@stakingPenaltyRate_399": {
					"entryPoint": null,
					"id": 399,
					"parameterSlots": 0,
					"returnSlots": 0
				},
<<<<<<< HEAD
				"@startAirdropSince_994": {
					"entryPoint": 2144,
					"id": 994,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@startVoting_1176": {
					"entryPoint": 1492,
					"id": 1176,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@stopVoting_1310": {
					"entryPoint": 3247,
					"id": 1310,
=======
				"@startAirdropSince_982": {
					"entryPoint": 2435,
					"id": 982,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@startVoting_1165": {
					"entryPoint": 1675,
					"id": 1165,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@stopVoting_1299": {
					"entryPoint": 3664,
					"id": 1299,
>>>>>>> dev_split
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@sub_230": {
<<<<<<< HEAD
					"entryPoint": 3785,
=======
					"entryPoint": 4252,
>>>>>>> dev_split
					"id": 230,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@totalVoters_409": {
					"entryPoint": null,
					"id": 409,
					"parameterSlots": 0,
					"returnSlots": 0
				},
<<<<<<< HEAD
				"@vote_1216": {
					"entryPoint": 1615,
					"id": 1216,
=======
				"@vote_1205": {
					"entryPoint": 1871,
					"id": 1205,
>>>>>>> dev_split
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@votedUsers_418": {
					"entryPoint": null,
					"id": 418,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@voters_414": {
					"entryPoint": null,
					"id": 414,
					"parameterSlots": 0,
					"returnSlots": 0
				},
<<<<<<< HEAD
				"@withdrawStake_862": {
					"entryPoint": 2260,
					"id": 862,
=======
				"@withdrawStake_850": {
					"entryPoint": 2576,
					"id": 850,
>>>>>>> dev_split
					"parameterSlots": 1,
					"returnSlots": 2
				},
				"abi_decode_address": {
<<<<<<< HEAD
					"entryPoint": 3949,
=======
					"entryPoint": 4416,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address": {
<<<<<<< HEAD
					"entryPoint": 3972,
=======
					"entryPoint": 4444,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256": {
<<<<<<< HEAD
					"entryPoint": 4024,
=======
					"entryPoint": 4496,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 4
				},
				"abi_decode_tuple_t_uint256": {
<<<<<<< HEAD
					"entryPoint": 3999,
=======
					"entryPoint": 4471,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
<<<<<<< HEAD
					"entryPoint": 4292,
=======
					"entryPoint": 4709,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
<<<<<<< HEAD
					"entryPoint": 4081,
=======
					"entryPoint": null,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_struct$_StakingSummary_$467_memory_ptr__to_t_struct$_StakingSummary_$467_memory_ptr__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 4,
					"returnSlots": 1
				},
				"checked_add_t_uint256": {
<<<<<<< HEAD
					"entryPoint": 4181,
=======
					"entryPoint": 4598,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_div_t_uint256": {
<<<<<<< HEAD
					"entryPoint": 4227,
=======
					"entryPoint": 4644,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_mul_t_uint256": {
<<<<<<< HEAD
					"entryPoint": 4261,
=======
					"entryPoint": 4678,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_sub_t_uint256": {
<<<<<<< HEAD
					"entryPoint": 4158,
=======
					"entryPoint": 4575,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"panic_error_0x11": {
<<<<<<< HEAD
					"entryPoint": 4136,
=======
					"entryPoint": 4553,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"panic_error_0x12": {
<<<<<<< HEAD
					"entryPoint": 4205,
=======
					"entryPoint": 4622,
>>>>>>> dev_split
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
<<<<<<< HEAD
						"src": "0:5105:3",
=======
						"src": "0:5322:3",
>>>>>>> dev_split
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:3",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "177:660:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "187:27:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "199:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "210:3:3",
														"type": "",
														"value": "288"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "195:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "195:19:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "187:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "230:9:3"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "247:6:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "241:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "241:13:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "223:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "223:32:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "223:32:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "275:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "286:4:3",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "271:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "271:20:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "303:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "311:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "299:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:17:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "293:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "293:24:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "264:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "264:54:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "264:54:3"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "327:44:3",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "357:6:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "365:4:3",
																"type": "",
																"value": "0x40"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "353:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "353:17:3"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "347:5:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "347:24:3"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "331:12:3",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "391:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "402:4:3",
																"type": "",
																"value": "0x40"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "387:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "387:20:3"
													},
													{
														"arguments": [
															{
																"name": "memberValue0",
																"nodeType": "YulIdentifier",
																"src": "415:12:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "409:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "409:19:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "380:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "380:49:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "380:49:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "449:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "460:2:3",
																"type": "",
																"value": "96"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "445:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "445:18:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "475:12:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "489:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "471:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:23:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "465:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "465:30:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "438:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "438:58:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "438:58:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "516:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "527:3:3",
																"type": "",
																"value": "128"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "512:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "512:19:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "543:12:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "557:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "539:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:23:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "533:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "533:30:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "505:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "505:59:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "505:59:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "584:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "595:3:3",
																"type": "",
																"value": "160"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "580:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "580:19:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "611:12:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:21:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "601:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "601:28:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "573:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "573:57:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "573:57:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "650:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "661:3:3",
																"type": "",
																"value": "192"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "646:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "646:19:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "677:12:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "691:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "673:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "673:22:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "667:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "667:29:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "639:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "639:58:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "639:58:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "717:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "728:3:3",
																"type": "",
																"value": "224"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "713:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "713:19:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "744:12:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "758:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "740:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:22:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "734:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "734:29:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "706:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "706:58:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "706:58:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "784:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "795:3:3",
																"type": "",
																"value": "256"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "780:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "780:19:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "811:12:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:3:3",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "807:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:22:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "801:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "801:29:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "773:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "773:58:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "773:58:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_struct$_StakingSummary_$467_memory_ptr__to_t_struct$_StakingSummary_$467_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "146:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "157:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "168:4:3",
										"type": ""
									}
								],
								"src": "14:823:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "891:124:3",
=======
									"src": "891:147:3",
>>>>>>> dev_split
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "901:29:3",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "923:6:3"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "910:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "910:20:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "901:5:3"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "993:16:3",
=======
												"src": "1016:16:3",
>>>>>>> dev_split
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "1002:1:3",
=======
																	"src": "1025:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "1005:1:3",
=======
																	"src": "1028:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "995:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "995:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "995:12:3"
=======
																"src": "1018:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "1018:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1018:12:3"
>>>>>>> dev_split
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "952:5:3"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "963:5:3"
																	},
																	{
<<<<<<< HEAD
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "978:3:3",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "983:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "974:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "974:11:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "987:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "970:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "970:19:3"
=======
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "970:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
>>>>>>> dev_split
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:3"
																},
																"nodeType": "YulFunctionCall",
<<<<<<< HEAD
																"src": "959:31:3"
=======
																"src": "959:54:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "949:2:3"
														},
														"nodeType": "YulFunctionCall",
<<<<<<< HEAD
														"src": "949:42:3"
=======
														"src": "949:65:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "942:6:3"
												},
												"nodeType": "YulFunctionCall",
<<<<<<< HEAD
												"src": "942:50:3"
											},
											"nodeType": "YulIf",
											"src": "939:70:3"
=======
												"src": "942:73:3"
											},
											"nodeType": "YulIf",
											"src": "939:93:3"
>>>>>>> dev_split
										}
									]
								},
								"name": "abi_decode_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "870:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "881:5:3",
										"type": ""
									}
								],
<<<<<<< HEAD
								"src": "842:173:3"
=======
								"src": "842:196:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "1090:116:3",
=======
									"src": "1113:116:3",
>>>>>>> dev_split
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "1136:16:3",
=======
												"src": "1159:16:3",
>>>>>>> dev_split
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "1145:1:3",
=======
																	"src": "1168:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "1148:1:3",
=======
																	"src": "1171:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "1138:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "1138:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1138:12:3"
=======
																"src": "1161:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "1161:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1161:12:3"
>>>>>>> dev_split
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "1111:7:3"
=======
																"src": "1134:7:3"
>>>>>>> dev_split
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "1120:9:3"
=======
																"src": "1143:9:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "1107:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1107:23:3"
=======
															"src": "1130:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1130:23:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "1132:2:3",
=======
														"src": "1155:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1103:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1103:32:3"
											},
											"nodeType": "YulIf",
											"src": "1100:52:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1161:39:3",
=======
													"src": "1126:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1126:32:3"
											},
											"nodeType": "YulIf",
											"src": "1123:52:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1184:39:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "1190:9:3"
=======
														"src": "1213:9:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "abi_decode_address",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1171:18:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1171:29:3"
=======
													"src": "1194:18:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1194:29:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1161:6:3"
=======
													"src": "1184:6:3"
>>>>>>> dev_split
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1056:9:3",
=======
										"src": "1079:9:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1067:7:3",
=======
										"src": "1090:7:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1079:6:3",
										"type": ""
									}
								],
								"src": "1020:186:3"
=======
										"src": "1102:6:3",
										"type": ""
									}
								],
								"src": "1043:186:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "1328:151:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1338:26:3",
=======
									"src": "1351:151:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1361:26:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "1350:9:3"
=======
														"src": "1373:9:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "1361:2:3",
=======
														"src": "1384:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1346:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1346:18:3"
=======
													"src": "1369:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1369:18:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1338:4:3"
=======
													"src": "1361:4:3"
>>>>>>> dev_split
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "1380:9:3"
=======
														"src": "1403:9:3"
>>>>>>> dev_split
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
<<<<<<< HEAD
																		"src": "1405:6:3"
=======
																		"src": "1428:6:3"
>>>>>>> dev_split
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
<<<<<<< HEAD
																	"src": "1398:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1398:14:3"
=======
																	"src": "1421:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:14:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "1391:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1391:22:3"
=======
															"src": "1414:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1414:22:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1373:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1373:41:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1373:41:3"
=======
													"src": "1396:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1396:41:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1396:41:3"
>>>>>>> dev_split
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "1434:9:3"
=======
																"src": "1457:9:3"
>>>>>>> dev_split
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
<<<<<<< HEAD
																"src": "1445:2:3",
=======
																"src": "1468:2:3",
>>>>>>> dev_split
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "1430:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1430:18:3"
=======
															"src": "1453:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1453:18:3"
>>>>>>> dev_split
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
<<<<<<< HEAD
																		"src": "1464:6:3"
=======
																		"src": "1487:6:3"
>>>>>>> dev_split
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
<<<<<<< HEAD
																	"src": "1457:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:14:3"
=======
																	"src": "1480:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1480:14:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "1450:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1450:22:3"
=======
															"src": "1473:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1473:22:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1423:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1423:50:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1423:50:3"
=======
													"src": "1446:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1446:50:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1446:50:3"
>>>>>>> dev_split
										}
									]
								},
								"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1289:9:3",
=======
										"src": "1312:9:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1300:6:3",
=======
										"src": "1323:6:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1308:6:3",
=======
										"src": "1331:6:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1319:4:3",
										"type": ""
									}
								],
								"src": "1211:268:3"
=======
										"src": "1342:4:3",
										"type": ""
									}
								],
								"src": "1234:268:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "1585:102:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1595:26:3",
=======
									"src": "1608:125:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1618:26:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "1607:9:3"
=======
														"src": "1630:9:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "1618:2:3",
=======
														"src": "1641:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1603:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1603:18:3"
=======
													"src": "1626:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1626:18:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1595:4:3"
=======
													"src": "1618:4:3"
>>>>>>> dev_split
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "1637:9:3"
=======
														"src": "1660:9:3"
>>>>>>> dev_split
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "1652:6:3"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1668:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1673:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1664:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1660:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:19:3"
=======
																"src": "1675:6:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1683:42:3",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "1648:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1648:32:3"
=======
															"src": "1671:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1671:55:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1630:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1630:51:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1630:51:3"
=======
													"src": "1653:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1653:74:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1653:74:3"
>>>>>>> dev_split
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1554:9:3",
=======
										"src": "1577:9:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1565:6:3",
=======
										"src": "1588:6:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1576:4:3",
										"type": ""
									}
								],
								"src": "1484:203:3"
=======
										"src": "1599:4:3",
										"type": ""
									}
								],
								"src": "1507:226:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "1793:76:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1803:26:3",
=======
									"src": "1839:76:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1849:26:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "1815:9:3"
=======
														"src": "1861:9:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "1826:2:3",
=======
														"src": "1872:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1811:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1811:18:3"
=======
													"src": "1857:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1857:18:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1803:4:3"
=======
													"src": "1849:4:3"
>>>>>>> dev_split
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "1845:9:3"
=======
														"src": "1891:9:3"
>>>>>>> dev_split
													},
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "1856:6:3"
=======
														"src": "1902:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1838:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1838:25:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1838:25:3"
=======
													"src": "1884:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1884:25:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1884:25:3"
>>>>>>> dev_split
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1762:9:3",
=======
										"src": "1808:9:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1773:6:3",
=======
										"src": "1819:6:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1784:4:3",
										"type": ""
									}
								],
								"src": "1692:177:3"
=======
										"src": "1830:4:3",
										"type": ""
									}
								],
								"src": "1738:177:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "1969:92:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1979:26:3",
=======
									"src": "2015:92:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2025:26:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "1991:9:3"
=======
														"src": "2037:9:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "2002:2:3",
=======
														"src": "2048:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1987:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1987:18:3"
=======
													"src": "2033:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2033:18:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "1979:4:3"
=======
													"src": "2025:4:3"
>>>>>>> dev_split
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "2021:9:3"
=======
														"src": "2067:9:3"
>>>>>>> dev_split
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
<<<<<<< HEAD
																		"src": "2046:6:3"
=======
																		"src": "2092:6:3"
>>>>>>> dev_split
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
<<<<<<< HEAD
																	"src": "2039:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2039:14:3"
=======
																	"src": "2085:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:14:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "2032:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2032:22:3"
=======
															"src": "2078:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2078:22:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2014:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2014:41:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2014:41:3"
=======
													"src": "2060:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2060:41:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2060:41:3"
>>>>>>> dev_split
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1938:9:3",
=======
										"src": "1984:9:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1949:6:3",
=======
										"src": "1995:6:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "1960:4:3",
										"type": ""
									}
								],
								"src": "1874:187:3"
=======
										"src": "2006:4:3",
										"type": ""
									}
								],
								"src": "1920:187:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "2136:110:3",
=======
									"src": "2182:110:3",
>>>>>>> dev_split
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "2182:16:3",
=======
												"src": "2228:16:3",
>>>>>>> dev_split
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "2191:1:3",
=======
																	"src": "2237:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "2194:1:3",
=======
																	"src": "2240:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "2184:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2184:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2184:12:3"
=======
																"src": "2230:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2230:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2230:12:3"
>>>>>>> dev_split
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "2157:7:3"
=======
																"src": "2203:7:3"
>>>>>>> dev_split
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "2166:9:3"
=======
																"src": "2212:9:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "2153:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2153:23:3"
=======
															"src": "2199:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2199:23:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "2178:2:3",
=======
														"src": "2224:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2149:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2149:32:3"
											},
											"nodeType": "YulIf",
											"src": "2146:52:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2207:33:3",
=======
													"src": "2195:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2195:32:3"
											},
											"nodeType": "YulIf",
											"src": "2192:52:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2253:33:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "2230:9:3"
=======
														"src": "2276:9:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2217:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2217:23:3"
=======
													"src": "2263:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2263:23:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2207:6:3"
=======
													"src": "2253:6:3"
>>>>>>> dev_split
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2102:9:3",
=======
										"src": "2148:9:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2113:7:3",
=======
										"src": "2159:7:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2125:6:3",
										"type": ""
									}
								],
								"src": "2066:180:3"
=======
										"src": "2171:6:3",
										"type": ""
									}
								],
								"src": "2112:180:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "2380:119:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2390:26:3",
=======
									"src": "2426:119:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2436:26:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "2402:9:3"
=======
														"src": "2448:9:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "2413:2:3",
=======
														"src": "2459:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2398:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2398:18:3"
=======
													"src": "2444:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2444:18:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2390:4:3"
=======
													"src": "2436:4:3"
>>>>>>> dev_split
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "2432:9:3"
=======
														"src": "2478:9:3"
>>>>>>> dev_split
													},
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "2443:6:3"
=======
														"src": "2489:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2425:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2425:25:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2425:25:3"
=======
													"src": "2471:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2471:25:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2471:25:3"
>>>>>>> dev_split
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "2470:9:3"
=======
																"src": "2516:9:3"
>>>>>>> dev_split
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
<<<<<<< HEAD
																"src": "2481:2:3",
=======
																"src": "2527:2:3",
>>>>>>> dev_split
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "2466:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2466:18:3"
=======
															"src": "2512:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2512:18:3"
>>>>>>> dev_split
													},
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "2486:6:3"
=======
														"src": "2532:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2459:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2459:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2459:34:3"
=======
													"src": "2505:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2505:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2505:34:3"
>>>>>>> dev_split
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2341:9:3",
=======
										"src": "2387:9:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2352:6:3",
=======
										"src": "2398:6:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2360:6:3",
=======
										"src": "2406:6:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2371:4:3",
										"type": ""
									}
								],
								"src": "2251:248:3"
=======
										"src": "2417:4:3",
										"type": ""
									}
								],
								"src": "2297:248:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "2625:270:3",
=======
									"src": "2671:270:3",
>>>>>>> dev_split
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "2672:16:3",
=======
												"src": "2718:16:3",
>>>>>>> dev_split
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "2681:1:3",
=======
																	"src": "2727:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "2684:1:3",
=======
																	"src": "2730:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "2674:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2674:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2674:12:3"
=======
																"src": "2720:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2720:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2720:12:3"
>>>>>>> dev_split
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "2646:7:3"
=======
																"src": "2692:7:3"
>>>>>>> dev_split
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "2655:9:3"
=======
																"src": "2701:9:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "2642:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2642:23:3"
=======
															"src": "2688:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2688:23:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "2667:3:3",
=======
														"src": "2713:3:3",
>>>>>>> dev_split
														"type": "",
														"value": "128"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2638:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2638:33:3"
											},
											"nodeType": "YulIf",
											"src": "2635:53:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2697:39:3",
=======
													"src": "2684:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2684:33:3"
											},
											"nodeType": "YulIf",
											"src": "2681:53:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2743:39:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "2726:9:3"
=======
														"src": "2772:9:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "abi_decode_address",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2707:18:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2707:29:3"
=======
													"src": "2753:18:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2753:29:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2697:6:3"
=======
													"src": "2743:6:3"
>>>>>>> dev_split
												}
											]
										},
										{
											"nodeType": "YulAssignment",
<<<<<<< HEAD
											"src": "2745:42:3",
=======
											"src": "2791:42:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "2772:9:3"
=======
																"src": "2818:9:3"
>>>>>>> dev_split
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
<<<<<<< HEAD
																"src": "2783:2:3",
=======
																"src": "2829:2:3",
>>>>>>> dev_split
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "2768:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2768:18:3"
=======
															"src": "2814:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2814:18:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2755:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2755:32:3"
=======
													"src": "2801:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2801:32:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2745:6:3"
=======
													"src": "2791:6:3"
>>>>>>> dev_split
												}
											]
										},
										{
											"nodeType": "YulAssignment",
<<<<<<< HEAD
											"src": "2796:42:3",
=======
											"src": "2842:42:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "2823:9:3"
=======
																"src": "2869:9:3"
>>>>>>> dev_split
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
<<<<<<< HEAD
																"src": "2834:2:3",
=======
																"src": "2880:2:3",
>>>>>>> dev_split
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "2819:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2819:18:3"
=======
															"src": "2865:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2865:18:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2806:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2806:32:3"
=======
													"src": "2852:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2852:32:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2796:6:3"
=======
													"src": "2842:6:3"
>>>>>>> dev_split
												}
											]
										},
										{
											"nodeType": "YulAssignment",
<<<<<<< HEAD
											"src": "2847:42:3",
=======
											"src": "2893:42:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "2874:9:3"
=======
																"src": "2920:9:3"
>>>>>>> dev_split
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
<<<<<<< HEAD
																"src": "2885:2:3",
=======
																"src": "2931:2:3",
>>>>>>> dev_split
																"type": "",
																"value": "96"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "2870:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2870:18:3"
=======
															"src": "2916:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2916:18:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2857:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2857:32:3"
=======
													"src": "2903:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2903:32:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "value3",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "2847:6:3"
=======
													"src": "2893:6:3"
>>>>>>> dev_split
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2567:9:3",
=======
										"src": "2613:9:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2578:7:3",
=======
										"src": "2624:7:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2590:6:3",
=======
										"src": "2636:6:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2598:6:3",
=======
										"src": "2644:6:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2606:6:3",
=======
										"src": "2652:6:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value3",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "2614:6:3",
										"type": ""
									}
								],
								"src": "2504:391:3"
=======
										"src": "2660:6:3",
										"type": ""
									}
								],
								"src": "2550:391:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "3074:181:3",
=======
									"src": "3120:181:3",
>>>>>>> dev_split
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3091:9:3"
=======
														"src": "3137:9:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3102:2:3",
=======
														"src": "3148:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3084:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3084:21:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3084:21:3"
=======
													"src": "3130:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3130:21:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3130:21:3"
>>>>>>> dev_split
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "3125:9:3"
=======
																"src": "3171:9:3"
>>>>>>> dev_split
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
<<<<<<< HEAD
																"src": "3136:2:3",
=======
																"src": "3182:2:3",
>>>>>>> dev_split
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "3121:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3121:18:3"
=======
															"src": "3167:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3167:18:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3141:2:3",
=======
														"src": "3187:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "31"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3114:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3114:30:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3114:30:3"
=======
													"src": "3160:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3160:30:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3160:30:3"
>>>>>>> dev_split
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "3164:9:3"
=======
																"src": "3210:9:3"
>>>>>>> dev_split
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
<<<<<<< HEAD
																"src": "3175:2:3",
=======
																"src": "3221:2:3",
>>>>>>> dev_split
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "3160:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3160:18:3"
=======
															"src": "3206:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3206:18:3"
>>>>>>> dev_split
													},
													{
														"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
														"kind": "string",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3180:33:3",
=======
														"src": "3226:33:3",
>>>>>>> dev_split
														"type": "",
														"value": "ReentrancyGuard: reentrant call"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3153:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3153:61:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3153:61:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "3223:26:3",
=======
													"src": "3199:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3199:61:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3199:61:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "3269:26:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3235:9:3"
=======
														"src": "3281:9:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3246:2:3",
=======
														"src": "3292:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3231:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3231:18:3"
=======
													"src": "3277:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3277:18:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3223:4:3"
=======
													"src": "3269:4:3"
>>>>>>> dev_split
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3051:9:3",
=======
										"src": "3097:9:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3065:4:3",
										"type": ""
									}
								],
								"src": "2900:355:3"
=======
										"src": "3111:4:3",
										"type": ""
									}
								],
								"src": "2946:355:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "3292:95:3",
=======
									"src": "3338:152:3",
>>>>>>> dev_split
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3309:1:3",
=======
														"src": "3355:1:3",
>>>>>>> dev_split
														"type": "",
														"value": "0"
													},
													{
<<<<<<< HEAD
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3316:3:3",
																"type": "",
																"value": "224"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3321:10:3",
																"type": "",
																"value": "0x4e487b71"
															}
														],
														"functionName": {
															"name": "shl",
															"nodeType": "YulIdentifier",
															"src": "3312:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3312:20:3"
=======
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3358:77:3",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3302:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3302:31:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3302:31:3"
=======
													"src": "3348:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3348:88:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3348:88:3"
>>>>>>> dev_split
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3349:1:3",
=======
														"src": "3452:1:3",
>>>>>>> dev_split
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3352:4:3",
=======
														"src": "3455:4:3",
>>>>>>> dev_split
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3342:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3342:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3342:15:3"
=======
													"src": "3445:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3445:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3445:15:3"
>>>>>>> dev_split
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3373:1:3",
=======
														"src": "3476:1:3",
>>>>>>> dev_split
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3376:4:3",
=======
														"src": "3479:4:3",
>>>>>>> dev_split
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3366:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3366:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3366:15:3"
=======
													"src": "3469:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3469:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3469:15:3"
>>>>>>> dev_split
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
								"src": "3260:127:3"
=======
								"src": "3306:184:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "3441:76:3",
=======
									"src": "3544:76:3",
>>>>>>> dev_split
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "3463:22:3",
=======
												"src": "3566:22:3",
>>>>>>> dev_split
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "3465:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "3465:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3465:18:3"
=======
																"src": "3568:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "3568:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3568:18:3"
>>>>>>> dev_split
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3457:1:3"
=======
														"src": "3560:1:3"
>>>>>>> dev_split
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3460:1:3"
=======
														"src": "3563:1:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3454:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3454:8:3"
											},
											"nodeType": "YulIf",
											"src": "3451:34:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "3494:17:3",
=======
													"src": "3557:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3557:8:3"
											},
											"nodeType": "YulIf",
											"src": "3554:34:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "3597:17:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3506:1:3"
=======
														"src": "3609:1:3"
>>>>>>> dev_split
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3509:1:3"
=======
														"src": "3612:1:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3502:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3502:9:3"
=======
													"src": "3605:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3605:9:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3494:4:3"
=======
													"src": "3597:4:3"
>>>>>>> dev_split
												}
											]
										}
									]
								},
								"name": "checked_sub_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3423:1:3",
=======
										"src": "3526:1:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3426:1:3",
=======
										"src": "3529:1:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "diff",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3432:4:3",
										"type": ""
									}
								],
								"src": "3392:125:3"
=======
										"src": "3535:4:3",
										"type": ""
									}
								],
								"src": "3495:125:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "3570:80:3",
=======
									"src": "3673:80:3",
>>>>>>> dev_split
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "3597:22:3",
=======
												"src": "3700:22:3",
>>>>>>> dev_split
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "3599:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "3599:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3599:18:3"
=======
																"src": "3702:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "3702:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3702:18:3"
>>>>>>> dev_split
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3586:1:3"
=======
														"src": "3689:1:3"
>>>>>>> dev_split
													},
													{
														"arguments": [
															{
																"name": "y",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "3593:1:3"
=======
																"src": "3696:1:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "not",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "3589:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3589:6:3"
=======
															"src": "3692:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3692:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3583:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3583:13:3"
											},
											"nodeType": "YulIf",
											"src": "3580:39:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "3628:16:3",
=======
													"src": "3686:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3686:13:3"
											},
											"nodeType": "YulIf",
											"src": "3683:39:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "3731:16:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3639:1:3"
=======
														"src": "3742:1:3"
>>>>>>> dev_split
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3642:1:3"
=======
														"src": "3745:1:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3635:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3635:9:3"
=======
													"src": "3738:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3738:9:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3628:3:3"
=======
													"src": "3731:3:3"
>>>>>>> dev_split
												}
											]
										}
									]
								},
								"name": "checked_add_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3553:1:3",
=======
										"src": "3656:1:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3556:1:3",
=======
										"src": "3659:1:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3562:3:3",
										"type": ""
									}
								],
								"src": "3522:128:3"
=======
										"src": "3665:3:3",
										"type": ""
									}
								],
								"src": "3625:128:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "3687:95:3",
=======
									"src": "3790:152:3",
>>>>>>> dev_split
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3704:1:3",
=======
														"src": "3807:1:3",
>>>>>>> dev_split
														"type": "",
														"value": "0"
													},
													{
<<<<<<< HEAD
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3711:3:3",
																"type": "",
																"value": "224"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3716:10:3",
																"type": "",
																"value": "0x4e487b71"
															}
														],
														"functionName": {
															"name": "shl",
															"nodeType": "YulIdentifier",
															"src": "3707:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3707:20:3"
=======
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3810:77:3",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3697:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3697:31:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3697:31:3"
=======
													"src": "3800:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3800:88:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3800:88:3"
>>>>>>> dev_split
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3744:1:3",
=======
														"src": "3904:1:3",
>>>>>>> dev_split
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3747:4:3",
=======
														"src": "3907:4:3",
>>>>>>> dev_split
														"type": "",
														"value": "0x12"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3737:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3737:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3737:15:3"
=======
													"src": "3897:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3897:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3897:15:3"
>>>>>>> dev_split
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3768:1:3",
=======
														"src": "3928:1:3",
>>>>>>> dev_split
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "3771:4:3",
=======
														"src": "3931:4:3",
>>>>>>> dev_split
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3761:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3761:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3761:15:3"
=======
													"src": "3921:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3921:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3921:15:3"
>>>>>>> dev_split
										}
									]
								},
								"name": "panic_error_0x12",
								"nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
								"src": "3655:127:3"
=======
								"src": "3758:184:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "3833:171:3",
=======
									"src": "3993:228:3",
>>>>>>> dev_split
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "3864:111:3",
=======
												"src": "4024:168:3",
>>>>>>> dev_split
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "3885:1:3",
=======
																	"src": "4045:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																},
																{
<<<<<<< HEAD
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3892:3:3",
																			"type": "",
																			"value": "224"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3897:10:3",
																			"type": "",
																			"value": "0x4e487b71"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nodeType": "YulIdentifier",
																		"src": "3888:3:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "3888:20:3"
=======
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "4048:77:3",
																	"type": "",
																	"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
>>>>>>> dev_split
																}
															],
															"functionName": {
																"name": "mstore",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "3878:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "3878:31:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3878:31:3"
=======
																"src": "4038:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "4038:88:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4038:88:3"
>>>>>>> dev_split
													},
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "3929:1:3",
=======
																	"src": "4146:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "4"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "3932:4:3",
=======
																	"src": "4149:4:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0x12"
																}
															],
															"functionName": {
																"name": "mstore",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "3922:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "3922:15:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3922:15:3"
=======
																"src": "4139:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "4139:15:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4139:15:3"
>>>>>>> dev_split
													},
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "3957:1:3",
=======
																	"src": "4174:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "3960:4:3",
=======
																	"src": "4177:4:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0x24"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "3950:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "3950:15:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3950:15:3"
=======
																"src": "4167:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "4167:15:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4167:15:3"
>>>>>>> dev_split
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3853:1:3"
=======
														"src": "4013:1:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3846:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3846:9:3"
											},
											"nodeType": "YulIf",
											"src": "3843:132:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "3984:14:3",
=======
													"src": "4006:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4006:9:3"
											},
											"nodeType": "YulIf",
											"src": "4003:189:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "4201:14:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3993:1:3"
=======
														"src": "4210:1:3"
>>>>>>> dev_split
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "3996:1:3"
=======
														"src": "4213:1:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "div",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3989:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3989:9:3"
=======
													"src": "4206:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4206:9:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "r",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "3984:1:3"
=======
													"src": "4201:1:3"
>>>>>>> dev_split
												}
											]
										}
									]
								},
								"name": "checked_div_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3818:1:3",
=======
										"src": "3978:1:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3821:1:3",
=======
										"src": "3981:1:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "r",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "3827:1:3",
										"type": ""
									}
								],
								"src": "3787:217:3"
=======
										"src": "3987:1:3",
										"type": ""
									}
								],
								"src": "3947:274:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "4166:162:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4176:26:3",
=======
									"src": "4383:162:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4393:26:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4188:9:3"
=======
														"src": "4405:9:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "4199:2:3",
=======
														"src": "4416:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4184:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4184:18:3"
=======
													"src": "4401:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4401:18:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4176:4:3"
=======
													"src": "4393:4:3"
>>>>>>> dev_split
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4218:9:3"
=======
														"src": "4435:9:3"
>>>>>>> dev_split
													},
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4229:6:3"
=======
														"src": "4446:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4211:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4211:25:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4211:25:3"
=======
													"src": "4428:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4428:25:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4428:25:3"
>>>>>>> dev_split
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "4256:9:3"
=======
																"src": "4473:9:3"
>>>>>>> dev_split
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
<<<<<<< HEAD
																"src": "4267:2:3",
=======
																"src": "4484:2:3",
>>>>>>> dev_split
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "4252:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4252:18:3"
=======
															"src": "4469:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4469:18:3"
>>>>>>> dev_split
													},
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4272:6:3"
=======
														"src": "4489:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4245:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4245:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4245:34:3"
=======
													"src": "4462:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4462:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4462:34:3"
>>>>>>> dev_split
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "4299:9:3"
=======
																"src": "4516:9:3"
>>>>>>> dev_split
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
<<<<<<< HEAD
																"src": "4310:2:3",
=======
																"src": "4527:2:3",
>>>>>>> dev_split
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "4295:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4295:18:3"
=======
															"src": "4512:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4512:18:3"
>>>>>>> dev_split
													},
													{
														"name": "value2",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4315:6:3"
=======
														"src": "4532:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4288:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4288:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4288:34:3"
=======
													"src": "4505:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4505:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4505:34:3"
>>>>>>> dev_split
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4119:9:3",
=======
										"src": "4336:9:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4130:6:3",
=======
										"src": "4347:6:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4138:6:3",
=======
										"src": "4355:6:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4146:6:3",
=======
										"src": "4363:6:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4157:4:3",
										"type": ""
									}
								],
								"src": "4009:319:3"
=======
										"src": "4374:4:3",
										"type": ""
									}
								],
								"src": "4226:319:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "4385:116:3",
=======
									"src": "4602:116:3",
>>>>>>> dev_split
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "4444:22:3",
=======
												"src": "4661:22:3",
>>>>>>> dev_split
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "4446:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "4446:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4446:18:3"
=======
																"src": "4663:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "4663:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4663:18:3"
>>>>>>> dev_split
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
<<<<<<< HEAD
																		"src": "4416:1:3"
=======
																		"src": "4633:1:3"
>>>>>>> dev_split
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
<<<<<<< HEAD
																	"src": "4409:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4409:9:3"
=======
																	"src": "4626:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4626:9:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "4402:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4402:17:3"
=======
															"src": "4619:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4619:17:3"
>>>>>>> dev_split
													},
													{
														"arguments": [
															{
																"name": "y",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "4424:1:3"
=======
																"src": "4641:1:3"
>>>>>>> dev_split
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
<<<<<<< HEAD
																				"src": "4435:1:3",
=======
																				"src": "4652:1:3",
>>>>>>> dev_split
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
<<<<<<< HEAD
																			"src": "4431:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4431:6:3"
=======
																			"src": "4648:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4648:6:3"
>>>>>>> dev_split
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
<<<<<<< HEAD
																		"src": "4439:1:3"
=======
																		"src": "4656:1:3"
>>>>>>> dev_split
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
<<<<<<< HEAD
																	"src": "4427:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4427:14:3"
=======
																	"src": "4644:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4644:14:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "gt",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "4421:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4421:21:3"
=======
															"src": "4638:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4638:21:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4398:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4398:45:3"
											},
											"nodeType": "YulIf",
											"src": "4395:71:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "4475:20:3",
=======
													"src": "4615:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4615:45:3"
											},
											"nodeType": "YulIf",
											"src": "4612:71:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "4692:20:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4490:1:3"
=======
														"src": "4707:1:3"
>>>>>>> dev_split
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4493:1:3"
=======
														"src": "4710:1:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4486:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4486:9:3"
=======
													"src": "4703:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4703:9:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "product",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4475:7:3"
=======
													"src": "4692:7:3"
>>>>>>> dev_split
												}
											]
										}
									]
								},
								"name": "checked_mul_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4364:1:3",
=======
										"src": "4581:1:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4367:1:3",
=======
										"src": "4584:1:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "product",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4373:7:3",
										"type": ""
									}
								],
								"src": "4333:168:3"
=======
										"src": "4590:7:3",
										"type": ""
									}
								],
								"src": "4550:168:3"
>>>>>>> dev_split
							},
							{
								"body": {
									"nodeType": "YulBlock",
<<<<<<< HEAD
									"src": "4627:476:3",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "4637:12:3",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4647:2:3",
=======
									"src": "4844:476:3",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "4854:12:3",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4864:2:3",
>>>>>>> dev_split
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "_1",
													"nodeType": "YulTypedName",
<<<<<<< HEAD
													"src": "4641:2:3",
=======
													"src": "4858:2:3",
>>>>>>> dev_split
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4665:9:3"
=======
														"src": "4882:9:3"
>>>>>>> dev_split
													},
													{
														"name": "_1",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4676:2:3"
=======
														"src": "4893:2:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4658:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4658:21:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4658:21:3"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "4688:27:3",
=======
													"src": "4875:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4875:21:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4875:21:3"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "4905:27:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4708:6:3"
=======
														"src": "4925:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4702:5:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4702:13:3"
=======
													"src": "4919:5:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4919:13:3"
>>>>>>> dev_split
											},
											"variables": [
												{
													"name": "length",
													"nodeType": "YulTypedName",
<<<<<<< HEAD
													"src": "4692:6:3",
=======
													"src": "4909:6:3",
>>>>>>> dev_split
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "4735:9:3"
=======
																"src": "4952:9:3"
>>>>>>> dev_split
															},
															{
																"name": "_1",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "4746:2:3"
=======
																"src": "4963:2:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "4731:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4731:18:3"
=======
															"src": "4948:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4948:18:3"
>>>>>>> dev_split
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4751:6:3"
=======
														"src": "4968:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4724:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4724:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4724:34:3"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "4767:10:3",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4776:1:3",
=======
													"src": "4941:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4941:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4941:34:3"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "4984:10:3",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4993:1:3",
>>>>>>> dev_split
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "i",
													"nodeType": "YulTypedName",
<<<<<<< HEAD
													"src": "4771:1:3",
=======
													"src": "4988:1:3",
>>>>>>> dev_split
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "4836:90:3",
=======
												"src": "5053:90:3",
>>>>>>> dev_split
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "headStart",
																					"nodeType": "YulIdentifier",
<<<<<<< HEAD
																					"src": "4865:9:3"
=======
																					"src": "5082:9:3"
>>>>>>> dev_split
																				},
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
<<<<<<< HEAD
																					"src": "4876:1:3"
=======
																					"src": "5093:1:3"
>>>>>>> dev_split
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
<<<<<<< HEAD
																				"src": "4861:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4861:17:3"
=======
																				"src": "5078:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5078:17:3"
>>>>>>> dev_split
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
<<<<<<< HEAD
																			"src": "4880:2:3",
=======
																			"src": "5097:2:3",
>>>>>>> dev_split
																			"type": "",
																			"value": "64"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
<<<<<<< HEAD
																		"src": "4857:3:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "4857:26:3"
=======
																		"src": "5074:3:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5074:26:3"
>>>>>>> dev_split
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
<<<<<<< HEAD
																							"src": "4899:6:3"
=======
																							"src": "5116:6:3"
>>>>>>> dev_split
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
<<<<<<< HEAD
																							"src": "4907:1:3"
=======
																							"src": "5124:1:3"
>>>>>>> dev_split
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
<<<<<<< HEAD
																						"src": "4895:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4895:14:3"
=======
																						"src": "5112:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5112:14:3"
>>>>>>> dev_split
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
<<<<<<< HEAD
																					"src": "4911:2:3"
=======
																					"src": "5128:2:3"
>>>>>>> dev_split
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
<<<<<<< HEAD
																				"src": "4891:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4891:23:3"
=======
																				"src": "5108:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5108:23:3"
>>>>>>> dev_split
																		}
																	],
																	"functionName": {
																		"name": "mload",
																		"nodeType": "YulIdentifier",
<<<<<<< HEAD
																		"src": "4885:5:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "4885:30:3"
=======
																		"src": "5102:5:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5102:30:3"
>>>>>>> dev_split
																}
															],
															"functionName": {
																"name": "mstore",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "4850:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "4850:66:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4850:66:3"
=======
																"src": "5067:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "5067:66:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "5067:66:3"
>>>>>>> dev_split
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4797:1:3"
=======
														"src": "5014:1:3"
>>>>>>> dev_split
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4800:6:3"
=======
														"src": "5017:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4794:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4794:13:3"
=======
													"src": "5011:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5011:13:3"
>>>>>>> dev_split
											},
											"nodeType": "YulForLoop",
											"post": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "4808:19:3",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "4810:15:3",
=======
												"src": "5025:19:3",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "5027:15:3",
>>>>>>> dev_split
														"value": {
															"arguments": [
																{
																	"name": "i",
																	"nodeType": "YulIdentifier",
<<<<<<< HEAD
																	"src": "4819:1:3"
=======
																	"src": "5036:1:3"
>>>>>>> dev_split
																},
																{
																	"name": "_1",
																	"nodeType": "YulIdentifier",
<<<<<<< HEAD
																	"src": "4822:2:3"
=======
																	"src": "5039:2:3"
>>>>>>> dev_split
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "4815:3:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "4815:10:3"
=======
																"src": "5032:3:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "5032:10:3"
>>>>>>> dev_split
														},
														"variableNames": [
															{
																"name": "i",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "4810:1:3"
=======
																"src": "5027:1:3"
>>>>>>> dev_split
															}
														]
													}
												]
											},
											"pre": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "4790:3:3",
												"statements": []
											},
											"src": "4786:140:3"
=======
												"src": "5007:3:3",
												"statements": []
											},
											"src": "5003:140:3"
>>>>>>> dev_split
										},
										{
											"body": {
												"nodeType": "YulBlock",
<<<<<<< HEAD
												"src": "4960:66:3",
=======
												"src": "5177:66:3",
>>>>>>> dev_split
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "headStart",
																					"nodeType": "YulIdentifier",
<<<<<<< HEAD
																					"src": "4989:9:3"
=======
																					"src": "5206:9:3"
>>>>>>> dev_split
																				},
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
<<<<<<< HEAD
																					"src": "5000:6:3"
=======
																					"src": "5217:6:3"
>>>>>>> dev_split
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
<<<<<<< HEAD
																				"src": "4985:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4985:22:3"
=======
																				"src": "5202:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5202:22:3"
>>>>>>> dev_split
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
<<<<<<< HEAD
																			"src": "5009:2:3",
=======
																			"src": "5226:2:3",
>>>>>>> dev_split
																			"type": "",
																			"value": "64"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
<<<<<<< HEAD
																		"src": "4981:3:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "4981:31:3"
=======
																		"src": "5198:3:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5198:31:3"
>>>>>>> dev_split
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
<<<<<<< HEAD
																	"src": "5014:1:3",
=======
																	"src": "5231:1:3",
>>>>>>> dev_split
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "mstore",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "4974:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "4974:42:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4974:42:3"
=======
																"src": "5191:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "5191:42:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "5191:42:3"
>>>>>>> dev_split
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4941:1:3"
=======
														"src": "5158:1:3"
>>>>>>> dev_split
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
<<<<<<< HEAD
														"src": "4944:6:3"
=======
														"src": "5161:6:3"
>>>>>>> dev_split
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "4938:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4938:13:3"
											},
											"nodeType": "YulIf",
											"src": "4935:91:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "5035:62:3",
=======
													"src": "5155:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5155:13:3"
											},
											"nodeType": "YulIf",
											"src": "5152:91:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "5252:62:3",
>>>>>>> dev_split
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
<<<<<<< HEAD
																"src": "5051:9:3"
=======
																"src": "5268:9:3"
>>>>>>> dev_split
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
<<<<<<< HEAD
																				"src": "5070:6:3"
=======
																				"src": "5287:6:3"
>>>>>>> dev_split
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
<<<<<<< HEAD
																				"src": "5078:2:3",
=======
																				"src": "5295:2:3",
>>>>>>> dev_split
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
<<<<<<< HEAD
																			"src": "5066:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5066:15:3"
=======
																			"src": "5283:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5283:15:3"
>>>>>>> dev_split
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
<<<<<<< HEAD
																				"src": "5087:2:3",
=======
																				"src": "5304:2:3",
>>>>>>> dev_split
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
<<<<<<< HEAD
																			"src": "5083:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5083:7:3"
=======
																			"src": "5300:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5300:7:3"
>>>>>>> dev_split
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
<<<<<<< HEAD
																	"src": "5062:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5062:29:3"
=======
																	"src": "5279:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5279:29:3"
>>>>>>> dev_split
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
<<<<<<< HEAD
															"src": "5047:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5047:45:3"
=======
															"src": "5264:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5264:45:3"
>>>>>>> dev_split
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
<<<<<<< HEAD
														"src": "5094:2:3",
=======
														"src": "5311:2:3",
>>>>>>> dev_split
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "5043:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5043:54:3"
=======
													"src": "5260:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5260:54:3"
>>>>>>> dev_split
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
<<<<<<< HEAD
													"src": "5035:4:3"
=======
													"src": "5252:4:3"
>>>>>>> dev_split
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4596:9:3",
=======
										"src": "4813:9:3",
>>>>>>> dev_split
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4607:6:3",
=======
										"src": "4824:6:3",
>>>>>>> dev_split
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
<<<<<<< HEAD
										"src": "4618:4:3",
										"type": ""
									}
								],
								"src": "4506:597:3"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_encode_tuple_t_struct$_StakingSummary_$467_memory_ptr__to_t_struct$_StakingSummary_$467_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        let memberValue0 := mload(add(value0, 0x40))\n        mstore(add(headStart, 0x40), mload(memberValue0))\n        mstore(add(headStart, 96), mload(add(memberValue0, 0x20)))\n        mstore(add(headStart, 128), mload(add(memberValue0, 0x40)))\n        mstore(add(headStart, 160), mload(add(memberValue0, 96)))\n        mstore(add(headStart, 192), mload(add(memberValue0, 128)))\n        mstore(add(headStart, 224), mload(add(memberValue0, 160)))\n        mstore(add(headStart, 256), mload(add(memberValue0, 192)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
=======
										"src": "4835:4:3",
										"type": ""
									}
								],
								"src": "4723:597:3"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_encode_tuple_t_struct$_StakingSummary_$467_memory_ptr__to_t_struct$_StakingSummary_$467_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        let memberValue0 := mload(add(value0, 0x40))\n        mstore(add(headStart, 0x40), mload(memberValue0))\n        mstore(add(headStart, 96), mload(add(memberValue0, 0x20)))\n        mstore(add(headStart, 128), mload(add(memberValue0, 0x40)))\n        mstore(add(headStart, 160), mload(add(memberValue0, 96)))\n        mstore(add(headStart, 192), mload(add(memberValue0, 128)))\n        mstore(add(headStart, 224), mload(add(memberValue0, 160)))\n        mstore(add(headStart, 256), mload(add(memberValue0, 192)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
>>>>>>> dev_split
					"id": 3,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
<<<<<<< HEAD
			"object": "",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8891CF0D GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC23A5CEA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xF93D4F8A EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F348B4E GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x5F348B4E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x71E3DB87 EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x1F7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x15A PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x5 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x267 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x64F JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x860 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x267 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35F PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH2 0xA69 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x15A PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x15A PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x3EC PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x3F4 PUSH2 0xCF0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x45BA11 PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x455 SWAP1 DUP5 SWAP1 PUSH2 0x103E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x469 PUSH2 0xF0F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB018F087 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH2 0x50B DUP4 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x557 JUMPI PUSH2 0x534 PUSH2 0x52C DUP3 PUSH1 0x1 SLOAD PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x547 PUSH2 0x52C DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMPDEST PUSH1 0x0 PUSH2 0x566 DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0xD8D JUMP JUMPDEST GT ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 PUSH2 0x57B DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xA0 ADD MSTORE POP PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x0 PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x80 ADD MSTORE SWAP1 MLOAD DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x604 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x62D JUMPI PUSH1 0x40 MLOAD PUSH4 0x36D26697 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x455 SWAP1 DUP5 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x67F PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x687 PUSH2 0xCF0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x740E33B PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE SLOAD DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x455 SWAP1 DUP5 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71F PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 PUSH2 0x79B DUP3 PUSH1 0xC0 ADD MLOAD PUSH2 0xD8D JUMP JUMPDEST GT PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x376115B3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE DUP1 MLOAD PUSH2 0x7D1 SWAP1 PUSH2 0xDA4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD GT PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH4 0x17CB436F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x834 PUSH2 0x82D PUSH1 0x6 SLOAD PUSH1 0x5 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xA PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x858 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x868 PUSH2 0xDF1 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x876 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF1A470D7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x907 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 DUP7 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP6 ADD DUP1 SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP7 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP8 ADD DUP1 SLOAD PUSH1 0xC0 DUP9 ADD MSTORE SWAP12 DUP12 MSTORE SWAP9 SWAP1 SWAP8 MSTORE SWAP4 DUP9 SWAP1 SSTORE SWAP1 DUP8 SWAP1 SSTORE SWAP3 DUP7 SWAP1 SSTORE SWAP2 DUP6 SWAP1 SSTORE SWAP2 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE SWAP2 SWAP1 SWAP3 SSTORE MLOAD TIMESTAMP LT ISZERO PUSH2 0xA04 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH2 0x9FA SWAP1 PUSH2 0x9F5 DUP4 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH2 0xA57 DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x0 EQ PUSH2 0xA96 JUMPI PUSH3 0x93A80 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xAA4 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA552CF1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E SWAP1 PUSH1 0x20 ADD PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xB2B PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD PUSH4 0x445A206B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4462D27 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP6 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x60 DUP2 ADD PUSH2 0xBE9 DUP4 DUP7 PUSH2 0x1055 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP1 DUP5 MSTORE PUSH1 0xB DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP4 PUSH2 0xC85 DUP2 DUP9 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xCB7 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x28746245 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7959F75 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xD31 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xD4A DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 DUP3 DUP5 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 DUP3 DUP5 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6F PUSH1 0x3C PUSH2 0xD9E DUP5 TIMESTAMP PUSH2 0x103E JUMP JUMPDEST SWAP1 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0xDBC SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0xE2F JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xE47 DUP5 PUSH2 0xE42 PUSH2 0x52C DUP8 PUSH1 0x1 SLOAD PUSH2 0xD75 JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0xE5A DUP5 PUSH2 0xE42 PUSH2 0x52C DUP8 PUSH1 0x1 SLOAD PUSH2 0xD75 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6F PUSH2 0xE75 DUP4 TIMESTAMP PUSH2 0x103E JUMP JUMPDEST PUSH2 0xE89 SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x10A5 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 DUP3 DUP5 PUSH2 0x103E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x10C4 JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0xF06 JUMPI PUSH2 0xF06 PUSH2 0x106D JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF68 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D1 DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD7 DUP6 PUSH2 0xF6D JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1050 JUMPI PUSH2 0x1050 PUSH2 0x1028 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1068 JUMPI PUSH2 0x1068 PUSH2 0x1028 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BF PUSH2 0x1028 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x10D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1103 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B ADDMOD GT 0xF8 0xB1 0xE7 0xC2 0x24 JUMPI 0xD3 0xE0 DELEGATECALL COINBASE MOD 0x4C DUP6 CALLDATASIZE SLOAD GT CALL SIGNEXTEND BASEFEE DUP11 0xBA 0x22 PUSH5 0x8124D87D58 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
			"sourceMap": "880:12723:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12593:412;;;:::i;:::-;;8674:1127;;;:::i;:::-;;;;;;168:4:3;210:3;199:9;195:19;187:27;;247:6;241:13;230:9;223:32;311:4;303:6;299:17;293:24;286:4;275:9;271:20;264:54;365:4;357:6;353:17;347:24;415:12;409:19;402:4;391:9;387:20;380:49;489:4;475:12;471:23;465:30;460:2;449:9;445:18;438:58;557:4;543:12;539:23;533:30;527:3;516:9;512:19;505:59;625:2;611:12;607:21;601:28;595:3;584:9;580:19;573:57;691:3;677:12;673:22;667:29;661:3;650:9;646:19;639:58;758:3;744:12;740:22;734:29;728:3;717:9;713:19;706:58;825:3;811:12;807:22;801:29;795:3;784:9;780:19;773:58;;14:823;;;;;8674:1127:2;;;;;;;;4409:93;;;;;;:::i;:::-;;:::i;11895:283::-;;;:::i;11687:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;11773:12:2;11743:4;11773:12;;;:6;:12;;;;;;;;:24;;11818:9;;11799:29;;11773:24;11799:18;;;:29;;;;;;;11773:24;;;;;11799:29;;;11687:149;;;;;1398:14:3;;1391:22;1373:41;;1457:14;;1450:22;1445:2;1430:18;;1423:50;1346:18;11687:149:2;1211:268:3;1511:21:2;;;;;-1:-1:-1;;;;;1511:21:2;;;;;;-1:-1:-1;;;;;1648:32:3;;;1630:51;;1618:2;1603:18;1511:21:2;1484:203:3;1382:26:2;;;;;;;;;1838:25:3;;;1826:2;1811:18;1382:26:2;1692:177:3;12184:403:2;;;:::i;10637:728::-;;;;;;:::i;:::-;;:::i;13011:488::-;;;:::i;:::-;;;2039:14:3;;2032:22;2014:41;;2002:2;1987:18;13011:488:2;1874:187:3;9913:95:2;;;:::i;1251:26::-;;;;;;5893:306;;;;;;:::i;:::-;;:::i;1459:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1414:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1538:21;;;;;-1:-1:-1;;;;;1538:21:2;;;1283:27;;;;;;7870:798;;;;;;:::i;:::-;;:::i;:::-;;;;2425:25:3;;;2481:2;2466:18;;2459:34;;;;2398:18;7870:798:2;2251:248:3;1212:33:2;;;;;;11371:204;;;:::i;10212:234::-;;;;;;:::i;:::-;;:::i;4713:1174::-;;;;;;:::i;:::-;;:::i;13505:96::-;;;:::i;12593:412::-;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;4259:20:2::1;:18;:20::i;:::-;3977:10:::2;:8;:10::i;:::-;12816::::3;12809:18;::::0;;;:6:::3;:18;::::0;;;;;;;12834:9:::3;::::0;12809:35;;:24:::3;;:35:::0;;;;;;::::3;;12805:103;;12876:21;;-1:-1:-1::0;;;12876:21:2::3;;;;;;;;;;;12805:103;12943:9;::::0;12918:18:::3;:35:::0;;;12972:10:::3;12918:18;12972:21:::0;12918:18;12972:21;;:26;;12918:24:::3;::::0;:18;12972:26:::3;::::0;12918:24;;12972:26:::3;:::i;:::-;::::0;;;-1:-1:-1;;1701:1:0;2628:7;:22;12593:412:2:o;8674:1127::-;8717:21;;:::i;:::-;8789:10;8750:23;8776:24;;;:12;:24;;;;;;;;;8750:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8871:85;;8920:25;;-1:-1:-1;;;8920:25:2;;;;;;;;;;;8871:85;8997:32;;;;;;;;8965:29;8997:32;;;;;;;;;;;;;;;;9057:33;9018:10;9057:21;:33::i;:::-;9040:50;;9133:15;9105:7;:13;;;:25;;;:43;9101:316;;;9346:60;9359:40;9372:6;9380:18;;9359:12;:40::i;:::-;9401:4;9346:12;:60::i;:::-;9198:129;9232:51;9245:10;:17;;;9264:18;;9232:12;:51::i;9198:129::-;:208;;;;:::i;:::-;9164:15;;;:242;9101:316;9476:1;9431:42;9446:10;:26;;;9431:14;:42::i;:::-;:46;9427:250;;;9493:15;9511:36;9529:10;:17;;;9511;:36::i;:::-;9561:13;;;;:30;;:40;-1:-1:-1;9427:250:2;;;9632:13;;;;9665:1;9632:30;;;;:34;9427:250;9687:13;;;;:23;;:32;9752:17;;9729:40;;9687:7;8674:1127;-1:-1:-1;8674:1127:2:o;4409:93::-;3678:9;:7;:9::i;:::-;4481:6:::1;:14:::0;;-1:-1:-1;;;;;;4481:14:2::1;-1:-1:-1::0;;;;;4481:14:2;;;::::1;::::0;;;::::1;::::0;;4409:93::o;11895:283::-;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;1744:1;2455:7;:18;3416:9:2::1;:7;:9::i;:::-;12037:13:::2;::::0;::::2;;:21;;:13:::0;:21:::2;12033:84;;;12081:25;;-1:-1:-1::0;;;12081:25:2::2;;;;;;;;;;;12033:84;12127:13;:20:::0;;-1:-1:-1;;12127:20:2::2;12143:4;12127:20:::0;;::::2;::::0;;;12157:9:::2;:14:::0;;12127:13:::2;::::0;12157:14:::2;::::0;12143:4;;12157:14:::2;:::i;12184:403::-:0;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;1744:1;2455:7;:18;4259:20:2::1;:18;:20::i;:::-;3977:10:::2;:8;:10::i;:::-;12400::::3;12393:18;::::0;;;:6:::3;:18;::::0;;;;;;;12418:9:::3;::::0;12393:35;;:24:::3;::::0;;::::3;:35:::0;;;;;;;::::3;;:43;;;12389:103;;;12459:22;;-1:-1:-1::0;;;12459:22:2::3;;;;;;;;;;;12389:103;12509:10;12502:18;::::0;;;:6:::3;:18;::::0;;;;;;;12527:9:::3;::::0;;12502:35;;12540:4:::3;12502:24:::0;;::::3;:35:::0;;;;;:42;;-1:-1:-1;;12502:42:2::3;::::0;::::3;::::0;;12565:9;12554:21;;:10:::3;:21:::0;;;;;:26;;12540:4;;12554:21;;:26:::3;::::0;12540:4;;12554:26:::3;:::i;10637:728::-:0;10738:7;3416:9;:7;:9::i;:::-;-1:-1:-1;;;;;10828:18:2;::::1;10806:19;10828:18:::0;;;:12:::1;:18;::::0;;;;;;;;10806:40;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;;::::0;;;;;10861:17;10857:502:::1;;11088:1;11046:38;11061:6;:22;;;11046:14;:38::i;:::-;:43;11042:118;;11116:29;;-1:-1:-1::0;;;11116:29:2::1;;;;;;;;;;;11042:118;11200:1;11174:23;::::0;::::1;:27:::0;11240:15:::1;11215:22;::::0;::::1;:40:::0;11295:13;;11277:32:::1;::::0;:17:::1;:32::i;:::-;11270:39:::0;10637:728;-1:-1:-1;;;10637:728:2:o;10857:502::-:1;-1:-1:-1::0;11347:1:2::1;::::0;10637:728;-1:-1:-1;;10637:728:2:o;3435:1::-:1;10637:728:::0;;;:::o;13011:488::-;13128:4;3416:9;:7;:9::i;:::-;4259:20:::1;:18;:20::i;:::-;13225:1:::2;13210:11;;:16;13206:79;;13249:25;;-1:-1:-1::0;;;13249:25:2::2;;;;;;;;;;;13206:79;13294:19;13316:46;13329:28;13342:11;;13355:1;13329:12;:28::i;:::-;13359:2;13316:12;:46::i;:::-;13388:9;::::0;13377:21:::2;::::0;;;:10:::2;:21;::::0;;;;;13294:68;;-1:-1:-1;13377:35:2;-1:-1:-1;13373:120:2::2;;;13435:4;13428:11;;;13011:488:::0;:::o;13373:120::-:2;13477:5;13470:12;;;13011:488:::0;:::o;9913:95::-;3416:9;:7;:9::i;:::-;9986:15:::1;9971:12;:30:::0;9913:95::o;5893:306::-;3678:9;:7;:9::i;:::-;6051:2:::1;6042:6;:11;6038:81;;;6076:32;;-1:-1:-1::0;;;6076:32:2::1;;;;;;;;;;;6038:81;6128:18;:27:::0;;;6170:22:::1;::::0;1838:25:3;;;6170:22:2::1;::::0;1826:2:3;1811:18;6170:22:2::1;;;;;;;;5893:306:::0;:::o;7870:798::-;7980:7;7989;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;1744:1;2455:7;:18;3416:9:2::1;:7;:9::i;:::-;-1:-1:-1::0;;;;;8139:18:2;::::2;8113:23;8139:18:::0;;;:12:::2;:18;::::0;;;;;;;8113:44;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;::::0;::::2;::::0;;;;;;;;;::::2;::::0;::::2;::::0;;;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;;;;8175:18;;;;;;;8168:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;8208:22;8233:15:::2;-1:-1:-1::0;8204:314:2::2;;;8279:1;8264:11;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8301:12:2;::::2;;::::0;;;:6:::2;:12;::::0;;;;;;;8320:9:::2;::::0;8301:29;;:18:::2;;:29:::0;;;;;8294:36;;-1:-1:-1;;8294:36:2::2;::::0;;8417:17;;8367:140:::2;::::0;8456:33:::2;8417:10:::0;8456:21:::2;:33::i;:::-;8367:28;:140::i;:::-;8344:163;;;;;;;8204:314;8543:1;8528:11;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8561:12:2;::::2;;::::0;;;:6:::2;:12;::::0;;;;;;;8580:9:::2;::::0;8561:29;;:18:::2;;:29:::0;;;;;8554:36;;-1:-1:-1;;8554:36:2::2;::::0;;8608:17;;8627:33:::2;8608:10:::0;8627:21:::2;:33::i;:::-;8600:61;;;;;3435:1;1701::0::0;2628:7;:22;7870:798:2;;;;-1:-1:-1;7870:798:2:o;11371:204::-;11415:7;11438:12;;11454:1;11438:17;11434:135;;11513:6;11497:12;;11479:15;:30;;;;:::i;:::-;11478:41;;;;:::i;:::-;11471:48;;11371:204;:::o;11434:135::-;-1:-1:-1;11557:1:2;;11371:204::o;10212:234::-;3678:9;:7;:9::i;:::-;10303:3:::1;10294:6;:12;10290:83;;;10329:33;;-1:-1:-1::0;;;10329:33:2::1;;;;;;;;;;;10290:83;10382:11;:20:::0;;;10417:22:::1;::::0;1838:25:3;;;10417:22:2::1;::::0;1826:2:3;1811:18;10417:22:2::1;1692:177:3::0;4713:1174:2;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;1744:1;2455:7;:18;3416:9:2::1;:7;:9::i;:::-;5003:1:::2;4993:6;:11;4989:78;;5027:29;;-1:-1:-1::0;;;5027:29:2::2;;;;;;;;;;;4989:78;-1:-1:-1::0;;;;;5152:18:2;::::2;;::::0;;;:12:::2;:18;::::0;;;;:25;:30;5148:91:::2;;5205:23;;-1:-1:-1::0;;;5205:23:2::2;;;;;;;;;;;5148:91;5264:1;5249:11;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;5275:12:2;::::2;;::::0;;;:6:::2;:12;::::0;;;;;;;;:31;;-1:-1:-1;;5275:31:2::2;5302:4;5275:31;::::0;;5589:166;;::::2;::::0;::::2;::::0;;;;;5424:15:::2;5589:166:::0;;::::2;::::0;;;;;;;;;5424:15;5589:166;;;5676:23:::2;5424:15:::0;5676:11;:23:::2;:::i;:::-;5589:166:::0;;5714:1:::2;5589:166;::::0;;::::2;::::0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5568:18:2;::::2;::::0;;;:12:::2;:18:::0;;;;;;:187;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;5822:58:::2;5835:6:::0;5843:9;5855:23:::2;5843:9:::0;5855:11;:23:::2;:::i;:::-;5822:58;::::0;;4211:25:3;;;4267:2;4252:18;;4245:34;;;;4295:18;;;4288:34;4199:2;4184:18;5822:58:2::2;;;;;;;-1:-1:-1::0;;1701:1:0;2628:7;:22;-1:-1:-1;;;4713:1174:2:o;13505:96::-;3416:9;:7;:9::i;:::-;4259:20:::1;:18;:20::i;:::-;13573:13:::2;:21:::0;;-1:-1:-1;;13573:21:2::2;::::0;;13505:96::o;4011:204::-;4132:13;;;;4127:82;;4168:30;;-1:-1:-1;;;4168:30:2;;;;;;;;;;;4127:82;4011:204::o;3711:231::-;3849:10;3842:18;;;;:6;:18;;;;;:30;;;3838:98;;3904:21;;-1:-1:-1;;;3904:21:2;;;;;;;;;;;6560:437;6690:17;;6663:7;;6686:61;;-1:-1:-1;6735:1:2;;6560:437;-1:-1:-1;6560:437:2:o;6686:61::-;6986:4;6939:43;6965:10;:16;;;6939:25;:43::i;:::-;6900:20;;;;6864:17;;:56;;6900:20;6864:56;:::i;:::-;:118;;;;:::i;:::-;6863:127;;;;:::i;:::-;6844:146;6560:437;-1:-1:-1;;6560:437:2:o;3451:96:1:-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;10014:192:2:-;10076:7;10159:40;10189:9;10160:23;10178:5;10160:15;:23;:::i;:::-;10159:29;;:40::i;10452:179::-;10547:7;10616:8;10608:4;10593:11;;10579;:25;;;;:::i;:::-;10578:34;;;;:::i;3449:192::-;3570:6;;-1:-1:-1;;;;;3570:6:2;3556:10;:20;3552:83;;3599:25;;-1:-1:-1;;;3599:25:2;;;;;;;;;;;3187:192;3308:6;;-1:-1:-1;;;;;3308:6:2;3294:10;:20;3290:83;;3337:25;;-1:-1:-1;;;3337:25:2;;;;;;;;;;;7003:521;7120:7;;7156:11;7152:55;;-1:-1:-1;7191:1:2;;-1:-1:-1;7191:1:2;7183:13;;7152:55;7237:128;7267:6;7291:60;7304:40;7317:6;7325:18;;7304:12;:40::i;7291:60::-;7237:12;:128::i;:::-;7379;7409:6;7433:60;7446:40;7459:6;7467:18;;7446:12;:40::i;7379:128::-;7216:301;;;;7003:521;;;;;;:::o;6205:349::-;6302:7;6396:151;6427:23;6445:5;6427:15;:23;:::i;:::-;6426:32;;6454:4;6426:32;:::i;:::-;6476:8;6396:151;;;;;;;;;;;;;;;;;:12;:151::i;3108:96:1:-;3166:7;3192:5;3196:1;3192;:5;:::i;5660:230::-;5776:7;5834:12;5827:5;5819:28;;;;-1:-1:-1;;;5819:28:1;;;;;;;;:::i;:::-;;5872:1;5868;:5;;;;;:::i;:::-;;;5660:230;-1:-1:-1;;;;5660:230:1:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;842:173:3:-;910:20;;-1:-1:-1;;;;;959:31:3;;949:42;;939:70;;1005:1;1002;995:12;1020:186;1079:6;1132:2;1120:9;1111:7;1107:23;1103:32;1100:52;;;1148:1;1145;1138:12;1100:52;1171:29;1190:9;1171:29;:::i;2066:180::-;2125:6;2178:2;2166:9;2157:7;2153:23;2149:32;2146:52;;;2194:1;2191;2184:12;2146:52;-1:-1:-1;2217:23:3;;2066:180;-1:-1:-1;2066:180:3:o;2504:391::-;2590:6;2598;2606;2614;2667:3;2655:9;2646:7;2642:23;2638:33;2635:53;;;2684:1;2681;2674:12;2635:53;2707:29;2726:9;2707:29;:::i;:::-;2697:39;2783:2;2768:18;;2755:32;;-1:-1:-1;2834:2:3;2819:18;;2806:32;;2885:2;2870:18;2857:32;;-1:-1:-1;2504:391:3;-1:-1:-1;;;2504:391:3:o;2900:355::-;3102:2;3084:21;;;3141:2;3121:18;;;3114:30;3180:33;3175:2;3160:18;;3153:61;3246:2;3231:18;;2900:355::o;3260:127::-;3321:10;3316:3;3312:20;3309:1;3302:31;3352:4;3349:1;3342:15;3376:4;3373:1;3366:15;3392:125;3432:4;3460:1;3457;3454:8;3451:34;;;3465:18;;:::i;:::-;-1:-1:-1;3502:9:3;;3392:125::o;3522:128::-;3562:3;3593:1;3589:6;3586:1;3583:13;3580:39;;;3599:18;;:::i;:::-;-1:-1:-1;3635:9:3;;3522:128::o;3655:127::-;3716:10;3711:3;3707:20;3704:1;3697:31;3747:4;3744:1;3737:15;3771:4;3768:1;3761:15;3787:217;3827:1;3853;3843:132;;3897:10;3892:3;3888:20;3885:1;3878:31;3932:4;3929:1;3922:15;3960:4;3957:1;3950:15;3843:132;-1:-1:-1;3989:9:3;;3787:217::o;4333:168::-;4373:7;4439:1;4435;4431:6;4427:14;4424:1;4421:21;4416:1;4409:9;4402:17;4398:45;4395:71;;;4446:18;;:::i;:::-;-1:-1:-1;4486:9:3;;4333:168::o;4506:597::-;4618:4;4647:2;4676;4665:9;4658:21;4708:6;4702:13;4751:6;4746:2;4735:9;4731:18;4724:34;4776:1;4786:140;4800:6;4797:1;4794:13;4786:140;;;4895:14;;;4891:23;;4885:30;4861:17;;;4880:2;4857:26;4850:66;4815:10;;4786:140;;;4944:6;4941:1;4938:13;4935:91;;;5014:1;5009:2;5000:6;4989:9;4985:22;4981:31;4974:42;4935:91;-1:-1:-1;5087:2:3;5066:15;-1:-1:-1;;5062:29:3;5047:45;;;;5094:2;5043:54;;4506:597;-1:-1:-1;;;4506:597:3:o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "886200",
				"executionCost": "115723",
				"totalCost": "1001923"
			},
			"external": {
				"_owner()": "2448",
				"_talax()": "2360",
				"airdropRate()": "2318",
				"airdropSince()": "2428",
				"airdropWeek()": "4635",
				"changeAirdropPercentage(uint256)": "25679",
				"changePenaltyFee(uint256)": "25625",
				"changeTalaxAddress(address)": "26803",
				"claimAirdrop(address)": "infinite",
				"getVoters(address)": "6990",
=======
			"object": "",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8891CF0D GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xC23A5CEA GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD5DBDF1B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xF93D4F8A EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3EC138D GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F348B4E GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x65F8C6C5 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x71E3DB87 EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F348B4E EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D77B00B GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x19C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A PUSH2 0x3F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x68B JUMP JUMPDEST PUSH2 0x27D PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x5 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x213 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x2C8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x74F JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x983 JUMP JUMPDEST PUSH2 0x2C8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x2C8 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x19A PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0xC3A JUMP JUMPDEST PUSH2 0x19A PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x458 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x460 PUSH2 0xEAA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8B74220000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x4DB SWAP1 DUP5 SWAP1 PUSH2 0x11DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x4EF PUSH2 0x10E2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB018F08700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH2 0x5AA DUP4 PUSH2 0xEF3 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5D3 PUSH2 0x5CB DUP3 PUSH1 0x1 SLOAD PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x5CB DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMPDEST PUSH1 0x0 PUSH2 0x605 DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0xF67 JUMP JUMPDEST GT ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 PUSH2 0x61A DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xA0 ADD MSTORE POP PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x0 PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x80 ADD MSTORE SWAP1 MLOAD DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x651 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x6DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x6EB PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6DA4CD2E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4DB SWAP1 DUP5 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x7AF PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x7B7 PUSH2 0xEAA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x740E33B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE SLOAD DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x4DB SWAP1 DUP5 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x8E7 JUMPI PUSH2 0x88A DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD8456CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8CF DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 ADD SSTORE TIMESTAMP PUSH1 0x6 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FA PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0x902 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD GT PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH32 0x2F9686DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x957 PUSH2 0x950 PUSH1 0x6 SLOAD PUSH1 0x5 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0xA PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x97B JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x98B PUSH2 0xFC4 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x999 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF1A470D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xA73 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP5 ADD DUP1 SLOAD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD DUP1 SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP7 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP1 DUP9 ADD DUP1 SLOAD PUSH1 0xC0 DUP10 ADD MSTORE SWAP13 DUP13 MSTORE SWAP10 SWAP1 SWAP9 MSTORE SWAP5 DUP10 SWAP1 SSTORE SWAP1 DUP9 SWAP1 SSTORE SWAP4 DUP8 SWAP1 SSTORE SWAP3 DUP7 SWAP1 SSTORE SWAP1 DUP6 SWAP1 SSTORE SWAP2 DUP5 SWAP1 SSTORE SWAP4 DUP4 SWAP1 SSTORE DUP2 SLOAD SWAP1 SWAP4 SWAP3 SWAP1 PUSH2 0xB13 SWAP1 DUP5 SWAP1 PUSH2 0x11DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0xB72 JUMPI DUP1 MLOAD PUSH2 0xB68 SWAP1 PUSH2 0xB63 DUP4 PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0xFEF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0xB83 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xB7D DUP3 PUSH2 0xEF3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x0 EQ PUSH2 0xBBC JUMPI PUSH3 0x93A80 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xBAD SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xBCA PUSH2 0xF99 JUMP JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA552CF1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E SWAP1 PUSH1 0x20 ADD PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xC9A PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x88B440D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4462D2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD37 SWAP2 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP6 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x60 DUP2 ADD PUSH2 0xD8A DUP4 DUP7 PUSH2 0x11F6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP1 DUP5 MSTORE PUSH1 0xB DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP4 PUSH2 0xE26 DUP2 DUP9 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xE58 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0xE60 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D1891400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E567DD400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xF04 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xF1D DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1039 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0xF42 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF54 DUP3 DUP5 PUSH2 0x1246 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF54 DUP3 DUP5 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 PUSH2 0xF38 DUP4 TIMESTAMP PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0xF8F SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0x1002 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x101A DUP5 PUSH2 0x1015 PUSH2 0x5CB DUP8 PUSH1 0x1 SLOAD PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST PUSH2 0x102D DUP5 PUSH2 0x1015 PUSH2 0x5CB DUP8 PUSH1 0x1 SLOAD PUSH2 0xF48 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF42 PUSH2 0x1048 DUP4 TIMESTAMP PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x105C SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1246 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF54 DUP3 DUP5 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x10D9 JUMPI PUSH2 0x10D9 PUSH2 0x120E JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113B PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x116E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF54 DUP3 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11AF DUP6 PUSH2 0x1140 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11F1 JUMPI PUSH2 0x11F1 PUSH2 0x11C9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1209 JUMPI PUSH2 0x1209 PUSH2 0x11C9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1241 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1260 JUMPI PUSH2 0x1260 PUSH2 0x11C9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1292 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1276 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x12A4 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xA9CDFBE030969A78DDCE57C067CAE6A0AC DUP8 SWAP4 MOD XOR GASLIMIT 0xD1 SWAP15 0xCD 0xC2 0xE0 DELEGATECALL LOG2 0xED OR PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
			"sourceMap": "880:12436:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12306:412;;;:::i;:::-;;8601:1127;;;:::i;:::-;;;;;;168:4:3;210:3;199:9;195:19;187:27;;247:6;241:13;230:9;223:32;311:4;303:6;299:17;293:24;286:4;275:9;271:20;264:54;365:4;357:6;353:17;347:24;415:12;409:19;402:4;391:9;387:20;380:49;489:4;475:12;471:23;465:30;460:2;449:9;445:18;438:58;557:4;543:12;539:23;533:30;527:3;516:9;512:19;505:59;625:2;611:12;607:21;601:28;595:3;584:9;580:19;573:57;691:3;677:12;673:22;667:29;661:3;650:9;646:19;639:58;758:3;744:12;740:22;734:29;728:3;717:9;713:19;706:58;825:3;811:12;807:22;801:29;795:3;784:9;780:19;773:58;;14:823;;;;;8601:1127:2;;;;;;;;4409:93;;;;;;:::i;:::-;;:::i;11608:283::-;;;:::i;11400:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;11486:12:2;11456:4;11486:12;;;:6;:12;;;;;;;;:24;;11531:9;;11512:29;;11486:24;11512:18;;;:29;;;;;;;11486:24;;;;;11512:29;;;11400:149;;;;;1421:14:3;;1414:22;1396:41;;1480:14;;1473:22;1468:2;1453:18;;1446:50;1369:18;11400:149:2;1234:268:3;1511:21:2;;;;;-1:-1:-1;;;;;1511:21:2;;;;;;-1:-1:-1;;;;;1671:55:3;;;1653:74;;1641:2;1626:18;1511:21:2;1507:226:3;1382:26:2;;;;;;;;;1884:25:3;;;1872:2;1857:18;1382:26:2;1738:177:3;11897:403:2;;;:::i;10501:577::-;;;;;;:::i;:::-;;:::i;12724:488::-;;;:::i;:::-;;;2085:14:3;;2078:22;2060:41;;2048:2;2033:18;12724:488:2;1920:187:3;9840:95:2;;;:::i;1251:26::-;;;;;;5893:306;;;;;;:::i;:::-;;:::i;1459:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1414:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1538:21;;;;;-1:-1:-1;;;;;1538:21:2;;;1283:27;;;;;;7870:725;;;;;;:::i;:::-;;:::i;:::-;;;;2471:25:3;;;2527:2;2512:18;;2505:34;;;;2444:18;7870:725:2;2297:248:3;1212:33:2;;;;;;11084:204;;;:::i;9941:234::-;;;;;;:::i;:::-;;:::i;4713:1174::-;;;;;;:::i;:::-;;:::i;13218:96::-;;;:::i;12306:412::-;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;3148:2:3;2317:63:0;;;3130:21:3;3187:2;3167:18;;;3160:30;3226:33;3206:18;;;3199:61;3277:18;;2317:63:0;;;;;;;;;1744:1;2455:7;:18;4259:20:2::1;:18;:20::i;:::-;3977:10:::2;:8;:10::i;:::-;12529::::3;12522:18;::::0;;;:6:::3;:18;::::0;;;;;;;12547:9:::3;::::0;12522:35;;:24:::3;;:35:::0;;;;;;::::3;;12518:103;;12589:21;;;;;;;;;;;;;;12518:103;12656:9;::::0;12631:18:::3;:35:::0;;;12685:10:::3;12631:18;12685:21:::0;12631:18;12685:21;;:26;;12631:24:::3;::::0;:18;12685:26:::3;::::0;12631:24;;12685:26:::3;:::i;:::-;::::0;;;-1:-1:-1;;1701:1:0;2628:7;:22;12306:412:2:o;8601:1127::-;8644:21;;:::i;:::-;8716:10;8677:23;8703:24;;;:12;:24;;;;;;;;;8677:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8798:85;;8847:25;;;;;;;;;;;;;;8798:85;8924:32;;;;;;;;8892:29;8924:32;;;;;;;;;;;;;;;;8984:33;8945:10;8984:21;:33::i;:::-;8967:50;;9060:15;9032:7;:13;;;:25;;;:43;9028:316;;;9273:60;9286:40;9299:6;9307:18;;9286:12;:40::i;:::-;9328:4;9273:12;:60::i;:::-;9125:129;9159:51;9172:10;:17;;;9191:18;;9159:12;:51::i;9125:129::-;:208;;;;:::i;:::-;9091:15;;;:242;9028:316;9403:1;9358:42;9373:10;:26;;;9358:14;:42::i;:::-;:46;9354:250;;;9420:15;9438:36;9456:10;:17;;;9438;:36::i;:::-;9488:13;;;;:30;;:40;-1:-1:-1;9354:250:2;;;9559:13;;;;9592:1;9559:30;;;;:34;9354:250;9614:13;;;;:23;;:32;9679:17;;9656:40;;9614:7;8601:1127;-1:-1:-1;8601:1127:2:o;4409:93::-;3678:9;:7;:9::i;:::-;4481:6:::1;:14:::0;;;::::1;-1:-1:-1::0;;;;;4481:14:2;;;::::1;::::0;;;::::1;::::0;;4409:93::o;11608:283::-;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;3148:2:3;2317:63:0;;;3130:21:3;3187:2;3167:18;;;3160:30;3226:33;3206:18;;;3199:61;3277:18;;2317:63:0;2946:355:3;2317:63:0;1744:1;2455:7;:18;3416:9:2::1;:7;:9::i;:::-;11750:13:::2;::::0;::::2;;:21;;:13:::0;:21:::2;11746:84;;;11794:25;;;;;;;;;;;;;;11746:84;11840:13;:20:::0;;-1:-1:-1;;11840:20:2::2;11856:4;11840:20:::0;;::::2;::::0;;;11870:9:::2;:14:::0;;11840:13:::2;::::0;11870:14:::2;::::0;11856:4;;11870:14:::2;:::i;11897:403::-:0;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;3148:2:3;2317:63:0;;;3130:21:3;3187:2;3167:18;;;3160:30;3226:33;3206:18;;;3199:61;3277:18;;2317:63:0;2946:355:3;2317:63:0;1744:1;2455:7;:18;4259:20:2::1;:18;:20::i;:::-;3977:10:::2;:8;:10::i;:::-;12113::::3;12106:18;::::0;;;:6:::3;:18;::::0;;;;;;;12131:9:::3;::::0;12106:35;;:24:::3;::::0;;::::3;:35:::0;;;;;;;::::3;;:43;;;12102:103;;;12172:22;;;;;;;;;;;;;;12102:103;12222:10;12215:18;::::0;;;:6:::3;:18;::::0;;;;;;;12240:9:::3;::::0;;12215:35;;12253:4:::3;12215:24:::0;;::::3;:35:::0;;;;;:42;;-1:-1:-1;;12215:42:2::3;::::0;::::3;::::0;;12278:9;12267:21;;:10:::3;:21:::0;;;;;:26;;12253:4;;12267:21;;:26:::3;::::0;12253:4;;12267:26:::3;:::i;10501:577::-:0;-1:-1:-1;;;;;10649:18:2;;10555:7;10649:18;;;:12;:18;;;;;10682:13;;:17;10678:394;;10719:38;10734:6;:22;;;10719:14;:38::i;:::-;10715:118;;10789:29;;;;;;;;;;;;;;10715:118;10847:15;10865:32;10883:6;:13;;;10865:17;:32::i;:::-;10938:1;10912:23;;;:27;10978:15;10953:22;;;;:40;;;;-1:-1:-1;10847:50:2;10501:577;-1:-1:-1;;10501:577:2:o;10678:394::-;-1:-1:-1;11060:1:2;;10501:577;-1:-1:-1;;10501:577:2:o;12724:488::-;12841:4;3416:9;:7;:9::i;:::-;4259:20:::1;:18;:20::i;:::-;12938:1:::2;12923:11;;:16;12919:79;;12962:25;;;;;;;;;;;;;;12919:79;13007:19;13029:46;13042:28;13055:11;;13068:1;13042:12;:28::i;:::-;13072:2;13029:12;:46::i;:::-;13101:9;::::0;13090:21:::2;::::0;;;:10:::2;:21;::::0;;;;;13007:68;;-1:-1:-1;13090:35:2;-1:-1:-1;13086:120:2::2;;;13148:4;13141:11;;;12724:488:::0;:::o;13086:120::-:2;13190:5;13183:12;;;12724:488:::0;:::o;9840:95::-;3416:9;:7;:9::i;:::-;9913:15:::1;9898:12;:30:::0;9840:95::o;5893:306::-;3678:9;:7;:9::i;:::-;6051:2:::1;6042:6;:11;6038:81;;;6076:32;;;;;;;;;;;;;;6038:81;6128:18;:27:::0;;;6170:22:::1;::::0;1884:25:3;;;6170:22:2::1;::::0;1872:2:3;1857:18;6170:22:2::1;;;;;;;;5893:306:::0;:::o;7870:725::-;7980:7;7989;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;3148:2:3;2317:63:0;;;3130:21:3;3187:2;3167:18;;;3160:30;3226:33;3206:18;;;3199:61;3277:18;;2317:63:0;2946:355:3;2317:63:0;1744:1;2455:7;:18;3416:9:2::1;:7;:9::i;:::-;-1:-1:-1::0;;;;;8146:18:2;::::2;8120:23;8146:18:::0;;;:12:::2;:18;::::0;;;;;;;8120:44;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;::::2;::::0;;;;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;;;;;8182:18;;;;;;;8175:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;8210:16;;8120:44;;;:23;8210:16:::2;::::0;8120:44;;8210:16:::2;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8243:12:2;::::2;;::::0;;;:6:::2;:12;::::0;;;;;;;8262:9:::2;::::0;8243:29;;:18:::2;;:29:::0;;;;;8236:36;;-1:-1:-1;;8236:36:2::2;::::0;;8287:22:::2;::::0;::::2;::::0;8312:15:::2;-1:-1:-1::0;8283:234:2::2;;;8416:17:::0;;8366:140:::2;::::0;8455:33:::2;8416:10:::0;8455:21:::2;:33::i;:::-;8366:28;:140::i;:::-;8343:163;;;;;;;8283:234;8535:17:::0;;8554:33:::2;8535:10:::0;8554:21:::2;:33::i;:::-;8527:61;;;;;3435:1;1701::0::0;2628:7;:22;7870:725:2;;;;-1:-1:-1;7870:725:2:o;11084:204::-;11128:7;11151:12;;11167:1;11151:17;11147:135;;11226:6;11210:12;;11192:15;:30;;;;:::i;:::-;11191:41;;;;:::i;:::-;11184:48;;11084:204;:::o;11147:135::-;-1:-1:-1;11270:1:2;;11084:204::o;9941:234::-;3678:9;:7;:9::i;:::-;10032:3:::1;10023:6;:12;10019:83;;;10058:33;;;;;;;;;;;;;;10019:83;10111:11;:20:::0;;;10146:22:::1;::::0;1884:25:3;;;10146:22:2::1;::::0;1872:2:3;1857:18;10146:22:2::1;1738:177:3::0;4713:1174:2;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;3148:2:3;2317:63:0;;;3130:21:3;3187:2;3167:18;;;3160:30;3226:33;3206:18;;;3199:61;3277:18;;2317:63:0;2946:355:3;2317:63:0;1744:1;2455:7;:18;3416:9:2::1;:7;:9::i;:::-;5003:1:::2;4993:6;:11;4989:78;;5027:29;;;;;;;;;;;;;;4989:78;-1:-1:-1::0;;;;;5152:18:2;::::2;;::::0;;;:12:::2;:18;::::0;;;;:25;:30;5148:91:::2;;5205:23;;;;;;;;;;;;;;5148:91;5264:1;5249:11;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;5275:12:2;::::2;;::::0;;;:6:::2;:12;::::0;;;;;;;;:31;;-1:-1:-1;;5275:31:2::2;5302:4;5275:31;::::0;;5589:166;;::::2;::::0;::::2;::::0;;;;;5424:15:::2;5589:166:::0;;::::2;::::0;;;;;;;;;5424:15;5589:166;;;5676:23:::2;5424:15:::0;5676:11;:23:::2;:::i;:::-;5589:166:::0;;5714:1:::2;5589:166;::::0;;::::2;::::0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5568:18:2;::::2;::::0;;;:12:::2;:18:::0;;;;;;:187;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;5822:58:::2;5835:6:::0;5843:9;5855:23:::2;5843:9:::0;5855:11;:23:::2;:::i;:::-;5822:58;::::0;;4428:25:3;;;4484:2;4469:18;;4462:34;;;;4512:18;;;4505:34;4416:2;4401:18;5822:58:2::2;;;;;;;-1:-1:-1::0;;1701:1:0;2628:7;:22;-1:-1:-1;;;4713:1174:2:o;13218:96::-;3416:9;:7;:9::i;:::-;4259:20:::1;:18;:20::i;:::-;13286:13:::2;:21:::0;;-1:-1:-1;;13286:21:2::2;::::0;;13218:96::o;4011:204::-;4132:13;;;;4127:82;;4168:30;;;;;;;;;;;;;;4127:82;4011:204::o;3711:231::-;3849:10;3842:18;;;;:6;:18;;;;;:30;;;3838:98;;3904:21;;;;;;;;;;;;;;6560:437;6690:17;;6663:7;;6686:61;;-1:-1:-1;6735:1:2;;6560:437;-1:-1:-1;6560:437:2:o;6686:61::-;6986:4;6939:43;6965:10;:16;;;6939:25;:43::i;:::-;6900:20;;;;6864:17;;:56;;6900:20;6864:56;:::i;:::-;:118;;;;:::i;:::-;6863:127;;;;:::i;:::-;6844:146;6560:437;-1:-1:-1;;6560:437:2:o;3451:96:1:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:1:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;10181:129:2:-;10243:7;10297:6;10270:23;10288:5;10270:15;:23;:::i;10316:179::-;10411:7;10480:8;10472:4;10457:11;;10443;:25;;;;:::i;:::-;10442:34;;;;:::i;3449:192::-;3570:6;;-1:-1:-1;;;;;3570:6:2;3556:10;:20;3552:83;;3599:25;;-1:-1:-1;;;3599:25:2;;;;;;;;;;;3187:192;3308:6;;-1:-1:-1;;;;;3308:6:2;3294:10;:20;3290:83;;3337:25;;-1:-1:-1;;;3337:25:2;;;;;;;;;;;7003:521;7120:7;;7156:11;7152:55;;-1:-1:-1;7191:1:2;;-1:-1:-1;7191:1:2;7183:13;;7152:55;7237:128;7267:6;7291:60;7304:40;7317:6;7325:18;;7304:12;:40::i;7291:60::-;7237:12;:128::i;:::-;7379;7409:6;7433:60;7446:40;7459:6;7467:18;;7446:12;:40::i;7379:128::-;7216:301;;;;7003:521;;;;;;:::o;6205:349::-;6302:7;6396:151;6427:23;6445:5;6427:15;:23;:::i;:::-;6426:32;;6454:4;6426:32;:::i;:::-;6476:8;6396:151;;;;;;;;;;;;;;;;;:12;:151::i;3108:96:1:-;3166:7;3192:5;3196:1;3192;:5;:::i;5660:230::-;5776:7;5834:12;5827:5;5819:28;;;;-1:-1:-1;;;5819:28:1;;;;;;;;:::i;:::-;;5872:1;5868;:5;;;;;:::i;:::-;;;5660:230;-1:-1:-1;;;;5660:230:1:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;842:196:3:-;910:20;;-1:-1:-1;;;;;959:54:3;;949:65;;939:93;;1028:1;1025;1018:12;939:93;842:196;;;:::o;1043:186::-;1102:6;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1194:29;1213:9;1194:29;:::i;2112:180::-;2171:6;2224:2;2212:9;2203:7;2199:23;2195:32;2192:52;;;2240:1;2237;2230:12;2192:52;-1:-1:-1;2263:23:3;;2112:180;-1:-1:-1;2112:180:3:o;2550:391::-;2636:6;2644;2652;2660;2713:3;2701:9;2692:7;2688:23;2684:33;2681:53;;;2730:1;2727;2720:12;2681:53;2753:29;2772:9;2753:29;:::i;:::-;2743:39;2829:2;2814:18;;2801:32;;-1:-1:-1;2880:2:3;2865:18;;2852:32;;2931:2;2916:18;2903:32;;-1:-1:-1;2550:391:3;-1:-1:-1;;;2550:391:3:o;3306:184::-;-1:-1:-1;;;3355:1:3;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3495:125;3535:4;3563:1;3560;3557:8;3554:34;;;3568:18;;:::i;:::-;-1:-1:-1;3605:9:3;;3495:125::o;3625:128::-;3665:3;3696:1;3692:6;3689:1;3686:13;3683:39;;;3702:18;;:::i;:::-;-1:-1:-1;3738:9:3;;3625:128::o;3758:184::-;-1:-1:-1;;;3807:1:3;3800:88;3907:4;3904:1;3897:15;3931:4;3928:1;3921:15;3947:274;3987:1;4013;4003:189;;-1:-1:-1;;;4045:1:3;4038:88;4149:4;4146:1;4139:15;4177:4;4174:1;4167:15;4003:189;-1:-1:-1;4206:9:3;;3947:274::o;4550:168::-;4590:7;4656:1;4652;4648:6;4644:14;4641:1;4638:21;4633:1;4626:9;4619:17;4615:45;4612:71;;;4663:18;;:::i;:::-;-1:-1:-1;4703:9:3;;4550:168::o;4723:597::-;4835:4;4864:2;4893;4882:9;4875:21;4925:6;4919:13;4968:6;4963:2;4952:9;4948:18;4941:34;4993:1;5003:140;5017:6;5014:1;5011:13;5003:140;;;5112:14;;;5108:23;;5102:30;5078:17;;;5097:2;5074:26;5067:66;5032:10;;5003:140;;;5161:6;5158:1;5155:13;5152:91;;;5231:1;5226:2;5217:6;5206:9;5202:22;5198:31;5191:42;5152:91;-1:-1:-1;5304:2:3;5283:15;-1:-1:-1;;5279:29:3;5264:45;;;;5311:2;5260:54;;4723:597;-1:-1:-1;;;4723:597:3:o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "969600",
				"executionCost": "115809",
				"totalCost": "1085409"
			},
			"external": {
				"_owner()": "2404",
				"_talax()": "2383",
				"airdropRate()": "2341",
				"airdropSince()": "2384",
				"airdropWeek()": "4658",
				"changeAirdropPercentage(uint256)": "25635",
				"changePenaltyFee(uint256)": "25648",
				"changeTalaxAddress(address)": "26766",
				"claimAirdrop(address)": "infinite",
				"getVoters(address)": "6968",
>>>>>>> dev_split
				"getVotingResult()": "infinite",
				"hasStake()": "infinite",
				"retractVote()": "infinite",
				"stake(address,uint256,uint256,uint256)": "infinite",
<<<<<<< HEAD
				"stakingPenaltyRate()": "2339",
				"startAirdropSince()": "24546",
				"startVoting()": "82302",
				"stopVoting()": "infinite",
				"totalVoters()": "2340",
				"vote()": "infinite",
				"votedUsers(uint256)": "2505",
				"voters(address)": "2620",
=======
				"stakingPenaltyRate()": "2362",
				"startAirdropSince()": "24502",
				"startVoting()": "82280",
				"stopVoting()": "infinite",
				"totalVoters()": "2363",
				"vote()": "infinite",
				"votedUsers(uint256)": "2528",
				"voters(address)": "2576",
>>>>>>> dev_split
				"withdrawStake(address)": "infinite"
			},
			"internal": {
				"_calculateAirdrop(uint256)": "infinite",
				"_calculateStakeReward(struct Stakable.Stake memory)": "infinite",
				"_calculateStakingDuration(uint256)": "infinite",
				"_calculateStakingWithPenalty(uint256,uint256)": "infinite",
<<<<<<< HEAD
				"_calculateWeek(uint256)": "193",
=======
				"_calculateWeek(uint256)": "151",
>>>>>>> dev_split
				"_checkVotingStatus()": "infinite",
				"_isVoter()": "infinite",
				"isOwner()": "infinite",
				"isTalax()": "infinite"
			}
		},
		"methodIdentifiers": {
			"_owner()": "b2bdfa7b",
			"_talax()": "5f348b4e",
			"airdropRate()": "8891cf0d",
			"airdropSince()": "b87da76d",
			"airdropWeek()": "cbb3e152",
			"changeAirdropPercentage(uint256)": "d5dbdf1b",
			"changePenaltyFee(uint256)": "8c63f97f",
			"changeTalaxAddress(address)": "1d77b00b",
			"claimAirdrop(address)": "65f8c6c5",
			"getVoters(address)": "2d15cc04",
			"getVotingResult()": "671d2b75",
			"hasStake()": "10486b6a",
			"retractVote()": "070c8b74",
			"stake(address,uint256,uint256,uint256)": "f93d4f8a",
			"stakingPenaltyRate()": "cb79c2e1",
			"startAirdropSince()": "71e3db87",
			"startVoting()": "1ec6b60a",
			"stopVoting()": "fab2f86b",
			"totalVoters()": "5f5300ff",
			"vote()": "632a9a52",
			"votedUsers(uint256)": "a143a5f2",
			"voters(address)": "a3ec138d",
			"withdrawStake(address)": "c23a5cea"
		}
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "Airdrop__claimableOnceAWeek",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Function__notAVoter",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Function__notAuthorized",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Function__votingNotAvailable",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Staking__airdropExceed20Percent",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Staking__cannotStakeNothing",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Staking__noStakingFound",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Staking__penaltyExceed3Percent",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Staking__userIsStaker",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Voting__alreadyVoted",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Voting__notEnoughVoters",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Voting__notYetVoted",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "Voting__votingIsRunning",
			"type": "error"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "AirdropChanged",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "PenaltyChanged",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "user",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "timestamp",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "releaseTime",
					"type": "uint256"
				}
			],
			"name": "Staked",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "_owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "_talax",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "airdropRate",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "airdropSince",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "airdropWeek",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "changeAirdropPercentage",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "changePenaltyFee",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "talax",
					"type": "address"
				}
			],
			"name": "changeTalaxAddress",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "user",
					"type": "address"
				}
			],
			"name": "claimAirdrop",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
<<<<<<< HEAD
			"stateMutability": "view",
=======
			"stateMutability": "nonpayable",
>>>>>>> dev_split
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "user",
					"type": "address"
				}
			],
			"name": "getVoters",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				},
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getVotingResult",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "hasStake",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "total_amount",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "penalty",
							"type": "uint256"
						},
						{
							"components": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "since",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardAPY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimable",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimableAirdrop",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "latestClaimDrop",
									"type": "uint256"
								}
							],
							"internalType": "struct Stakable.Stake",
							"name": "stake",
							"type": "tuple"
						}
					],
					"internalType": "struct Stakable.StakingSummary",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "retractVote",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "user",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "stakePeriod",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "rewardRate",
					"type": "uint256"
				}
			],
			"name": "stake",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "stakingPenaltyRate",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "startAirdropSince",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "startVoting",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "stopVoting",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalVoters",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "vote",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "votedUsers",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "voters",
			"outputs": [
				{
					"internalType": "bool",
					"name": "votingRight",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "user",
					"type": "address"
				}
			],
			"name": "withdrawStake",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}