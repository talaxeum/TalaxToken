{
	"compiler": {
		"version": "0.8.11+commit.d7f03943"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "who",
						"type": "address"
					}
				],
				"name": "AddPrivatePlacement",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "who",
						"type": "address"
					}
				],
				"name": "AddStrategicPartner",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "ChangeDevPoolAddress",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "ChangeLiquidityReserveAddress",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "ChangePublicSaleAddress",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "who",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ChangeTax",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "who",
						"type": "address"
					}
				],
				"name": "DeletePrivatePlacement",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "who",
						"type": "address"
					}
				],
				"name": "DeleteStrategicPartner",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "releaseTime",
						"type": "uint256"
					}
				],
				"name": "Staked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "_taxFee",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount_",
						"type": "uint256"
					}
				],
				"name": "addPrivatePlacementUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount_",
						"type": "uint256"
					}
				],
				"name": "addStrategicPartnerUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount_",
						"type": "uint256"
					}
				],
				"name": "burnStakingReward",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "new_",
						"type": "address"
					}
				],
				"name": "changeDevPoolAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "new_",
						"type": "address"
					}
				],
				"name": "changeLiquidityReserveAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "new_",
						"type": "address"
					}
				],
				"name": "changePublicSaleAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "taxFee_",
						"type": "uint16"
					}
				],
				"name": "changeTaxFee",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user_",
						"type": "address"
					}
				],
				"name": "deletePrivatePlacementUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user_",
						"type": "address"
					}
				],
				"name": "deleteStrategicPartnerUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "devPool",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "devPoolLockedWallet",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_staker",
						"type": "address"
					}
				],
				"name": "hasStake",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "total_amount",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "user",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "since",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "claimable",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "rewardAPY",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "releaseTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Stakable.Stake[]",
								"name": "stakes",
								"type": "tuple[]"
							}
						],
						"internalType": "struct Stakable.StakingSummary",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount_",
						"type": "uint256"
					}
				],
				"name": "mintLiquidityReserve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount_",
						"type": "uint256"
					}
				],
				"name": "mintStakingReward",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "privatePlacement",
				"outputs": [
					{
						"internalType": "contract MultiLockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "privatePlacementLockedWallet",
				"outputs": [
					{
						"internalType": "contract MultiLockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "releasePrivatePlacement",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "releaseStrategicPartner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_stakePeriod",
						"type": "uint256"
					}
				],
				"name": "stake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user_",
						"type": "address"
					}
				],
				"name": "stakeSummary",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "total_amount",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "user",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "since",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "claimable",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "rewardAPY",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "releaseTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Stakable.Stake[]",
								"name": "stakes",
								"type": "tuple[]"
							}
						],
						"internalType": "struct Stakable.StakingSummary",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "stakingPackage",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stratPartner",
				"outputs": [
					{
						"internalType": "contract MultiLockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "strategicPartnerLockedWallet",
				"outputs": [
					{
						"internalType": "contract MultiLockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "taxFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "teamAndProject",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "teamAndProjectCoordinatorLockedWallet",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockDevPoolWallet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockTeamAndProjectCoordinatorWallet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stake_index",
						"type": "uint256"
					}
				],
				"name": "withdrawAllStake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "stake_index",
						"type": "uint256"
					}
				],
				"name": "withdrawStake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addPrivatePlacementUser(address,uint256)": {
					"details": "MultiLockedWallet: PrivatePlacement Locked Wallet"
				},
				"addStrategicPartnerUser(address,uint256)": {
					"details": "MultiLockedWallet: Strategic Partner Locked Wallet"
				},
				"allowance(address,address)": {
					"details": "See {BEP20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {BEP20-balanceOf}."
				},
				"changePublicSaleAddress(address)": {
					"details": "Transfer all the balance of an address, delete the old address, and change to new address"
				},
				"decimals()": {
					"details": "Returns the token decimals."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"getOwner()": {
					"details": "Returns the bep token owner."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"mint(uint256)": {
					"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
				},
				"name()": {
					"details": "Returns the token name."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"symbol()": {
					"details": "Returns the token symbol."
				},
				"totalSupply()": {
					"details": "See {BEP20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"unlockDevPoolWallet()": {
					"details": "LockedWallet: Dev Pool Locked Wallet"
				},
				"unlockTeamAndProjectCoordinatorWallet()": {
					"details": "LockedWallet: Team And Project Coordinator Locked Wallet"
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"Staked(address,uint256,uint256,uint256,uint256)": {
					"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
				}
			},
			"kind": "user",
			"methods": {
				"stake(uint256,uint256)": {
					"notice": "Add functionality like burn to the _stake afunction"
				},
				"withdrawStake(uint256,uint256)": {
					"notice": "withdrawStake is used to withdraw stakes from the account holder"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TalaxToken.sol": "TalaxToken"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Lockable.sol": {
			"keccak256": "0x8865f176df7a5224fd38b6b40838ce6b9c8b62228f31f60cce9e187007a07b46",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://0ef583cf74477a5860a4c93bf8328ff8c953110d3c0492eeb6aa3f8c0a32205b",
				"dweb:/ipfs/QmPj5e7GWgqw6CAqAXxT6M73RMqQfxy8iu6Jp7kiTkDYSr"
			]
		},
		"contracts/MultiLockable.sol": {
			"keccak256": "0x980202034e2d89e0590b0c3c5776d92ba9889c5591db4174f08da840459a69ef",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://660fd86ea8401c0b7640edc9bb723e8c6004216010ee0a6f666b887d8075d2d6",
				"dweb:/ipfs/QmcMe4ybZ4Yh9E8VaAcRx4vLUPkgytuzrMV8PWuQ6oxQDW"
			]
		},
		"contracts/Stakable.sol": {
			"keccak256": "0x4ffe6ae61d7f8f67b9f0e43da2b5b2c36f47541cb694c0aa982e126dde8042a5",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://d91f97cc5e0103c34087677e9d24e011d0ba486510c6ca7b520c2e187cdddd85",
				"dweb:/ipfs/QmYB6LF548kXVyoeSoG1dQmnELU32gtbfVRf55ZjUMF7Mx"
			]
		},
		"contracts/TalaxToken.sol": {
			"keccak256": "0xeb60912d54ebf055daebfdbd118c4b239e48e58ef60b4d397ceace8cfc5d3e30",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://50d22e0bdc7a2e966c882dbd69084a34d806037e9172065848211eb7c3172182",
				"dweb:/ipfs/QmZsmSTp3HnuSB9b9dyRTWcoaEGkY7cZU3mf2AyaYuPZPZ"
			]
		},
		"contracts/src/Context.sol": {
			"keccak256": "0xb09771a2aa95d090a5d341949df9dff69ba05a49628bde0051c44bae0c9b2174",
			"license": "MIT",
			"urls": [
				"bzz-raw://6046cb4b6f132ef00908f34e063c9910728116ba97d999ec8704a17dd5aaf006",
				"dweb:/ipfs/QmZdkPYpyxoJiGDrZ6Fm6TLGTm7ZAHWTkkrhWN7hZnYWpf"
			]
		},
		"contracts/src/IBEP20.sol": {
			"keccak256": "0xdab64dae3bc3d188f774d4682e510e767c0c6337a5595ea1c83bfcd6aa213efd",
			"license": "MIT",
			"urls": [
				"bzz-raw://de2bb477e03b80bfcb37c7af4662e5fe4b81e7e27746dde9eb32e26e839b5783",
				"dweb:/ipfs/QmeMKmri2cYnkLQjK5QFhjjC8D7Un4UxKm2MNNhY9xUYyC"
			]
		},
		"contracts/src/Ownable.sol": {
			"keccak256": "0xae2aa587b9bbfe3696fd047df5c440588d9b11dd9d24f4a1193e275481ba86f1",
			"license": "MIT",
			"urls": [
				"bzz-raw://a84554503ad0276266608b07d45b9a7f1e9fd600905465308e205573906f046e",
				"dweb:/ipfs/QmYY9onFV9bqqSCMabvEU3hSLzSCuMxsGDvRUAHWsjiUAg"
			]
		},
		"contracts/src/SafeMath.sol": {
			"keccak256": "0x26c42438ed4e0123075ad481a0a9afa299fe96e2ee6035d307c592dc47146054",
			"license": "MIT",
			"urls": [
				"bzz-raw://3f7be313b9b8acece0b811f210b176f7f72530c3d7cbf5666c7e2d8801c989db",
				"dweb:/ipfs/QmQrJhxun7YTyBbVmKDTbPjdP8iuAwSwrmHQjkuEcThFqr"
			]
		}
	},
	"version": 1
}