{
	"compiler": {
		"version": "0.8.11+commit.d7f03943"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "who",
						"type": "address"
					}
				],
				"name": "AddPrivatePlacement",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "who",
						"type": "address"
					}
				],
				"name": "AddStrategicPartner",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "who",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ChangeTax",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "who",
						"type": "address"
					}
				],
				"name": "DeletePrivatePlacement",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "who",
						"type": "address"
					}
				],
				"name": "DeleteStrategicPartner",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "releaseTime",
						"type": "uint256"
					}
				],
				"name": "Staked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "_taxFee",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "blockTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount_",
						"type": "uint256"
					}
				],
				"name": "burnStakingReward",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "devPoolLockedWallet_1",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "devPoolLockedWallet_2",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "devPoolLockedWallet_3",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_staker",
						"type": "address"
					}
				],
				"name": "hasStake",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "total_amount",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "user",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "since",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "claimable",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "rewardAPY",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "releaseTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Stakable.Stake[]",
								"name": "stakes",
								"type": "tuple[]"
							}
						],
						"internalType": "struct Stakable.StakingSummary",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityReserveBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount_",
						"type": "uint256"
					}
				],
				"name": "mintLiquidityReserve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount_",
						"type": "uint256"
					}
				],
				"name": "mintStakingReward",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "privatePlacement",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "privatePlacementLockedWallet",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_stakePeriod",
						"type": "uint256"
					}
				],
				"name": "stake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user_",
						"type": "address"
					}
				],
				"name": "stakeSummary",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "total_amount",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "user",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "since",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "claimable",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "rewardAPY",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "releaseTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Stakable.Stake[]",
								"name": "stakes",
								"type": "tuple[]"
							}
						],
						"internalType": "struct Stakable.StakingSummary",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "stakingPackage",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stakingRewardAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "strategicPartnerLockedWallet_1",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "strategicPartnerLockedWallet_2",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "strategicPartnerLockedWallet_3",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "taxFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "teamAndProjectCoordinatorLockedWallet_1",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "teamAndProjectCoordinatorLockedWallet_2",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "teamAndProjectCoordinatorLockedWallet_3",
				"outputs": [
					{
						"internalType": "contract Lockable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index_",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "user_",
						"type": "address"
					}
				],
				"name": "testCalculateDuration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockDevPoolWallet_1",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockDevPoolWallet_2",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockDevPoolWallet_3",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockPrivatePlacementWallet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockStrategicPartnerWallet_1",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockStrategicPartnerWallet_2",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockStrategicPartnerWallet_3",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockTeamAndProjectCoordinatorWallet_1",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockTeamAndProjectCoordinatorWallet_2",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockTeamAndProjectCoordinatorWallet_3",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stake_index",
						"type": "uint256"
					}
				],
				"name": "withdrawAllStake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "stake_index",
						"type": "uint256"
					}
				],
				"name": "withdrawStake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {BEP20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {BEP20-balanceOf}."
				},
				"decimals()": {
					"details": "Returns the token decimals."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"getOwner()": {
					"details": "Returns the bep token owner."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"mint(uint256)": {
					"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
				},
				"name()": {
					"details": "Returns the token name."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"symbol()": {
					"details": "Returns the token symbol."
				},
				"totalSupply()": {
					"details": "See {BEP20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"unlockDevPoolWallet_1()": {
					"details": "LockedWallet: Dev Pool Locked Wallet"
				},
				"unlockPrivatePlacementWallet()": {
					"details": "LockedWallet: Team And Project Coordinator Locked Wallet"
				},
				"unlockStrategicPartnerWallet_1()": {
					"details": "LockedWallet: Team And Project Coordinator Locked Wallet"
				},
				"unlockTeamAndProjectCoordinatorWallet_1()": {
					"details": "LockedWallet: Team And Project Coordinator Locked Wallet"
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"Staked(address,uint256,uint256,uint256,uint256)": {
					"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
				}
			},
			"kind": "user",
			"methods": {
				"privatePlacementLockedWallet()": {
					"notice": "Lockable Object"
				},
				"stake(uint256,uint256)": {
					"notice": "Add functionality like burn to the _stake afunction"
				},
				"withdrawStake(uint256,uint256)": {
					"notice": "withdrawStake is used to withdraw stakes from the account holder"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TalaxToken.sol": "TalaxToken"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Lockable.sol": {
			"keccak256": "0x8f2ea02b1cc36f5c51909ddad86f2103058cfb6416d009f429f1d7389f77c529",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://7fef1106a937c99f4c4c4906e2076d5ea31ff5efcf9799f55c82656cdfe67d90",
				"dweb:/ipfs/QmZ8qtpkwfRinJCypLSWrzuMiZRX5BTQ95kYMHvyVp2iu4"
			]
		},
		"contracts/Stakable.sol": {
			"keccak256": "0xa3b0cb153c5d69b5b90ba9ca5730b941b44044030c489975e87307af9cfa2f83",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://5ab052ea895c9e83ac24af9b0b630ee03e2afd40ef193b18211e161ad410f0fa",
				"dweb:/ipfs/QmcakFujRjgKKnTWM5okfbUtyaNuajduYW2wRH5CF7yB13"
			]
		},
		"contracts/TalaxToken.sol": {
			"keccak256": "0x50898034ea0234d627bcb9f5033a296a019d93726ecb1e12e81ccb6b9d8ab2fb",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://3c59fdb5ee58b223908c037bc51b6825770e9b9ead1b692dddbb5bbaec850034",
				"dweb:/ipfs/QmXMV6wNr19ZS26G6Yvos7FUgJB6LU7ek3ytbqkjyQiGm7"
			]
		},
		"contracts/src/Context.sol": {
			"keccak256": "0x01a4620f87841deb1ed89bc8d496e1fe55bb761860b5caffb4d7bb37e858daae",
			"license": "MIT",
			"urls": [
				"bzz-raw://e6816580e7d2fb79319f5bd067006b23b8df7d1071ce0e6287631808bc9fa063",
				"dweb:/ipfs/QmXXPT2capxxeMeR8DwVBRc2f6PAFwTK9zikAtvYRDuWC7"
			]
		},
		"contracts/src/IBEP20.sol": {
			"keccak256": "0x8bb39b9ed6ede95659193d7172234fc1769b7e78f91cc770944362577ea53375",
			"license": "MIT",
			"urls": [
				"bzz-raw://47138e0ce5c9087335afef84d7ffb0025f217e5f1c4955e2e00c937e08876284",
				"dweb:/ipfs/QmT4saS8i33tQnon7zYUy64YgnZVstN7gU4R7RBNqmwEKC"
			]
		},
		"contracts/src/Ownable.sol": {
			"keccak256": "0x70709ae841a12ea85d4686ea62fb28d3d82e95e72c404e02e01b811367971716",
			"license": "MIT",
			"urls": [
				"bzz-raw://f2ef7af7457c7fe132920f20e5b94d70f162c8ca546b39dcabbacee438f9ab52",
				"dweb:/ipfs/QmVuvgGAiSdAXBCrCm9DrTGb4rL2QC51osxu3pnou6NsY5"
			]
		},
		"contracts/src/SafeMath.sol": {
			"keccak256": "0x48dd4b2fbb2593a14f12e43718768f59039beee161378683ae242c488d26618b",
			"license": "MIT",
			"urls": [
				"bzz-raw://36a6804cf690a61ac7e28ca12f3f584413ef5321a0e54c4130b8a9652292a08c",
				"dweb:/ipfs/QmaGRrYqMxYrqqnqUGDQPWGHy7omFMGJiKgBiGb28ZT1AS"
			]
		}
	},
	"version": 1
}